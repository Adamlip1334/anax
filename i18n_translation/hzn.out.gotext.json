{
    "language": "en",
//  START NON-TRANSLATABLE
    "messages": [
        {
            "id": "{Image} parsed into: domain={Domain}, path={Path}, tag={Tag}",
            "message": "{Image} parsed into: domain={Domain}, path={Path}, tag={Tag}",
//  END NON-TRANSLATABLE
            "translation": "{Image} parsed into: domain={Domain}, path={Path}, tag={Tag}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Image",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "image"
                },
                {
                    "id": "Domain",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "domain"
                },
                {
                    "id": "Path",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "path"
                },
                {
                    "id": "Tag",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "tag"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: could not parse image path '{Image}'. Not pushing it to a docker registry, just including it in the 'deployment' field as-is.",
            "message": "Warning: could not parse image path '{Image}'. Not pushing it to a docker registry, just including it in the 'deployment' field as-is.",
//  END NON-TRANSLATABLE
            "translation": "Warning: could not parse image path '{Image}'. Not pushing it to a docker registry, just including it in the 'deployment' field as-is.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Image",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "image"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Using '{NewImage}' in 'deployment' field instead of '{Image}'",
            "message": "Using '{NewImage}' in 'deployment' field instead of '{Image}'",
//  END NON-TRANSLATABLE
            "translation": "Using '{NewImage}' in 'deployment' field instead of '{Image}'",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NewImage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "newImage"
                },
                {
                    "id": "Image",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "image"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal deployment string {Dep}, error {Err}",
            "message": "failed to marshal deployment string {Dep}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal deployment string {Dep}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dep",
                    "string": "%[1]v",
                    "type": "map[string]interface{}",
                    "underlyingType": "map[string]interface{}",
                    "argNum": 1,
                    "expr": "dep"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem signing deployment string with {KeyFilePath}: {Err}",
            "message": "problem signing deployment string with {KeyFilePath}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "problem signing deployment string with {KeyFilePath}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "each service defined under 'deployment.services' must be a json object (with strings as the keys)",
            "message": "each service defined under 'deployment.services' must be a json object (with strings as the keys)",
//  END NON-TRANSLATABLE
            "translation": "each service defined under 'deployment.services' must be a json object (with strings as the keys)",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "service '{SvcName}' defined under 'deployment.services' does not have mandatory 'image' field",
            "message": "service '{SvcName}' defined under 'deployment.services' does not have mandatory 'image' field",
//  END NON-TRANSLATABLE
            "translation": "service '{SvcName}' defined under 'deployment.services' does not have mandatory 'image' field",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "service '{SvcName}' defined under 'deployment.services' has unrecognized field '{K}'. See https://github.com/open-horizon/anax/blob/master/doc/deployment_string.md",
            "message": "service '{SvcName}' defined under 'deployment.services' has unrecognized field '{K}'. See https://github.com/open-horizon/anax/blob/master/doc/deployment_string.md",
//  END NON-TRANSLATABLE
            "translation": "service '{SvcName}' defined under 'deployment.services' has unrecognized field '{K}'. See https://github.com/open-horizon/anax/blob/master/doc/deployment_string.md",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcName"
                },
                {
                    "id": "K",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "k"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the 'deployment' field must contain the 'services' field, whose value must be a json object (with strings as the keys)",
            "message": "the 'deployment' field must contain the 'services' field, whose value must be a json object (with strings as the keys)",
//  END NON-TRANSLATABLE
            "translation": "the 'deployment' field must contain the 'services' field, whose value must be a json object (with strings as the keys)",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "the 'deployment' field must contain either the native Horizon deployment config or the Helm deployment config, whose value must be a json object (with strings as the keys)",
            "message": "the 'deployment' field must contain either the native Horizon deployment config or the Helm deployment config, whose value must be a json object (with strings as the keys)",
//  END NON-TRANSLATABLE
            "translation": "the 'deployment' field must contain either the native Horizon deployment config or the Helm deployment config, whose value must be a json object (with strings as the keys)",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start file sync service, {Sserr}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start file sync service, {Sserr}",
//  END NON-TRANSLATABLE
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start file sync service, {Sserr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_START_COMMAND"
                },
                {
                    "id": "Sserr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "sserr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to get service dependencies, {Derr}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to get service dependencies, {Derr}",
//  END NON-TRANSLATABLE
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to get service dependencies, {Derr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_START_COMMAND"
                },
                {
                    "id": "Derr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "derr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Starting dependencies.",
            "message": "Starting dependencies.",
//  END NON-TRANSLATABLE
            "translation": "Starting dependencies.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start service dependencies, {Perr}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start service dependencies, {Perr}",
//  END NON-TRANSLATABLE
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to start service dependencies, {Perr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_START_COMMAND"
                },
                {
                    "id": "Perr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "perr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to generate test agreementId, {Aerr}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to generate test agreementId, {Aerr}",
//  END NON-TRANSLATABLE
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to generate test agreementId, {Aerr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_START_COMMAND"
                },
                {
                    "id": "Aerr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "aerr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTOPCOMMAND}' unable to stop service dependencies, {Err}",
            "message": "'{SERVICECOMMAND} {SERVICESTOPCOMMAND}' unable to stop service dependencies, {Err}",
//  END NON-TRANSLATABLE
            "translation": "'{SERVICECOMMAND} {SERVICESTOPCOMMAND}' unable to stop service dependencies, {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTOPCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_STOP_COMMAND"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to stop file sync service, {Sserr}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to stop file sync service, {Sserr}",
//  END NON-TRANSLATABLE
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' unable to stop file sync service, {Sserr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_START_COMMAND"
                },
                {
                    "id": "Sserr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "sserr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Stopped service.",
            "message": "Stopped service.",
//  END NON-TRANSLATABLE
            "translation": "Stopped service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[verbose] {M}",
            "message": "[verbose] {M}",
//  END NON-TRANSLATABLE
            "translation": "[verbose] {M}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "M",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "m"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error: {Msg}",
            "message": "Error: {Msg}",
//  END NON-TRANSLATABLE
            "translation": "Error: {Msg}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: {Msg}",
            "message": "Warning: {Msg}",
//  END NON-TRANSLATABLE
            "translation": "Warning: {Msg}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal bytes from {ErrMsg}: {Err}",
            "message": "failed to unmarshal bytes from {ErrMsg}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to unmarshal bytes from {ErrMsg}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ErrMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "errMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal data type from {ErrMsg}: {Err}",
            "message": "failed to marshal data type from {ErrMsg}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal data type from {ErrMsg}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ErrMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "errMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem testing api key match: {Err}",
            "message": "problem testing api key match: {Err}",
//  END NON-TRANSLATABLE
            "translation": "problem testing api key match: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Using API key",
            "message": "Using API key",
//  END NON-TRANSLATABLE
            "translation": "Using API key",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to create docker client: {Err}",
            "message": "unable to create docker client: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to create docker client: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "docker auth domainName: {DomainName}",
            "message": "docker auth domainName: {DomainName}",
//  END NON-TRANSLATABLE
            "translation": "docker auth domainName: {DomainName}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DomainName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "domainName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to find docker credentials for {Domain}",
            "message": "unable to find docker credentials for {Domain}",
//  END NON-TRANSLATABLE
            "translation": "unable to find docker credentials for {Domain}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Domain",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "domain"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Pushing {Repository}:{Tag}...",
            "message": "Pushing {Repository}:{Tag}...",
//  END NON-TRANSLATABLE
            "translation": "Pushing {Repository}:{Tag}...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository"
                },
                {
                    "id": "Tag",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "tag"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not get docker credentials from ~/.docker/config.json: {Err}. Maybe you need to run 'docker login ...' to provide credentials for the image registry.",
            "message": "could not get docker credentials from ~/.docker/config.json: {Err}. Maybe you need to run 'docker login ...' to provide credentials for the image registry.",
//  END NON-TRANSLATABLE
            "translation": "could not get docker credentials from ~/.docker/config.json: {Err}. Maybe you need to run 'docker login ...' to provide credentials for the image registry.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to push docker image {Repository____tag}: {Err}",
            "message": "unable to push docker image {Repository____tag}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to push docker image {Repository____tag}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository____tag",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository + \":\" + tag"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not find the image digest in the docker push output",
            "message": "could not find the image digest in the docker push output",
//  END NON-TRANSLATABLE
            "translation": "could not find the image digest in the docker push output",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Pulling {Repository}:{Tag}...",
            "message": "Pulling {Repository}:{Tag}...",
//  END NON-TRANSLATABLE
            "translation": "Pulling {Repository}:{Tag}...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository"
                },
                {
                    "id": "Tag",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "tag"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to pull docker image {Repository____tag}. Docker credentials were not found. Maybe you need to run 'docker login ...' if the image registry is private. Error: {Err}",
            "message": "unable to pull docker image {Repository____tag}. Docker credentials were not found. Maybe you need to run 'docker login ...' if the image registry is private. Error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to pull docker image {Repository____tag}. Docker credentials were not found. Maybe you need to run 'docker login ...' if the image registry is private. Error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository____tag",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository + \":\" + tag"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to pull docker image {Repository____tag}: {Err}",
            "message": "unable to pull docker image {Repository____tag}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to pull docker image {Repository____tag}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository____tag",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository + \":\" + tag"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the resource id can not contain more than 1 '/'",
            "message": "the resource id can not contain more than 1 '/'",
//  END NON-TRANSLATABLE
            "translation": "the resource id can not contain more than 1 '/'",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "reading stdin failed: {Err}",
            "message": "reading stdin failed: {Err}",
//  END NON-TRANSLATABLE
            "translation": "reading stdin failed: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "reading {FilePath} failed: {Err}",
            "message": "reading {FilePath} failed: {Err}",
//  END NON-TRANSLATABLE
            "translation": "reading {FilePath} failed: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: environment variable '{EnvVarName}' is referenced in input file, but not defined in the environment.",
            "message": "Warning: environment variable '{EnvVarName}' is referenced in input file, but not defined in the environment.",
//  END NON-TRANSLATABLE
            "translation": "Warning: environment variable '{EnvVarName}' is referenced in input file, but not defined in the environment.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "EnvVarName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "envVarName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error scanning input, error {Err}",
            "message": "Error scanning input, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error scanning input, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error reading HTTP response, error {Err}",
            "message": "Error reading HTTP response, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error reading HTTP response, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Can't connect to the Horizon REST API to run {ApiMethod}. Run 'systemctl status horizon' to check if the Horizon agent is running. Or set HORIZON_URL to connect to another local port that is connected to a remote Horizon agent via a ssh tunnel. Specific error is: {Err}",
            "message": "Can't connect to the Horizon REST API to run {ApiMethod}. Run 'systemctl status horizon' to check if the Horizon agent is running. Or set HORIZON_URL to connect to another local port that is connected to a remote Horizon agent via a ssh tunnel. Specific error is: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Can't connect to the Horizon REST API to run {ApiMethod}. Run 'systemctl status horizon' to check if the Horizon agent is running. Or set HORIZON_URL to connect to another local port that is connected to a remote Horizon agent via a ssh tunnel. Specific error is: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMethod",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMethod"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Can't connect to the Horizon REST API to run {ApiMethod}. Maybe the ssh tunnel associated with that port is down? Or maybe the remote Horizon agent at the other end of that tunnel is down. Specific error is: {Err}",
            "message": "Can't connect to the Horizon REST API to run {ApiMethod}. Maybe the ssh tunnel associated with that port is down? Or maybe the remote Horizon agent at the other end of that tunnel is down. Specific error is: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Can't connect to the Horizon REST API to run {ApiMethod}. Maybe the ssh tunnel associated with that port is down? Or maybe the remote Horizon agent at the other end of that tunnel is down. Specific error is: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMethod",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMethod"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{ApiMsg} new request failed: {Err}",
            "message": "{ApiMsg} new request failed: {Err}",
//  END NON-TRANSLATABLE
            "translation": "{ApiMsg} new request failed: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HTTP code: {HttpCode}",
            "message": "HTTP code: {HttpCode}",
//  END NON-TRANSLATABLE
            "translation": "HTTP code: {HttpCode}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Bad HTTP code from {ApiMsg}: {HttpCode}",
            "message": "Bad HTTP code from {ApiMsg}: {HttpCode}",
//  END NON-TRANSLATABLE
            "translation": "Bad HTTP code from {ApiMsg}: {HttpCode}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "HttpCode",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "httpCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code from {ApiMsg}: {HttpCode}",
            "message": "bad HTTP code from {ApiMsg}: {HttpCode}",
//  END NON-TRANSLATABLE
            "translation": "bad HTTP code from {ApiMsg}: {HttpCode}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "HttpCode",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "httpCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to read body response from {ApiMsg}: {Err}",
            "message": "Failed to read body response from {ApiMsg}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to read body response from {ApiMsg}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to read body response from {ApiMsg}: {Err}",
            "message": "failed to read body response from {ApiMsg}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to read body response from {ApiMsg}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to unmarshal body response from {ApiMsg}: {Err}",
            "message": "Failed to unmarshal body response from {ApiMsg}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to unmarshal body response from {ApiMsg}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal body response from {ApiMsg}: {Err}",
            "message": "failed to unmarshal body response from {ApiMsg}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to unmarshal body response from {ApiMsg}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code {HttpCode} from {ApiMsg}: {Body}",
            "message": "bad HTTP code {HttpCode} from {ApiMsg}: {Body}",
//  END NON-TRANSLATABLE
            "translation": "bad HTTP code {HttpCode} from {ApiMsg}: {Body}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                },
                {
                    "id": "Body",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "GetRespBodyAsString(resp.Body)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal body for {ApiMsg}: {Err}",
            "message": "failed to marshal body for {ApiMsg}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal body for {ApiMsg}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to unmarshal bytes. {Err}",
            "message": "Failed to unmarshal bytes. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to unmarshal bytes. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting HZN_ICP_CA_CERT_PATH from {ANAXOVERWRITEFILE}: {Err}",
            "message": "Error getting HZN_ICP_CA_CERT_PATH from {ANAXOVERWRITEFILE}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error getting HZN_ICP_CA_CERT_PATH from {ANAXOVERWRITEFILE}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting HZN_EXCHANGE_URL from {ANAXOVERWRITEFILE}. {Err}",
            "message": "Error getting HZN_EXCHANGE_URL from {ANAXOVERWRITEFILE}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error getting HZN_EXCHANGE_URL from {ANAXOVERWRITEFILE}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting ExchangeUrl from {ANAXCONFIGFILE}. {Err}",
            "message": "Error getting ExchangeUrl from {ANAXCONFIGFILE}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error getting ExchangeUrl from {ANAXCONFIGFILE}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXCONFIGFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_CONFIG_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_EXCHANGE_URL is not set, get it from horizon agent configuration on the node.",
            "message": "HZN_EXCHANGE_URL is not set, get it from horizon agent configuration on the node.",
//  END NON-TRANSLATABLE
            "translation": "HZN_EXCHANGE_URL is not set, get it from horizon agent configuration on the node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Could not get the exchange url from environment variable HZN_EXCHANGE_URL or the horizon agent",
            "message": "Could not get the exchange url from environment variable HZN_EXCHANGE_URL or the horizon agent",
//  END NON-TRANSLATABLE
            "translation": "Could not get the exchange url from environment variable HZN_EXCHANGE_URL or the horizon agent",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The exchange url: {ExchUrl}",
            "message": "The exchange url: {ExchUrl}",
//  END NON-TRANSLATABLE
            "translation": "The exchange url: {ExchUrl}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchUrl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting HZN_FSS_CSSURL from {ANAXOVERWRITEFILE}. {Err}",
            "message": "Error getting HZN_FSS_CSSURL from {ANAXOVERWRITEFILE}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error getting HZN_FSS_CSSURL from {ANAXOVERWRITEFILE}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting model management service Url from {ANAXCONFIGFILE}. {Err}",
            "message": "Error getting model management service Url from {ANAXCONFIGFILE}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error getting model management service Url from {ANAXCONFIGFILE}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXCONFIGFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_CONFIG_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_FSS_CSSURL is not set, get it from horizon agent configuration on the node.",
            "message": "HZN_FSS_CSSURL is not set, get it from horizon agent configuration on the node.",
//  END NON-TRANSLATABLE
            "translation": "HZN_FSS_CSSURL is not set, get it from horizon agent configuration on the node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Could not get the model management service url from environment variable HZN_FSS_CSSURL or the horizon agent",
            "message": "Could not get the model management service url from environment variable HZN_FSS_CSSURL or the horizon agent",
//  END NON-TRANSLATABLE
            "translation": "Could not get the model management service url from environment variable HZN_FSS_CSSURL or the horizon agent",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The model management service url: {MmsUrl}",
            "message": "The model management service url: {MmsUrl}",
//  END NON-TRANSLATABLE
            "translation": "The model management service url: {MmsUrl}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MmsUrl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "mmsUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Set {ServiceEnvVarName} to use {Article} {HorizonService_1} other than the one the Horizon Agent is currently configured for. Specific error is: {Err}",
            "message": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Set {ServiceEnvVarName} to use {Article} {HorizonService_1} other than the one the Horizon Agent is currently configured for. Specific error is: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Set {ServiceEnvVarName} to use {Article} {HorizonService_1} other than the one the Horizon Agent is currently configured for. Specific error is: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HorizonService",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "horizonService"
                },
                {
                    "id": "ApiMethod",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMethod"
                },
                {
                    "id": "ServiceEnvVarName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceEnvVarName"
                },
                {
                    "id": "Article",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "article"
                },
                {
                    "id": "HorizonService_1",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "horizonService"
                },
                {
                    "id": "Err",
                    "string": "%[6]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 6,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Maybe {ServiceEnvVarName} is set incorrectly? Or unset {ServiceEnvVarName_1} to use the {HorizonService_1} that the Horizon Agent is configured for. Specific error is: {Err}",
            "message": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Maybe {ServiceEnvVarName} is set incorrectly? Or unset {ServiceEnvVarName_1} to use the {HorizonService_1} that the Horizon Agent is configured for. Specific error is: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Maybe {ServiceEnvVarName} is set incorrectly? Or unset {ServiceEnvVarName_1} to use the {HorizonService_1} that the Horizon Agent is configured for. Specific error is: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HorizonService",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "horizonService"
                },
                {
                    "id": "ApiMethod",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMethod"
                },
                {
                    "id": "ServiceEnvVarName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceEnvVarName"
                },
                {
                    "id": "ServiceEnvVarName_1",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "serviceEnvVarName"
                },
                {
                    "id": "HorizonService_1",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "horizonService"
                },
                {
                    "id": "Err",
                    "string": "%[6]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 6,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. Will retry.",
            "message": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. Will retry.",
//  END NON-TRANSLATABLE
            "translation": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. Will retry.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                },
                {
                    "id": "Service",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "service"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "apiMsg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}",
            "message": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}",
//  END NON-TRANSLATABLE
            "translation": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                },
                {
                    "id": "Service",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "service"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "apiMsg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code {HttpCode} from {ApiMsg}, output: {StringbodyBytes}",
            "message": "bad HTTP code {HttpCode} from {ApiMsg}, output: {StringbodyBytes}",
//  END NON-TRANSLATABLE
            "translation": "bad HTTP code {HttpCode} from {ApiMsg}, output: {StringbodyBytes}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                },
                {
                    "id": "StringbodyBytes",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "string(bodyBytes)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal exchange body response from {ApiMsg}: {Err}",
            "message": "failed to unmarshal exchange body response from {ApiMsg}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to unmarshal exchange body response from {ApiMsg}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal exchange output from {ApiMsg}: {Err}",
            "message": "failed to marshal exchange output from {ApiMsg}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal exchange output from {ApiMsg}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal exchange body for {ApiMsg}: {Err}",
            "message": "failed to marshal exchange body for {ApiMsg}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal exchange body for {ApiMsg}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to read exchange body response from {ApiMsg}: {Err}",
            "message": "failed to read exchange body response from {ApiMsg}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to read exchange body response from {ApiMsg}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code {HttpCode} from {ApiMsg}: {Code}, {Msg}",
            "message": "bad HTTP code {HttpCode} from {ApiMsg}: {Code}, {Msg}",
//  END NON-TRANSLATABLE
            "translation": "bad HTTP code {HttpCode} from {ApiMsg}: {Code}, {Msg}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                },
                {
                    "id": "Code",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "respMsg.Code"
                },
                {
                    "id": "Msg",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "respMsg.Msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code {HttpCode} from {ApiMsg}",
            "message": "bad HTTP code {HttpCode} from {ApiMsg}",
//  END NON-TRANSLATABLE
            "translation": "bad HTTP code {HttpCode} from {ApiMsg}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "exchange authentication must be specified with one of the following: the -u flag, the -n flag, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH",
            "message": "exchange authentication must be specified with one of the following: the -u flag, the -n flag, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH",
//  END NON-TRANSLATABLE
            "translation": "exchange authentication must be specified with one of the following: the -u flag, the -n flag, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to get absolute path for file {KeyFile}. {Err}",
            "message": "Failed to get absolute path for file {KeyFile}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to get absolute path for file {KeyFile}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Err}. Please create the signing key.",
            "message": "{Err}. Please create the signing key.",
//  END NON-TRANSLATABLE
            "translation": "{Err}. Please create the signing key.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "running: {CmdStr}",
            "message": "running: {CmdStr}",
//  END NON-TRANSLATABLE
            "translation": "running: {CmdStr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CmdStr",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cmdStr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "did not get a command object",
            "message": "did not get a command object",
//  END NON-TRANSLATABLE
            "translation": "did not get a command object",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Could not get Stdin pipe, error: {Err}",
            "message": "Could not get Stdin pipe, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Could not get Stdin pipe, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not retrieve output from command, error: {Err}",
            "message": "could not retrieve output from command, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "could not retrieve output from command, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not retrieve stderr from command, error: {Err}",
            "message": "could not retrieve stderr from command, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "could not retrieve stderr from command, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to start command, error: {Err}",
            "message": "Unable to start command, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to start command, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to write to stdin of command, error: {Err}",
            "message": "Unable to write to stdin of command, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to write to stdin of command, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to close stdin, error: {Err}",
            "message": "Unable to close stdin, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to close stdin, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not read stdout, error: {Err}",
            "message": "could not read stdout, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "could not read stdout, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not read stderr, error: {Err}",
            "message": "could not read stderr, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "could not read stderr, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "command failed: {Err}, stderr: {StringstderrBytes}",
            "message": "command failed: {Err}, stderr: {StringstderrBytes}",
//  END NON-TRANSLATABLE
            "translation": "command failed: {Err}, stderr: {StringstderrBytes}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                },
                {
                    "id": "StringstderrBytes",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "string(stderrBytes)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "this command can not be run before running 'hzn register'",
            "message": "this command can not be run before running 'hzn register'",
//  END NON-TRANSLATABLE
            "translation": "this command can not be run before running 'hzn register'",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal '/service/config' output attribute {Attr}. {Err}",
            "message": "failed to marshal '/service/config' output attribute {Attr}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal '/service/config' output attribute {Attr}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Attr",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "attr"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to convert '/service/config' output attribute {Attr} to its original type. {Err}",
            "message": "failed to convert '/service/config' output attribute {Attr} to its original type. {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to convert '/service/config' output attribute {Attr} to its original type. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Attr",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "attr"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn service list' output: {Err}",
            "message": "failed to marshal 'hzn service list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn service list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn service registered' output: {Err}",
            "message": "failed to marshal 'hzn service registered' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn service registered' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn service configstate' output: {Err}",
            "message": "failed to marshal 'hzn service configstate' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn service configstate' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "all the registered services",
            "message": "all the registered services",
//  END NON-TRANSLATABLE
            "translation": "all the registered services",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "service {ServiceOrg}/{ServiceUrl}",
            "message": "service {ServiceOrg}/{ServiceUrl}",
//  END NON-TRANSLATABLE
            "translation": "service {ServiceOrg}/{ServiceUrl}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceOrg"
                },
                {
                    "id": "ServiceUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "all the registered services from organization {ServiceOrg}",
            "message": "all the registered services from organization {ServiceOrg}",
//  END NON-TRANSLATABLE
            "translation": "all the registered services from organization {ServiceOrg}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Please specify the organization for service {ServiceUrl}.",
            "message": "Please specify the organization for service {ServiceUrl}.",
//  END NON-TRANSLATABLE
            "translation": "Please specify the organization for service {ServiceUrl}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceUrl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to suspend {Msgpart} for this Horizon node?",
            "message": "Are you sure you want to suspend {Msgpart} for this Horizon node?",
//  END NON-TRANSLATABLE
            "translation": "Are you sure you want to suspend {Msgpart} for this Horizon node?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msgpart",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg_part"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Suspending {Msgpart}, cancelling releated agreements, stopping related service containers...",
            "message": "Suspending {Msgpart}, cancelling releated agreements, stopping related service containers...",
//  END NON-TRANSLATABLE
            "translation": "Suspending {Msgpart}, cancelling releated agreements, stopping related service containers...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msgpart",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg_part"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Resuming {Msgpart} ...",
            "message": "Resuming {Msgpart} ...",
//  END NON-TRANSLATABLE
            "translation": "Resuming {Msgpart} ...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msgpart",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg_part"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "cleaned {String} resulted in an empty string.",
            "message": "cleaned {String} resulted in an empty string.",
//  END NON-TRANSLATABLE
            "translation": "cleaned {String} resulted in an empty string.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "String",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dep[\"chart_archive\"].(string)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "plugin context must include 'currentDir' as the current directory of the service definition file",
            "message": "plugin context must include 'currentDir' as the current directory of the service definition file",
//  END NON-TRANSLATABLE
            "translation": "plugin context must include 'currentDir' as the current directory of the service definition file",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to read chart archive {Depchartarchive}, error {Err}",
            "message": "unable to read chart archive {Depchartarchive}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to read chart archive {Depchartarchive}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Depchartarchive",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "dep[\"chart_archive\"]"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "chart_archive must have a string type value, has {C}",
            "message": "chart_archive must have a string type value, has {C}",
//  END NON-TRANSLATABLE
            "translation": "chart_archive must have a string type value, has {C}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "C",
                    "string": "%[1]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "c"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "release_name must have a string type value, has {R}",
            "message": "release_name must have a string type value, has {R}",
//  END NON-TRANSLATABLE
            "translation": "release_name must have a string type value, has {R}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "R",
                    "string": "%[1]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "r"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "chart_archive and release_name must be non-empty strings",
            "message": "chart_archive and release_name must be non-empty strings",
//  END NON-TRANSLATABLE
            "translation": "chart_archive and release_name must be non-empty strings",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' not supported for Helm deployments",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' not supported for Helm deployments",
//  END NON-TRANSLATABLE
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' not supported for Helm deployments",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dev.SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dev.SERVICE_START_COMMAND"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to make directory for self signed MMS API certificate, error {Err}",
            "message": "unable to make directory for self signed MMS API certificate, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to make directory for self signed MMS API certificate, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to generate random number for MMS API certificate serial number, error {Err}",
            "message": "unable to generate random number for MMS API certificate serial number, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to generate random number for MMS API certificate serial number, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to generate private key for MMS API certificate, error {Err}",
            "message": "unable to generate private key for MMS API certificate, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to generate private key for MMS API certificate, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create MMS API certificate, error {Err}",
            "message": "unable to create MMS API certificate, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to create MMS API certificate, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
            "message": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerCertificate",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerCertificate"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
            "message": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerCertificate",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerCertificate"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
            "message": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerCertificate",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerCertificate"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
            "message": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
            "message": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
            "message": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get proper response from Horizon agent",
            "message": "Failed to get proper response from Horizon agent",
//  END NON-TRANSLATABLE
            "translation": "Failed to get proper response from Horizon agent",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn node list' output: {Err}",
            "message": "failed to marshal 'hzn node list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn node list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Horizon CLI version: {HORIZONVERSION}",
            "message": "Horizon CLI version: {HORIZONVERSION}",
//  END NON-TRANSLATABLE
            "translation": "Horizon CLI version: {HORIZONVERSION}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HORIZONVERSION",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "version.HORIZON_VERSION"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Horizon Agent version: {HorizonVersion}",
            "message": "Horizon Agent version: {HorizonVersion}",
//  END NON-TRANSLATABLE
            "translation": "Horizon Agent version: {HorizonVersion}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HorizonVersion",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "status.Configuration.HorizonVersion"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'key list' output: {Err}",
            "message": "failed to marshal 'key list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'key list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "horizon api trust output did not include 'pem' key",
            "message": "horizon api trust output did not include 'pem' key",
//  END NON-TRANSLATABLE
            "translation": "horizon api trust output did not include 'pem' key",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to create a new key pair: {Err}",
            "message": "failed to create a new key pair: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to create a new key pair: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Move private key file from {PrivKeyName} to {PrivKeyFile}",
            "message": "Move private key file from {PrivKeyName} to {PrivKeyFile}",
//  END NON-TRANSLATABLE
            "translation": "Move private key file from {PrivKeyName} to {PrivKeyFile}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyName"
                },
                {
                    "id": "PrivKeyFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "privKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to move private key file from {PrivKeyName} to {PrivKeyFile}. {Err}",
            "message": "failed to move private key file from {PrivKeyName} to {PrivKeyFile}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to move private key file from {PrivKeyName} to {PrivKeyFile}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyName"
                },
                {
                    "id": "PrivKeyFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "privKeyFile"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Move public key file from {PubKeyName} to {PubKeyFile}.",
            "message": "Move public key file from {PubKeyName} to {PubKeyFile}.",
//  END NON-TRANSLATABLE
            "translation": "Move public key file from {PubKeyName} to {PubKeyFile}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PubKeyName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pubKeyName"
                },
                {
                    "id": "PubKeyFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pubKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to move public key file from {PubKeyName} to {PubKeyFile}. {Err}",
            "message": "failed to move public key file from {PubKeyName} to {PubKeyFile}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to move public key file from {PubKeyName} to {PubKeyFile}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PubKeyName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pubKeyName"
                },
                {
                    "id": "PubKeyFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pubKeyFile"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Created keys:\n \t{PrivKeyFile}\n\t{PubKeyFile}",
            "message": "Created keys:\n \t{PrivKeyFile}\n\t{PubKeyFile}",
//  END NON-TRANSLATABLE
            "translation": "Created keys:\n \t{PrivKeyFile}\n\t{PubKeyFile}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyFile"
                },
                {
                    "id": "PubKeyFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pubKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "asked to import the created public key, but can not determine the name.",
            "message": "asked to import the created public key, but can not determine the name.",
//  END NON-TRANSLATABLE
            "translation": "asked to import the created public key, but can not determine the name.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Importing public key file {PubKeyFile} to the Horizon agent.",
            "message": "Importing public key file {PubKeyFile} to the Horizon agent.",
//  END NON-TRANSLATABLE
            "translation": "Importing public key file {PubKeyFile} to the Horizon agent.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PubKeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pubKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{PubKeyFile} imported to the Horizon agent",
            "message": "{PubKeyFile} imported to the Horizon agent",
//  END NON-TRANSLATABLE
            "translation": "{PubKeyFile} imported to the Horizon agent",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PubKeyFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pubKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Public key '{KeyName}' removed from the Horizon agent.",
            "message": "Public key '{KeyName}' removed from the Horizon agent.",
//  END NON-TRANSLATABLE
            "translation": "Public key '{KeyName}' removed from the Horizon agent.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "-d is mutually exclusive with -k and -K",
            "message": "-d is mutually exclusive with -k and -K",
//  END NON-TRANSLATABLE
            "translation": "-d is mutually exclusive with -k and -K",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Creating directory {OutputDirPub}.",
            "message": "Creating directory {OutputDirPub}.",
//  END NON-TRANSLATABLE
            "translation": "Creating directory {OutputDirPub}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OutputDirPub",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "outputDirPub"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{PrivKeyFile} is a directory. Please specify a file name.",
            "message": "{PrivKeyFile} is a directory. Please specify a file name.",
//  END NON-TRANSLATABLE
            "translation": "{PrivKeyFile} is a directory. Please specify a file name.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "File {PrivKeyFile} and {PubKeyFile} exist, do you want to overwrite?",
            "message": "File {PrivKeyFile} and {PubKeyFile} exist, do you want to overwrite?",
//  END NON-TRANSLATABLE
            "translation": "File {PrivKeyFile} and {PubKeyFile} exist, do you want to overwrite?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyFile"
                },
                {
                    "id": "PubKeyFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pubKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "File {PrivKeyFile} exists, do you want to overwrite?",
            "message": "File {PrivKeyFile} exists, do you want to overwrite?",
//  END NON-TRANSLATABLE
            "translation": "File {PrivKeyFile} exists, do you want to overwrite?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deleting file {PrivKeyFile}.",
            "message": "Deleting file {PrivKeyFile}.",
//  END NON-TRANSLATABLE
            "translation": "Deleting file {PrivKeyFile}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn status -l' output: {Err}",
            "message": "failed to marshal 'hzn status -l' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn status -l' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn status' output: {Err}",
            "message": "failed to marshal 'hzn status' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn status' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "horizon api attributes output did not include 'attributes' key",
            "message": "horizon api attributes output did not include 'attributes' key",
//  END NON-TRANSLATABLE
            "translation": "horizon api attributes output did not include 'attributes' key",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn attribute list' output: {Err}",
            "message": "failed to marshal 'hzn attribute list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn attribute list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
            "message": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
//  END NON-TRANSLATABLE
            "translation": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dconstraints",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "dconstraints"
                },
                {
                    "id": "Dconstraints_1",
                    "string": "%[2]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "dconstraints"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to convert policy constraint {Remainder} into internal format, error {Err}",
            "message": "unable to convert policy constraint {Remainder} into internal format, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to convert policy constraint {Remainder} into internal format, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Remainder",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "remainder"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Logical operator {NextLogicalOperator} is not valid, expecting AND, OR, \u0026\u0026, ||",
            "message": "Logical operator {NextLogicalOperator} is not valid, expecting AND, OR, \u0026\u0026, ||",
//  END NON-TRANSLATABLE
            "translation": "Logical operator {NextLogicalOperator} is not valid, expecting AND, OR, \u0026\u0026, ||",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NextLogicalOperator",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nextLogicalOperator"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is \u003cproperty\u003e == \u003cvalue\u003e",
            "message": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is \u003cproperty\u003e == \u003cvalue\u003e",
//  END NON-TRANSLATABLE
            "translation": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is \u003cproperty\u003e == \u003cvalue\u003e",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Lenpieces",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "len(pieces)"
                },
                {
                    "id": "Expression",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "expression"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is expression with 3 tokens: \u003cproperty\u003e \u003coperator\u003e \u003cvalue\u003e in constraint expression",
            "message": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is expression with 3 tokens: \u003cproperty\u003e \u003coperator\u003e \u003cvalue\u003e in constraint expression",
//  END NON-TRANSLATABLE
            "translation": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is expression with 3 tokens: \u003cproperty\u003e \u003coperator\u003e \u003cvalue\u003e in constraint expression",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Lenpieces",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "len(pieces)"
                },
                {
                    "id": "Expression",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "expression"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Expression: {Expression} should contain valid comparison operator - wrong operator {Pieces1}. Allowed operators: {Lessthan}, {Greaterthan}, {Equalto}, {Doubleequalto}, {Lessthaneq}, {Greaterthaneq}, {Notequalto}, {Inoperator}",
            "message": "Expression: {Expression} should contain valid comparison operator - wrong operator {Pieces1}. Allowed operators: {Lessthan}, {Greaterthan}, {Equalto}, {Doubleequalto}, {Lessthaneq}, {Greaterthaneq}, {Notequalto}, {Inoperator}",
//  END NON-TRANSLATABLE
            "translation": "Expression: {Expression} should contain valid comparison operator - wrong operator {Pieces1}. Allowed operators: {Lessthan}, {Greaterthan}, {Equalto}, {Doubleequalto}, {Lessthaneq}, {Greaterthaneq}, {Notequalto}, {Inoperator}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Expression",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "expression"
                },
                {
                    "id": "Pieces1",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pieces[1]"
                },
                {
                    "id": "Lessthan",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "lessthan"
                },
                {
                    "id": "Greaterthan",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "greaterthan"
                },
                {
                    "id": "Equalto",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "equalto"
                },
                {
                    "id": "Doubleequalto",
                    "string": "%[6]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 6,
                    "expr": "doubleequalto"
                },
                {
                    "id": "Lessthaneq",
                    "string": "%[7]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 7,
                    "expr": "lessthaneq"
                },
                {
                    "id": "Greaterthaneq",
                    "string": "%[8]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 8,
                    "expr": "greaterthaneq"
                },
                {
                    "id": "Notequalto",
                    "string": "%[9]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 9,
                    "expr": "notequalto"
                },
                {
                    "id": "Inoperator",
                    "string": "%[10]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 10,
                    "expr": "inoperator"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Comparison operator: {CompOp} is not supported for numeric value: {Value}",
            "message": "Comparison operator: {CompOp} is not supported for numeric value: {Value}",
//  END NON-TRANSLATABLE
            "translation": "Comparison operator: {CompOp} is not supported for numeric value: {Value}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompOp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compOp"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Comparison operator: {CompOp} is not supported for boolean value: {Value}",
            "message": "Comparison operator: {CompOp} is not supported for boolean value: {Value}",
//  END NON-TRANSLATABLE
            "translation": "Comparison operator: {CompOp} is not supported for boolean value: {Value}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompOp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compOp"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Comparison operator: {CompOp} is not supported for string list value: {Value}",
            "message": "Comparison operator: {CompOp} is not supported for string list value: {Value}",
//  END NON-TRANSLATABLE
            "translation": "Comparison operator: {CompOp} is not supported for string list value: {Value}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompOp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compOp"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Comparison operator: {CompOp} is not supported for string value: {Value}",
            "message": "Comparison operator: {CompOp} is not supported for string value: {Value}",
//  END NON-TRANSLATABLE
            "translation": "Comparison operator: {CompOp} is not supported for string value: {Value}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompOp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compOp"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Comparison operator: {CompOp} is not supported for single version: {Value}",
            "message": "Comparison operator: {CompOp} is not supported for single version: {Value}",
//  END NON-TRANSLATABLE
            "translation": "Comparison operator: {CompOp} is not supported for single version: {Value}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompOp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compOp"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Comparison operator: {CompOp} is not supported for version expression: {Value}",
            "message": "Comparison operator: {CompOp} is not supported for version expression: {Value}",
//  END NON-TRANSLATABLE
            "translation": "Comparison operator: {CompOp} is not supported for version expression: {Value}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompOp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compOp"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Expression: {Expression} is not valid",
            "message": "Expression: {Expression} is not valid",
//  END NON-TRANSLATABLE
            "translation": "Expression: {Expression} is not valid",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Expression",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "expression"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "New dependency created: {Target} .",
            "message": "New dependency created: {Target} .",
//  END NON-TRANSLATABLE
            "translation": "New dependency created: {Target} .",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Target",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "target"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{DEPENDENCYCOMMAND} {DEPENDENCYLISTCOMMAND}' unable to create json object from dependencies, {Err}",
            "message": "'{DEPENDENCYCOMMAND} {DEPENDENCYLISTCOMMAND}' unable to create json object from dependencies, {Err}",
//  END NON-TRANSLATABLE
            "translation": "'{DEPENDENCYCOMMAND} {DEPENDENCYLISTCOMMAND}' unable to create json object from dependencies, {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEPENDENCYCOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEPENDENCY_COMMAND"
                },
                {
                    "id": "DEPENDENCYLISTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "DEPENDENCY_LIST_COMMAND"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
            "message": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to restore env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
            "message": "Unable to restore env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to restore env var 'HZN_DONT_SUBST_ENV_VARS', error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to get list of dependency files in {DepPath}, error: {Err}",
            "message": "unable to get list of dependency files in {DepPath}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to get list of dependency files in {DepPath}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DepPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "depPath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not create dependency directory {NewDir}, error: {Err}",
            "message": "could not create dependency directory {NewDir}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "could not create dependency directory {NewDir}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NewDir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "newDir"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "dependency validation failed, unable to read {Name}, error: {Err}",
            "message": "dependency validation failed, unable to read {Name}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "dependency validation failed, unable to read {Name}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileInfo.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "dependency validation failed, dependency {Name} has an invalid version {Version}, error: {Err}",
            "message": "dependency validation failed, dependency {Name} has an invalid version {Version}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "dependency validation failed, dependency {Name} has an invalid version {Version}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileInfo.Name()"
                },
                {
                    "id": "Version",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "rs.Version"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "dependency validation failed, unable to verify version range {Version} is within required range {Expression}, error: {Err}",
            "message": "dependency validation failed, unable to verify version range {Version} is within required range {Expression}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "dependency validation failed, unable to verify version range {Version} is within required range {Expression}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dDef.Version"
                },
                {
                    "id": "Expression",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "vRange.Get_expression()"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "dependency {URL} at version {VersionRange} does not exist in {Joindirectory_DEFAULTDEPENDENCYDIR}.",
            "message": "dependency {URL} at version {VersionRange} does not exist in {Joindirectory_DEFAULTDEPENDENCYDIR}.",
//  END NON-TRANSLATABLE
            "translation": "dependency {URL} at version {VersionRange} does not exist in {Joindirectory_DEFAULTDEPENDENCYDIR}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "rs.URL"
                },
                {
                    "id": "VersionRange",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "rs.VersionRange"
                },
                {
                    "id": "Joindirectory_DEFAULTDEPENDENCYDIR",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "path.Join(directory, DEFAULT_DEPENDENCY_DIR)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "dependency {Name} did not validate, error: {Err}",
            "message": "dependency {Name} did not validate, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "dependency {Name} did not validate, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileInfo.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "variable {Name} has no default and must be specified in {UserInputsFilePath}",
            "message": "variable {Name} has no default and must be specified in {UserInputsFilePath}",
//  END NON-TRANSLATABLE
            "translation": "variable {Name} has no default and must be specified in {UserInputsFilePath}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ui.Name"
                },
                {
                    "id": "UserInputsFilePath",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "userInputsFilePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "--specRef is mutually exclusive with --url.",
            "message": "--specRef is mutually exclusive with --url.",
//  END NON-TRANSLATABLE
            "translation": "--specRef is mutually exclusive with --url.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "--project is mutually exclusive with --specRef, --org and --url.",
            "message": "--project is mutually exclusive with --specRef, --org and --url.",
//  END NON-TRANSLATABLE
            "translation": "--project is mutually exclusive with --specRef, --org and --url.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "one of --project, or --specRef and --org, or --url and --org must be specified.",
            "message": "one of --project, or --specRef and --org, or --url and --org must be specified.",
//  END NON-TRANSLATABLE
            "translation": "one of --project, or --specRef and --org, or --url and --org must be specified.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "either --specRef and --org, or --url and --org must be specified.",
            "message": "either --specRef and --org, or --url and --org must be specified.",
//  END NON-TRANSLATABLE
            "translation": "either --specRef and --org, or --url and --org must be specified.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "use --url with service projects.",
            "message": "use --url with service projects.",
//  END NON-TRANSLATABLE
            "translation": "use --url with service projects.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "--project {Project} does not contain Horizon service metadata.",
            "message": "--project {Project} does not contain Horizon service metadata.",
//  END NON-TRANSLATABLE
            "translation": "--project {Project} does not contain Horizon service metadata.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Project",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "project"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Reading Horizon metadata from {Dir}",
            "message": "Reading Horizon metadata from {Dir}",
//  END NON-TRANSLATABLE
            "translation": "Reading Horizon metadata from {Dir}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "--specRef or --url is required for remove.",
            "message": "--specRef or --url is required for remove.",
//  END NON-TRANSLATABLE
            "translation": "--specRef or --url is required for remove.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "--specRef and --url are mutually exclusive.",
            "message": "--specRef and --url are mutually exclusive.",
//  END NON-TRANSLATABLE
            "translation": "--specRef and --url are mutually exclusive.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Service project {Dir} verified.",
            "message": "Service project {Dir} verified.",
//  END NON-TRANSLATABLE
            "translation": "Service project {Dir} verified.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS' to zero, error {Err}",
            "message": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS' to zero, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to set env var 'HZN_DONT_SUBST_ENV_VARS' to zero, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get the hzn.json configuration file under {Project} directory. Error: {Err}",
            "message": "Failed to get the hzn.json configuration file under {Project} directory. Error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to get the hzn.json configuration file under {Project} directory. Error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Project",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "project"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to set the environment variables from configuration file {Projconfigfile}. Error: {Err}",
            "message": "Failed to set the environment variables from configuration file {Projconfigfile}. Error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to set the environment variables from configuration file {Projconfigfile}. Error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Projconfigfile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "proj_config_file"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Reading Horizon metadata from dependency: {AbsProject}",
            "message": "Reading Horizon metadata from dependency: {AbsProject}",
//  END NON-TRANSLATABLE
            "translation": "Reading Horizon metadata from dependency: {AbsProject}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AbsProject",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "absProject"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Found dependency {URL}, Org: {Org}",
            "message": "Found dependency {URL}, Org: {Org}",
//  END NON-TRANSLATABLE
            "translation": "Found dependency {URL}, Org: {Org}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sDef.GetURL()"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sDef.GetOrg()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to restore the environment variables. {Err}",
            "message": "Failed to restore the environment variables. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to restore the environment variables. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable and global attribute configuration.",
            "message": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable and global attribute configuration.",
//  END NON-TRANSLATABLE
            "translation": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable and global attribute configuration.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HomeDirectory",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "homeDirectory"
                },
                {
                    "id": "USERINPUTFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "USERINPUT_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "To ensure that the dependency operates correctly, please add variable values to the userinput.json file if this service needs any.",
            "message": "To ensure that the dependency operates correctly, please add variable values to the userinput.json file if this service needs any.",
//  END NON-TRANSLATABLE
            "translation": "To ensure that the dependency operates correctly, please add variable values to the userinput.json file if this service needs any.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The current project already has userinputs defined for this dependency.",
            "message": "The current project already has userinputs defined for this dependency.",
//  END NON-TRANSLATABLE
            "translation": "The current project already has userinputs defined for this dependency.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable configuration.",
            "message": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable configuration.",
//  END NON-TRANSLATABLE
            "translation": "Updated {HomeDirectory}/{USERINPUTFILE} with the dependency's variable configuration.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HomeDirectory",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "homeDirectory"
                },
                {
                    "id": "USERINPUTFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "USERINPUT_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unsupported project type",
            "message": "unsupported project type",
//  END NON-TRANSLATABLE
            "translation": "unsupported project type",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Created {FilePath}/{FileName} as a new dependency.",
            "message": "Created {FilePath}/{FileName} as a new dependency.",
//  END NON-TRANSLATABLE
            "translation": "Created {FilePath}/{FileName} as a new dependency.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "FileName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to find highest version of {Surl} {Org} in the exchange: {Services}",
            "message": "unable to find highest version of {Surl} {Org} in the exchange: {Services}",
//  END NON-TRANSLATABLE
            "translation": "unable to find highest version of {Surl} {Org} in the exchange: {Services}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Surl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "surl"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                },
                {
                    "id": "Services",
                    "string": "%[3]v",
                    "type": "map[string]github.com/open-horizon/anax/exchange.ServiceDefinition",
                    "underlyingType": "map[string]github.com/open-horizon/anax/exchange.ServiceDefinition",
                    "argNum": 3,
                    "expr": "resp.Services"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "no services found in the exchange.",
            "message": "no services found in the exchange.",
//  END NON-TRANSLATABLE
            "translation": "no services found in the exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Creating dependency on: {ServiceDef}, Org: {Org}",
            "message": "Creating dependency on: {ServiceDef}, Org: {Org}",
//  END NON-TRANSLATABLE
            "translation": "Creating dependency on: {ServiceDef}, Org: {Org}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceDef",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/exchange.ServiceDefinition",
                    "underlyingType": "struct{Owner string \"json:\\\"owner\\\"\"; Label string \"json:\\\"label\\\"\"; Description string \"json:\\\"description\\\"\"; Public bool \"json:\\\"public\\\"\"; URL string \"json:\\\"url\\\"\"; Version string \"json:\\\"version\\\"\"; Arch string \"json:\\\"arch\\\"\"; Sharable string \"json:\\\"sharable\\\"\"; MatchHardware github.com/open-horizon/anax/exchange.HardwareRequirement \"json:\\\"matchHardware\\\"\"; RequiredServices []github.com/open-horizon/anax/exchange.ServiceDependency \"json:\\\"requiredServices\\\"\"; UserInputs []github.com/open-horizon/anax/exchange.UserInput \"json:\\\"userInput\\\"\"; Deployment string \"json:\\\"deployment\\\"\"; DeploymentSignature string \"json:\\\"deploymentSignature\\\"\"; LastUpdated string \"json:\\\"lastUpdated\\\"\"}",
                    "argNum": 1,
                    "expr": "serviceDef"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal deployment {Deployment}: {Err}",
            "message": "failed to unmarshal deployment {Deployment}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to unmarshal deployment {Deployment}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Deployment",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceDef.Deployment"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The image docker auths for the service {Org}/{Surl} are: {Imgauths}",
            "message": "The image docker auths for the service {Org}/{Surl} are: {Imgauths}",
//  END NON-TRANSLATABLE
            "translation": "The image docker auths for the service {Org}/{Surl} are: {Imgauths}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Surl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "surl"
                },
                {
                    "id": "Imgauths",
                    "string": "%[3]v",
                    "type": "[]github.com/open-horizon/anax/events.ImageDockerAuth",
                    "underlyingType": "[]github.com/open-horizon/anax/events.ImageDockerAuth",
                    "argNum": 3,
                    "expr": "img_auths"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to get images for {Org}/{Surl}: {Err}",
            "message": "failed to get images for {Org}/{Surl}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to get images for {Org}/{Surl}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Surl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "surl"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to get dependency info for {Sp} , error {Err}",
            "message": "Unable to get dependency info for {Sp} , error {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to get dependency info for {Sp} , error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Sp",
                    "string": "%[1]v",
                    "type": "*github.com/open-horizon/anax/cli/dev.ServiceSpec",
                    "underlyingType": "*github.com/open-horizon/anax/cli/dev.ServiceSpec",
                    "argNum": 1,
                    "expr": "sp"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'dependency {DEPENDENCYREMOVECOMMAND}' failed to get a list of dependecies. Error {Err}",
            "message": "'dependency {DEPENDENCYREMOVECOMMAND}' failed to get a list of dependecies. Error {Err}",
//  END NON-TRANSLATABLE
            "translation": "'dependency {DEPENDENCYREMOVECOMMAND}' failed to get a list of dependecies. Error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEPENDENCYREMOVECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEPENDENCY_REMOVE_COMMAND"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "All dependencies are: {Deps}",
            "message": "All dependencies are: {Deps}",
//  END NON-TRANSLATABLE
            "translation": "All dependencies are: {Deps}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Deps",
                    "string": "%[1]v",
                    "type": "[]*github.com/open-horizon/anax/cli/dev.ServiceDependency",
                    "underlyingType": "[]*github.com/open-horizon/anax/cli/dev.ServiceDependency",
                    "argNum": 1,
                    "expr": "deps"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Found dependency: {Name}",
            "message": "Found dependency: {Name}",
//  END NON-TRANSLATABLE
            "translation": "Found dependency: {Name}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dep.FileInfo.Name()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Will not remove dependency {Name} because it is referenced by other services.",
            "message": "Will not remove dependency {Name} because it is referenced by other services.",
//  END NON-TRANSLATABLE
            "translation": "Will not remove dependency {Name} because it is referenced by other services.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dep.FileInfo.Name()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'dependency {DEPENDENCYREMOVECOMMAND}' dependency not found.",
            "message": "'dependency {DEPENDENCYREMOVECOMMAND}' dependency not found.",
//  END NON-TRANSLATABLE
            "translation": "'dependency {DEPENDENCYREMOVECOMMAND}' dependency not found.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEPENDENCYREMOVECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEPENDENCY_REMOVE_COMMAND"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Could not read the dependency file {Name}. Error: {Err}",
            "message": "Could not read the dependency file {Name}. Error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Could not read the dependency file {Name}. Error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sd.FileInfo.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error updating project definition: {Err}",
            "message": "Error updating project definition: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error updating project definition: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Dependency {Name} could not be removed. Error: {Err}",
            "message": "Dependency {Name} could not be removed. Error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Dependency {Name} could not be removed. Error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sd.FileInfo.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error updating userinputs: {Err}",
            "message": "Error updating userinputs: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error updating userinputs: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removed dependency {Arch}.",
            "message": "Removed dependency {Arch}.",
//  END NON-TRANSLATABLE
            "translation": "Removed dependency {Arch}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "createLogMessage(sd.Service.SpecRef, \"\", sd.Service.Org, sd.Service.Version, sd.Service.Arch)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removed dependency's dependency {Arch}.",
            "message": "Removed dependency's dependency {Arch}.",
//  END NON-TRANSLATABLE
            "translation": "Removed dependency's dependency {Arch}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "createLogMessage(sd.Service.SpecRef, \"\", sd.Service.Org, sd.Service.Version, sd.Service.Arch)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error creating {DOCKERFILE} for service image. {Err}",
            "message": "error creating {DOCKERFILE} for service image. {Err}",
//  END NON-TRANSLATABLE
            "translation": "error creating {DOCKERFILE} for service image. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DOCKERFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DOCKER_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Edge $SERVICE_NAME Service Pattern for $ARCH",
            "message": "Edge $SERVICE_NAME Service Pattern for $ARCH",
//  END NON-TRANSLATABLE
            "translation": "Edge $SERVICE_NAME Service Pattern for $ARCH",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Pattern for $SERVICE_NAME for $ARCH",
            "message": "Pattern for $SERVICE_NAME for $ARCH",
//  END NON-TRANSLATABLE
            "translation": "Pattern for $SERVICE_NAME for $ARCH",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Edge $SERVICE_NAME Service Pattern for all architectures",
            "message": "Edge $SERVICE_NAME Service Pattern for all architectures",
//  END NON-TRANSLATABLE
            "translation": "Edge $SERVICE_NAME Service Pattern for all architectures",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Pattern for $SERVICE_NAME",
            "message": "Pattern for $SERVICE_NAME",
//  END NON-TRANSLATABLE
            "translation": "Pattern for $SERVICE_NAME",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICECREATIONCOMMAND}' Failed to get the service name from the image name. {Err}",
            "message": "'{SERVICECOMMAND} {SERVICECREATIONCOMMAND}' Failed to get the service name from the image name. {Err}",
//  END NON-TRANSLATABLE
            "translation": "'{SERVICECOMMAND} {SERVICECREATIONCOMMAND}' Failed to get the service name from the image name. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "SERVICE_COMMAND"
                },
                {
                    "id": "SERVICECREATIONCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_CREATION_COMMAND"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating config file for environmental variables: {Dir}/{HZNENVFILE}",
            "message": "Creating config file for environmental variables: {Dir}/{HZNENVFILE}",
//  END NON-TRANSLATABLE
            "translation": "Creating config file for environmental variables: {Dir}/{HZNENVFILE}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "HZNENVFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "HZNENV_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating user input file: {Dir}/{USERINPUTFILE}",
            "message": "Creating user input file: {Dir}/{USERINPUTFILE}",
//  END NON-TRANSLATABLE
            "translation": "Creating user input file: {Dir}/{USERINPUTFILE}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "USERINPUTFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "USERINPUT_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating service definition file: {Dir}/{SERVICEDEFINITIONFILE}",
            "message": "Creating service definition file: {Dir}/{SERVICEDEFINITIONFILE}",
//  END NON-TRANSLATABLE
            "translation": "Creating service definition file: {Dir}/{SERVICEDEFINITIONFILE}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "SERVICEDEFINITIONFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_DEFINITION_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating pattern definition file: {Dir}/{PATTERNDEFINITIONFILE}",
            "message": "Creating pattern definition file: {Dir}/{PATTERNDEFINITIONFILE}",
//  END NON-TRANSLATABLE
            "translation": "Creating pattern definition file: {Dir}/{PATTERNDEFINITIONFILE}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "PATTERNDEFINITIONFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "PATTERN_DEFINITION_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating service policy file: {Dir}/{SERVICEPOLICYFILE}",
            "message": "Creating service policy file: {Dir}/{SERVICEPOLICYFILE}",
//  END NON-TRANSLATABLE
            "translation": "Creating service policy file: {Dir}/{SERVICEPOLICYFILE}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "SERVICEPOLICYFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_POLICY_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating .gitignore files for source code management.",
            "message": "Creating .gitignore files for source code management.",
//  END NON-TRANSLATABLE
            "translation": "Creating .gitignore files for source code management.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Creating image generation files under {Currentdir} directory.",
            "message": "Creating image generation files under {Currentdir} directory.",
//  END NON-TRANSLATABLE
            "translation": "Creating image generation files under {Currentdir} directory.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Currentdir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "current_dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Created image generation files in {Currentdir} and horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
            "message": "Created image generation files in {Currentdir} and horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
//  END NON-TRANSLATABLE
            "translation": "Created image generation files in {Currentdir} and horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Currentdir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "current_dir"
                },
                {
                    "id": "Dir",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dir"
                },
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "SERVICE_COMMAND"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Created horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
            "message": "Created horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
//  END NON-TRANSLATABLE
            "translation": "Created horizon metadata files in {Dir}. Edit these files to define and configure your new {SERVICECOMMAND}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_COMMAND"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "must specify either --org or set the {DEVTOOLHZNORG} environment variable.",
            "message": "must specify either --org or set the {DEVTOOLHZNORG} environment variable.",
//  END NON-TRANSLATABLE
            "translation": "must specify either --org or set the {DEVTOOLHZNORG} environment variable.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEVTOOLHZNORG",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEVTOOL_HZN_ORG"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "invalid version string: {Version}",
            "message": "invalid version string: {Version}",
//  END NON-TRANSLATABLE
            "translation": "invalid version string: {Version}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "version"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "only support one image for a service unless --noImageGen flag is specified.",
            "message": "only support one image for a service unless --noImageGen flag is specified.",
//  END NON-TRANSLATABLE
            "translation": "only support one image for a service unless --noImageGen flag is specified.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "image {Image} has invalid format.",
            "message": "image {Image} has invalid format.",
//  END NON-TRANSLATABLE
            "translation": "image {Image} has invalid format.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Image",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "image"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "please specify the image name with -i flag.",
            "message": "please specify the image name with -i flag.",
//  END NON-TRANSLATABLE
            "translation": "please specify the image name with -i flag.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unsupported deployment config type: {Dconfig}",
            "message": "unsupported deployment config type: {Dconfig}",
//  END NON-TRANSLATABLE
            "translation": "unsupported deployment config type: {Dconfig}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dconfig",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dconfig"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "$SERVICE_NAME for $ARCH",
            "message": "$SERVICE_NAME for $ARCH",
//  END NON-TRANSLATABLE
            "translation": "$SERVICE_NAME for $ARCH",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Who to say hello to",
            "message": "Who to say hello to",
//  END NON-TRANSLATABLE
            "translation": "Who to say hello to",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unknown deployment type: {DeploymentType}",
            "message": "unknown deployment type: {DeploymentType}",
//  END NON-TRANSLATABLE
            "translation": "unknown deployment type: {DeploymentType}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DeploymentType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "deploymentType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{FilePath}: URL must be set.",
            "message": "{FilePath}: URL must be set.",
//  END NON-TRANSLATABLE
            "translation": "{FilePath}: URL must be set.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{FilePath}: version must be set to a specific version, e.g. 1.0.0.",
            "message": "{FilePath}: version must be set to a specific version, e.g. 1.0.0.",
//  END NON-TRANSLATABLE
            "translation": "{FilePath}: version must be set to a specific version, e.g. 1.0.0.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{FilePath}: org must be set.",
            "message": "{FilePath}: org must be set.",
//  END NON-TRANSLATABLE
            "translation": "{FilePath}: org must be set.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{FilePath}: deployment configuration, {Err}",
            "message": "{FilePath}: deployment configuration, {Err}",
//  END NON-TRANSLATABLE
            "translation": "{FilePath}: deployment configuration, {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{FilePath}: userInput array index {Ix} does not have name and type specified.",
            "message": "{FilePath}: userInput array index {Ix} does not have name and type specified.",
//  END NON-TRANSLATABLE
            "translation": "{FilePath}: userInput array index {Ix} does not have name and type specified.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Ix",
                    "string": "%[2]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "ix"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updated {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
            "message": "Updated {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
//  END NON-TRANSLATABLE
            "translation": "Updated {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HomeDirectory",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "homeDirectory"
                },
                {
                    "id": "SERVICEDEFINITIONFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_DEFINITION_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No need to update {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
            "message": "No need to update {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
//  END NON-TRANSLATABLE
            "translation": "No need to update {HomeDirectory}/{SERVICEDEFINITIONFILE} dependencies.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HomeDirectory",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "homeDirectory"
                },
                {
                    "id": "SERVICEDEFINITIONFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_DEFINITION_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error creating {HORIZONGITIGNOREFILE} for source code management. {Err}",
            "message": "error creating {HORIZONGITIGNOREFILE} for source code management. {Err}",
//  END NON-TRANSLATABLE
            "translation": "error creating {HORIZONGITIGNOREFILE} for source code management. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HORIZONGITIGNOREFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "HORIZON_GITIGNORE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to demarshal {UserInputFilePath} file, error: {Err}",
            "message": "unable to demarshal {UserInputFilePath} file, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to demarshal {UserInputFilePath} file, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "UserInputFilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "userInputFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Converted userinput attribute: {GlobalSet} to API attribute: {Attr}",
            "message": "Converted userinput attribute: {GlobalSet} to API attribute: {Attr}",
//  END NON-TRANSLATABLE
            "translation": "Converted userinput attribute: {GlobalSet} to API attribute: {Attr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "GlobalSet",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/cli/register.GlobalSet",
                    "underlyingType": "struct{Type string \"json:\\\"type\\\"\"; ServiceSpecs github.com/open-horizon/anax/persistence.ServiceSpecs \"json:\\\"service_specs,omitempty\\\"\"; Variables map[string]interface{} \"json:\\\"variables\\\"\"}",
                    "argNum": 1,
                    "expr": "gs"
                },
                {
                    "id": "Attr",
                    "string": "%[2]v",
                    "type": "*github.com/open-horizon/anax/api.Attribute",
                    "underlyingType": "*github.com/open-horizon/anax/api.Attribute",
                    "argNum": 2,
                    "expr": "attr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{GlobalSet} encountered error: {Error}",
            "message": "{GlobalSet} encountered error: {Error}",
//  END NON-TRANSLATABLE
            "translation": "{GlobalSet} encountered error: {Error}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "GlobalSet",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/cli/register.GlobalSet",
                    "underlyingType": "struct{Type string \"json:\\\"type\\\"\"; ServiceSpecs github.com/open-horizon/anax/persistence.ServiceSpecs \"json:\\\"service_specs,omitempty\\\"\"; Variables map[string]interface{} \"json:\\\"variables\\\"\"}",
                    "argNum": 1,
                    "expr": "gs"
                },
                {
                    "id": "Error",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "passthruError.Error()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Converted API Attributes: {Global} to persistent attributes: {Attributes}",
            "message": "Converted API Attributes: {Global} to persistent attributes: {Attributes}",
//  END NON-TRANSLATABLE
            "translation": "Converted API Attributes: {Global} to persistent attributes: {Attributes}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Global",
                    "string": "%[1]v",
                    "type": "[]github.com/open-horizon/anax/cli/register.GlobalSet",
                    "underlyingType": "[]github.com/open-horizon/anax/cli/register.GlobalSet",
                    "argNum": 1,
                    "expr": "global"
                },
                {
                    "id": "Attributes",
                    "string": "%[2]v",
                    "type": "[]github.com/open-horizon/anax/persistence.Attribute",
                    "underlyingType": "[]github.com/open-horizon/anax/persistence.Attribute",
                    "argNum": 2,
                    "expr": "attributes"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{OriginalUserInputFilePath}: global array element ({GlobalSet}) has an empty type, must be one of the supported attribute types. See the Horizon agent /attribute API.",
            "message": "{OriginalUserInputFilePath}: global array element ({GlobalSet}) has an empty type, must be one of the supported attribute types. See the Horizon agent /attribute API.",
//  END NON-TRANSLATABLE
            "translation": "{OriginalUserInputFilePath}: global array element ({GlobalSet}) has an empty type, must be one of the supported attribute types. See the Horizon agent /attribute API.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OriginalUserInputFilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "originalUserInputFilePath"
                },
                {
                    "id": "GlobalSet",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/cli/register.GlobalSet",
                    "underlyingType": "struct{Type string \"json:\\\"type\\\"\"; ServiceSpecs github.com/open-horizon/anax/persistence.ServiceSpecs \"json:\\\"service_specs,omitempty\\\"\"; Variables map[string]interface{} \"json:\\\"variables\\\"\"}",
                    "argNum": 2,
                    "expr": "gs"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{USERINPUTFILE} has error: {Err}",
            "message": "{USERINPUTFILE} has error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "{USERINPUTFILE} has error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "USERINPUTFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "USERINPUT_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{OriginalUserInputFilePath}: services array element at index {Ix} is {MicroWork} {Err}",
            "message": "{OriginalUserInputFilePath}: services array element at index {Ix} is {MicroWork} {Err}",
//  END NON-TRANSLATABLE
            "translation": "{OriginalUserInputFilePath}: services array element at index {Ix} is {MicroWork} {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OriginalUserInputFilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "originalUserInputFilePath"
                },
                {
                    "id": "Ix",
                    "string": "%[2]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "ix"
                },
                {
                    "id": "MicroWork",
                    "string": "%[3]v",
                    "type": "github.com/open-horizon/anax/cli/register.MicroWork",
                    "underlyingType": "struct{Org string \"json:\\\"org\\\"\"; Url string \"json:\\\"url\\\"\"; VersionRange string \"json:\\\"versionRange,omitempty\\\"\"; Variables map[string]interface{} \"json:\\\"variables\\\"\"}",
                    "argNum": 3,
                    "expr": "ms"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{OriginalUserInputFilePath}: services array does not contain an element for {URL}. Error: {Err}",
            "message": "{OriginalUserInputFilePath}: services array does not contain an element for {URL}. Error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "{OriginalUserInputFilePath}: services array does not contain an element for {URL}. Error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OriginalUserInputFilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "originalUserInputFilePath"
                },
                {
                    "id": "URL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sDef.URL"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "please provice a user input file for service {URL}. Error: {Err}",
            "message": "please provice a user input file for service {URL}. Error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "please provice a user input file for service {URL}. Error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sDef.URL"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "has empty org, must be set to the name of the organization that owns the service.",
            "message": "has empty org, must be set to the name of the organization that owns the service.",
//  END NON-TRANSLATABLE
            "translation": "has empty org, must be set to the name of the organization that owns the service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "has empty url. Must be set to this service's url or a dependency's url.",
            "message": "has empty url. Must be set to this service's url or a dependency's url.",
//  END NON-TRANSLATABLE
            "translation": "has empty url. Must be set to this service's url or a dependency's url.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "sets variable {VarName} using a value of {Err}.",
            "message": "sets variable {VarName} using a value of {Err}.",
//  END NON-TRANSLATABLE
            "translation": "sets variable {VarName} using a value of {Err}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "VarName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "varName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "sets variable {VarName} of type {VarValue} that is not defined.",
            "message": "sets variable {VarName} of type {VarValue} that is not defined.",
//  END NON-TRANSLATABLE
            "translation": "sets variable {VarName} of type {VarValue} that is not defined.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "VarName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "varName"
                },
                {
                    "id": "VarValue",
                    "string": "%[2]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "varValue"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updated {HomeDirectory}/{USERINPUTFILE}.",
            "message": "Updated {HomeDirectory}/{USERINPUTFILE}.",
//  END NON-TRANSLATABLE
            "translation": "Updated {HomeDirectory}/{USERINPUTFILE}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HomeDirectory",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "homeDirectory"
                },
                {
                    "id": "USERINPUTFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "USERINPUT_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No need to update {HomeDirectory}/{USERINPUTFILE}.",
            "message": "No need to update {HomeDirectory}/{USERINPUTFILE}.",
//  END NON-TRANSLATABLE
            "translation": "No need to update {HomeDirectory}/{USERINPUTFILE}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HomeDirectory",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "homeDirectory"
                },
                {
                    "id": "USERINPUTFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "USERINPUT_FILE"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not create directory {NewDepDir}, error: {Err}",
            "message": "could not create directory {NewDepDir}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "could not create directory {NewDepDir}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NewDepDir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "newDepDir"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not get status of directory {NewDepDir}, error: {Err}",
            "message": "could not get status of directory {NewDepDir}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "could not get status of directory {NewDepDir}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NewDepDir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "newDepDir"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Using working directory: {Dir}",
            "message": "Using working directory: {Dir}",
//  END NON-TRANSLATABLE
            "translation": "Using working directory: {Dir}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "horizon project in {Dir} already contains {FileName}.",
            "message": "horizon project in {Dir} already contains {FileName}.",
//  END NON-TRANSLATABLE
            "translation": "horizon project in {Dir} already contains {FileName}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                },
                {
                    "id": "FileName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error checking for {FileName}: {Err}",
            "message": "error checking for {FileName}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "error checking for {FileName}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal {FilePath}, error: {Err}",
            "message": "failed to unmarshal {FilePath}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to unmarshal {FilePath}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to create json object for {FileName}, error: {Err}",
            "message": "failed to create json object for {FileName}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to create json object for {FileName}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write json object for {FileName} to file {FilePath}, error: {Err}",
            "message": "unable to write json object for {FileName} to file {FilePath}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to write json object for {FileName} to file {FilePath}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "FilePath",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Must set environment variable {DEVTOOLHZNORG} or specify the user as 'org/user' on the --user-pw flag",
            "message": "Must set environment variable {DEVTOOLHZNORG} or specify the user as 'org/user' on the --user-pw flag",
//  END NON-TRANSLATABLE
            "translation": "Must set environment variable {DEVTOOLHZNORG} or specify the user as 'org/user' on the --user-pw flag",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEVTOOLHZNORG",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEVTOOL_HZN_ORG"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Must set environment variable {DEVTOOLHZNUSER} or specify user exchange credentials with --user-pw",
            "message": "Must set environment variable {DEVTOOLHZNUSER} or specify user exchange credentials with --user-pw",
//  END NON-TRANSLATABLE
            "translation": "Must set environment variable {DEVTOOLHZNUSER} or specify user exchange credentials with --user-pw",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEVTOOLHZNUSER",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEVTOOL_HZN_USER"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to set env var {DEVTOOLHZNEXCHANGEURL} to {ExchangeUrl}, error {Err}",
            "message": "Unable to set env var {DEVTOOLHZNEXCHANGEURL} to {ExchangeUrl}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to set env var {DEVTOOLHZNEXCHANGEURL} to {ExchangeUrl}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEVTOOLHZNEXCHANGEURL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEVTOOL_HZN_EXCHANGE_URL"
                },
                {
                    "id": "ExchangeUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "exchangeUrl"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Environment variable {DEVTOOLHZNEXCHANGEURL} must be set.",
            "message": "Environment variable {DEVTOOLHZNEXCHANGEURL} must be set.",
//  END NON-TRANSLATABLE
            "translation": "Environment variable {DEVTOOLHZNEXCHANGEURL} must be set.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DEVTOOLHZNEXCHANGEURL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "DEVTOOL_HZN_EXCHANGE_URL"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "project has no horizon metadata directory. Use hzn dev to create a new project. Error: {Err}",
            "message": "project has no horizon metadata directory. Use hzn dev to create a new project. Error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "project has no horizon metadata directory. Use hzn dev to create a new project. Error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{ProjectType} {Cmd}' project does not validate. {Derr}",
            "message": "'{ProjectType} {Cmd}' project does not validate. {Derr}",
//  END NON-TRANSLATABLE
            "translation": "'{ProjectType} {Cmd}' project does not validate. {Derr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ProjectType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "projectType"
                },
                {
                    "id": "Cmd",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "cmd"
                },
                {
                    "id": "Derr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "derr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{ProjectType} {Cmd}' project does not validate. {Verr}",
            "message": "'{ProjectType} {Cmd}' project does not validate. {Verr}",
//  END NON-TRANSLATABLE
            "translation": "'{ProjectType} {Cmd}' project does not validate. {Verr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ProjectType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "projectType"
                },
                {
                    "id": "Cmd",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "cmd"
                },
                {
                    "id": "Verr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "verr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{ProjectType} {Cmd}' Must specify configuration file type (-t) when a configuration file is specified (-m).",
            "message": "'{ProjectType} {Cmd}' Must specify configuration file type (-t) when a configuration file is specified (-m).",
//  END NON-TRANSLATABLE
            "translation": "'{ProjectType} {Cmd}' Must specify configuration file type (-t) when a configuration file is specified (-m).",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ProjectType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "projectType"
                },
                {
                    "id": "Cmd",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "cmd"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{ProjectType} {Cmd}' configuration file {FileRef} error {Err}",
            "message": "'{ProjectType} {Cmd}' configuration file {FileRef} error {Err}",
//  END NON-TRANSLATABLE
            "translation": "'{ProjectType} {Cmd}' configuration file {FileRef} error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ProjectType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "projectType"
                },
                {
                    "id": "Cmd",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "cmd"
                },
                {
                    "id": "FileRef",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "fileRef"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "project does not validate. {Verr}",
            "message": "project does not validate. {Verr}",
//  END NON-TRANSLATABLE
            "translation": "project does not validate. {Verr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verr",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "verr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "project in {Dir} is not a horizon project.",
            "message": "project in {Dir} is not a horizon project.",
//  END NON-TRANSLATABLE
            "translation": "project in {Dir} is not a horizon project.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dir",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dir"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Final Attributes: {Attrs}",
            "message": "Final Attributes: {Attrs}",
//  END NON-TRANSLATABLE
            "translation": "Final Attributes: {Attrs}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Attrs",
                    "string": "%[1]v",
                    "type": "[]github.com/open-horizon/anax/persistence.Attribute",
                    "underlyingType": "[]github.com/open-horizon/anax/persistence.Attribute",
                    "argNum": 1,
                    "expr": "attrs"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "global attribute conversion error: {Cerr}",
            "message": "global attribute conversion error: {Cerr}",
//  END NON-TRANSLATABLE
            "translation": "global attribute conversion error: {Cerr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Cerr",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "cerr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{ProjectType} {Cmd}' unable to create Container Worker, {Cerr}",
            "message": "'{ProjectType} {Cmd}' unable to create Container Worker, {Cerr}",
//  END NON-TRANSLATABLE
            "translation": "'{ProjectType} {Cmd}' unable to create Container Worker, {Cerr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ProjectType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "projectType"
                },
                {
                    "id": "Cmd",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "cmd"
                },
                {
                    "id": "Cerr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "cerr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to list containers, {Err}",
            "message": "unable to list containers, {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to list containers, {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to list existing containers: {Err}",
            "message": "unable to list existing containers: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to list existing containers: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Found main network for service {Nwname}, {ContainerNetwork}",
            "message": "Found main network for service {Nwname}, {ContainerNetwork}",
//  END NON-TRANSLATABLE
            "translation": "Found main network for service {Nwname}, {ContainerNetwork}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Nwname",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nw_name"
                },
                {
                    "id": "ContainerNetwork",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/vendor/github.com/fsouza/go-dockerclient.ContainerNetwork",
                    "underlyingType": "struct{Aliases []string \"json:\\\"Aliases,omitempty\\\" yaml:\\\"Aliases,omitempty\\\" toml:\\\"Aliases,omitempty\\\"\"; MacAddress string \"json:\\\"MacAddress,omitempty\\\" yaml:\\\"MacAddress,omitempty\\\" toml:\\\"MacAddress,omitempty\\\"\"; GlobalIPv6PrefixLen int \"json:\\\"GlobalIPv6PrefixLen,omitempty\\\" yaml:\\\"GlobalIPv6PrefixLen,omitempty\\\" toml:\\\"GlobalIPv6PrefixLen,omitempty\\\"\"; GlobalIPv6Address string \"json:\\\"GlobalIPv6Address,omitempty\\\" yaml:\\\"GlobalIPv6Address,omitempty\\\" toml:\\\"GlobalIPv6Address,omitempty\\\"\"; IPv6Gateway string \"json:\\\"IPv6Gateway,omitempty\\\" yaml:\\\"IPv6Gateway,omitempty\\\" toml:\\\"IPv6Gateway,omitempty\\\"\"; IPPrefixLen int \"json:\\\"IPPrefixLen,omitempty\\\" yaml:\\\"IPPrefixLen,omitempty\\\" toml:\\\"IPPrefixLen,omitempty\\\"\"; IPAddress string \"json:\\\"IPAddress,omitempty\\\" yaml:\\\"IPAddress,omitempty\\\" toml:\\\"IPAddress,omitempty\\\"\"; Gateway string \"json:\\\"Gateway,omitempty\\\" yaml:\\\"Gateway,omitempty\\\" toml:\\\"Gateway,omitempty\\\"\"; EndpointID string \"json:\\\"EndpointID,omitempty\\\" yaml:\\\"EndpointID,omitempty\\\" toml:\\\"EndpointID,omitempty\\\"\"; NetworkID string \"json:\\\"NetworkID,omitempty\\\" yaml:\\\"NetworkID,omitempty\\\" toml:\\\"NetworkID,omitempty\\\"\"}",
                    "argNum": 2,
                    "expr": "nw"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' {StartErr} for dependency {URL}",
            "message": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' {StartErr} for dependency {URL}",
//  END NON-TRANSLATABLE
            "translation": "'{SERVICECOMMAND} {SERVICESTARTCOMMAND}' {StartErr} for dependency {URL}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SERVICECOMMAND",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "SERVICE_COMMAND"
                },
                {
                    "id": "SERVICESTARTCOMMAND",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "SERVICE_START_COMMAND"
                },
                {
                    "id": "StartErr",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "startErr"
                },
                {
                    "id": "URL",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "depDef.URL"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to retrieve dependency metadata: {Err}",
            "message": "unable to retrieve dependency metadata: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to retrieve dependency metadata: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to start dependencies: {Err}",
            "message": "unable to start dependencies: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to start dependencies: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Skipping service because it has no deployment configuration: {DepConfig}",
            "message": "Skipping service because it has no deployment configuration: {DepConfig}",
//  END NON-TRANSLATABLE
            "translation": "Skipping service because it has no deployment configuration: {DepConfig}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DepConfig",
                    "string": "%[1]v",
                    "type": "*github.com/open-horizon/anax/cli/exchange.DeploymentConfig",
                    "underlyingType": "*github.com/open-horizon/anax/cli/exchange.DeploymentConfig",
                    "argNum": 1,
                    "expr": "depConfig"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to generate instance ID: {Err}",
            "message": "unable to generate instance ID: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to generate instance ID: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create environment variables",
            "message": "unable to create environment variables",
//  END NON-TRANSLATABLE
            "translation": "unable to create environment variables",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Passing environment variables: {EnvironmentAdditions}",
            "message": "Passing environment variables: {EnvironmentAdditions}",
//  END NON-TRANSLATABLE
            "translation": "Passing environment variables: {EnvironmentAdditions}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "EnvironmentAdditions",
                    "string": "%[1]v",
                    "type": "map[string]string",
                    "underlyingType": "map[string]string",
                    "argNum": 1,
                    "expr": "environmentAdditions"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Start {LogName}: {CLIString} with instance id prefix {Id}",
            "message": "Start {LogName}: {CLIString} with instance id prefix {Id}",
//  END NON-TRANSLATABLE
            "translation": "Start {LogName}: {CLIString} with instance id prefix {Id}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "LogName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "logName"
                },
                {
                    "id": "CLIString",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dc.CLIString()"
                },
                {
                    "id": "Id",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "id"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to start container using {CLIString}, error: {StartErr}",
            "message": "unable to start container using {CLIString}, error: {StartErr}",
//  END NON-TRANSLATABLE
            "translation": "unable to start container using {CLIString}, error: {StartErr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CLIString",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "dc.CLIString()"
                },
                {
                    "id": "StartErr",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "startErr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Running {LogName}.",
            "message": "Running {LogName}.",
//  END NON-TRANSLATABLE
            "translation": "Running {LogName}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "LogName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "logName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Stopping dependencies.",
            "message": "Stopping dependencies.",
//  END NON-TRANSLATABLE
            "translation": "Stopping dependencies.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to stop dependencies: {Err}",
            "message": "unable to stop dependencies: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to stop dependencies: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Found containers {Containers}",
            "message": "Found containers {Containers}",
//  END NON-TRANSLATABLE
            "translation": "Found containers {Containers}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Containers",
                    "string": "%[1]v",
                    "type": "[]github.com/open-horizon/anax/vendor/github.com/fsouza/go-dockerclient.APIContainers",
                    "underlyingType": "[]github.com/open-horizon/anax/vendor/github.com/fsouza/go-dockerclient.APIContainers",
                    "argNum": 1,
                    "expr": "containers"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Stop {LogName}: {CLIString} with instance id prefix {MsId}",
            "message": "Stop {LogName}: {CLIString} with instance id prefix {MsId}",
//  END NON-TRANSLATABLE
            "translation": "Stop {LogName}: {CLIString} with instance id prefix {MsId}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "LogName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "logName"
                },
                {
                    "id": "CLIString",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "dc.CLIString()"
                },
                {
                    "id": "MsId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "msId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to create docker client, error: {Derr}",
            "message": "failed to create docker client, error: {Derr}",
//  END NON-TRANSLATABLE
            "translation": "failed to create docker client, error: {Derr}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Derr",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "derr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to convert global attributes in {USERINPUTFILE}, error: {Err}",
            "message": "failed to convert global attributes in {USERINPUTFILE}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to convert global attributes in {USERINPUTFILE}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "USERINPUTFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "USERINPUT_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to extract authentication attribute from {USERINPUTFILE}, error: {Err}",
            "message": "failed to extract authentication attribute from {USERINPUTFILE}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to extract authentication attribute from {USERINPUTFILE}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "USERINPUTFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "USERINPUT_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "getting container images into docker.",
            "message": "getting container images into docker.",
//  END NON-TRANSLATABLE
            "translation": "getting container images into docker.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to get container images, error: {Err}",
            "message": "failed to get container images, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to get container images, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "invalid image format: {Image}",
            "message": "invalid image format: {Image}",
//  END NON-TRANSLATABLE
            "translation": "invalid image format: {Image}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Image",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "image"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "file {FilePath} exists already",
            "message": "file {FilePath} exists already",
//  END NON-TRANSLATABLE
            "translation": "file {FilePath} exists already",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write content to file {FilePath}, error: {Err}",
            "message": "unable to write content to file {FilePath}, error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to write content to file {FilePath}, error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'exchange agbot list' output: {Err}",
            "message": "failed to marshal 'exchange agbot list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'exchange agbot list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "agbot '{Agbot}' not found in org {Org}",
            "message": "agbot '{Agbot}' not found in org {Org}",
//  END NON-TRANSLATABLE
            "translation": "agbot '{Agbot}' not found in org {Org}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Agbot",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "agbot"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "both patternorg and pattern must be specified (or neither)",
            "message": "both patternorg and pattern must be specified (or neither)",
//  END NON-TRANSLATABLE
            "translation": "both patternorg and pattern must be specified (or neither)",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' not found in agbot '{Agbot}'",
            "message": "pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' not found in agbot '{Agbot}'",
//  END NON-TRANSLATABLE
            "translation": "pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' not found in agbot '{Agbot}'",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pattern"
                },
                {
                    "id": "PatternOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "patternOrg"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeOrg"
                },
                {
                    "id": "Agbot",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' already exists in agbot '{Agbot}'",
            "message": "Pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' already exists in agbot '{Agbot}'",
//  END NON-TRANSLATABLE
            "translation": "Pattern '{Pattern}' with org '{PatternOrg}' and node org '{NodeOrg}' already exists in agbot '{Agbot}'",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pattern"
                },
                {
                    "id": "PatternOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "patternOrg"
                },
                {
                    "id": "NodeOrg",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeOrg"
                },
                {
                    "id": "Agbot",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Adding Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot will start looking for nodes that are compatible with this policy.",
            "message": "Adding Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot will start looking for nodes that are compatible with this policy.",
//  END NON-TRANSLATABLE
            "translation": "Adding Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot will start looking for nodes that are compatible with this policy.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "Agbot",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Business policy org {PolOrg}' already exists in agbot '{Agbot}'",
            "message": "Business policy org {PolOrg}' already exists in agbot '{Agbot}'",
//  END NON-TRANSLATABLE
            "translation": "Business policy org {PolOrg}' already exists in agbot '{Agbot}'",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "polOrg"
                },
                {
                    "id": "Agbot",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removing Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot is no longer looking for nodes that are compatible with this policy.",
            "message": "Removing Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot is no longer looking for nodes that are compatible with this policy.",
//  END NON-TRANSLATABLE
            "translation": "Removing Business policy org {PolOrg}' to agbot '{Agbot}'. The agbot is no longer looking for nodes that are compatible with this policy.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PolOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "PolOrg"
                },
                {
                    "id": "Agbot",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "agbot"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Policy {Policy} not found in org {PolOrg}",
            "message": "Policy {Policy} not found in org {PolOrg}",
//  END NON-TRANSLATABLE
            "translation": "Policy {Policy} not found in org {PolOrg}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Policy",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "policy"
                },
                {
                    "id": "PolOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "polOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange business listpolicy' output: {Err}",
            "message": "failed to marshal 'hzn exchange business listpolicy' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn exchange business listpolicy' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal json input file {JsonFilePath}: {Err}",
            "message": "failed to unmarshal json input file {JsonFilePath}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to unmarshal json input file {JsonFilePath}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JsonFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "jsonFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Incorrect business policy format in file {JsonFilePath}: {Err}",
            "message": "Incorrect business policy format in file {JsonFilePath}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Incorrect business policy format in file {JsonFilePath}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JsonFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "jsonFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Business policy: {Org}/{Policy} updated in the Horizon Exchange",
            "message": "Business policy: {Org}/{Policy} updated in the Horizon Exchange",
//  END NON-TRANSLATABLE
            "translation": "Business policy: {Org}/{Policy} updated in the Horizon Exchange",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Policy",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policy"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Business policy: {Org}/{Policy} added in the Horizon Exchange",
            "message": "Business policy: {Org}/{Policy} added in the Horizon Exchange",
//  END NON-TRANSLATABLE
            "translation": "Business policy: {Org}/{Policy} added in the Horizon Exchange",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Policy",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policy"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal attribute input {Attribute}: {Err}",
            "message": "failed to unmarshal attribute input {Attribute}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to unmarshal attribute input {Attribute}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Attribute",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "attribute"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating Policy {Org}/{PolicyName} in the Horizon Exchange and re-evaluating all agreements based on this Business policy. Existing agreements might be cancelled and re-negotiated.",
            "message": "Updating Policy {Org}/{PolicyName} in the Horizon Exchange and re-evaluating all agreements based on this Business policy. Existing agreements might be cancelled and re-negotiated.",
//  END NON-TRANSLATABLE
            "translation": "Updating Policy {Org}/{PolicyName} in the Horizon Exchange and re-evaluating all agreements based on this Business policy. Existing agreements might be cancelled and re-negotiated.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "PolicyName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Policy {Org}/{PolicyName} updated in the Horizon Exchange",
            "message": "Policy {Org}/{PolicyName} updated in the Horizon Exchange",
//  END NON-TRANSLATABLE
            "translation": "Policy {Org}/{PolicyName} updated in the Horizon Exchange",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "PolicyName",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid format for properties: {Err}",
            "message": "Invalid format for properties: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Invalid format for properties: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid format for constraints: {Err}",
            "message": "Invalid format for constraints: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Invalid format for constraints: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Business policy attribute to be updated is not found in the input file. Supported attributes are: label, description, service, properties, constraints, and userInput.",
            "message": "Business policy attribute to be updated is not found in the input file. Supported attributes are: label, description, service, properties, constraints, and userInput.",
//  END NON-TRANSLATABLE
            "translation": "Business policy attribute to be updated is not found in the input file. Supported attributes are: label, description, service, properties, constraints, and userInput.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove business policy {Policy} for org {Org} from the Horizon Exchange?",
            "message": "Are you sure you want to remove business policy {Policy} for org {Org} from the Horizon Exchange?",
//  END NON-TRANSLATABLE
            "translation": "Are you sure you want to remove business policy {Policy} for org {Org} from the Horizon Exchange?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Policy",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "policy"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Policy {Org}/{Policy} not found in the Horizon Exchange",
            "message": "Policy {Org}/{Policy} not found in the Horizon Exchange",
//  END NON-TRANSLATABLE
            "translation": "Policy {Org}/{Policy} not found in the Horizon Exchange",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Policy",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policy"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removing Business policy {Org}/{Policy} and re-evaluating all agreements based on just the built-in node policy. Existing agreements might be cancelled and re-negotiated",
            "message": "Removing Business policy {Org}/{Policy} and re-evaluating all agreements based on just the built-in node policy. Existing agreements might be cancelled and re-negotiated",
//  END NON-TRANSLATABLE
            "translation": "Removing Business policy {Org}/{Policy} and re-evaluating all agreements based on just the built-in node policy. Existing agreements might be cancelled and re-negotiated",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Policy",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policy"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Business policy {Org}/{Policy} removed",
            "message": "Business policy {Org}/{Policy} removed",
//  END NON-TRANSLATABLE
            "translation": "Business policy {Org}/{Policy} removed",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Policy",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "policy"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Business policy label.",
            "message": "Business policy label.",
//  END NON-TRANSLATABLE
            "translation": "Business policy label.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Business policy description.",
            "message": "Business policy description.",
//  END NON-TRANSLATABLE
            "translation": "Business policy description.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the service.",
            "message": "The name of the service.",
//  END NON-TRANSLATABLE
            "translation": "The name of the service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The org of the service.",
            "message": "The org of the service.",
//  END NON-TRANSLATABLE
            "translation": "The org of the service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Set to '*' to use services of any hardware architecture.",
            "message": "Set to '*' to use services of any hardware architecture.",
//  END NON-TRANSLATABLE
            "translation": "Set to '*' to use services of any hardware architecture.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of service versions.",
            "message": "A list of service versions.",
//  END NON-TRANSLATABLE
            "translation": "A list of service versions.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of policy properties that describe the service being dployed.",
            "message": "A list of policy properties that describe the service being dployed.",
//  END NON-TRANSLATABLE
            "translation": "A list of policy properties that describe the service being dployed.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of constraint expressions of the form \u003cproperty name\u003e \u003coperator\u003e \u003cproperty value\u003e,",
            "message": "A list of constraint expressions of the form \u003cproperty name\u003e \u003coperator\u003e \u003cproperty value\u003e,",
//  END NON-TRANSLATABLE
            "translation": "A list of constraint expressions of the form \u003cproperty name\u003e \u003coperator\u003e \u003cproperty value\u003e,",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "separated by boolean operators AND (\u0026\u0026) or OR (||).",
            "message": "separated by boolean operators AND (\u0026\u0026) or OR (||).",
//  END NON-TRANSLATABLE
            "translation": "separated by boolean operators AND (\u0026\u0026) or OR (||).",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of userInput variables to set when the service runs, listed by service.",
            "message": "A list of userInput variables to set when the service runs, listed by service.",
//  END NON-TRANSLATABLE
            "translation": "A list of userInput variables to set when the service runs, listed by service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service version range to which these variables should be applied.",
            "message": "The service version range to which these variables should be applied.",
//  END NON-TRANSLATABLE
            "translation": "The service version range to which these variables should be applied.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The input variables to be set.",
            "message": "The input variables to be set.",
//  END NON-TRANSLATABLE
            "translation": "The input variables to be set.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Flags -s and -l are mutually exclusive.",
            "message": "Flags -s and -l are mutually exclusive.",
//  END NON-TRANSLATABLE
            "translation": "Flags -s and -l are mutually exclusive.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange catalog servicelist -l' output: {Err}",
            "message": "failed to marshal 'hzn exchange catalog servicelist -l' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn exchange catalog servicelist -l' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange catalog servicelist -s' output: {Err}",
            "message": "failed to marshal 'hzn exchange catalog servicelist -s' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn exchange catalog servicelist -s' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange catalog servicelist' output: {Err}",
            "message": "failed to marshal 'hzn exchange catalog servicelist' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn exchange catalog servicelist' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange catalog patternlist -l' output: {Err}",
            "message": "failed to marshal 'hzn exchange catalog patternlist -l' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn exchange catalog patternlist -l' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange catalog patternlist -s' output: {Err}",
            "message": "failed to marshal 'hzn exchange catalog patternlist -s' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn exchange catalog patternlist -s' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange catalog patternlist' output: {Err}",
            "message": "failed to marshal 'hzn exchange catalog patternlist' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn exchange catalog patternlist' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "no service name",
            "message": "no service name",
//  END NON-TRANSLATABLE
            "translation": "no service name",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "no docker image for service {ServiceName}",
            "message": "no docker image for service {ServiceName}",
//  END NON-TRANSLATABLE
            "translation": "no docker image for service {ServiceName}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal body for {D}: {Err}",
            "message": "failed to marshal body for {D}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal body for {D}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "D",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "d"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal json for deployment field {StringjsonBytes}: {Err}",
            "message": "failed to unmarshal json for deployment field {StringjsonBytes}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to unmarshal json for deployment field {StringjsonBytes}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "StringjsonBytes",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "string(jsonBytes)"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'exchange node list' output: {Err}",
            "message": "failed to marshal 'exchange node list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'exchange node list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "node '{Node}' not found in org {Org}",
            "message": "node '{Node}' not found in org {Org}",
//  END NON-TRANSLATABLE
            "translation": "node '{Node}' not found in org {Org}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Node",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "node"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "if node or token are specified then they both must be specified",
            "message": "if node or token are specified then they both must be specified",
//  END NON-TRANSLATABLE
            "translation": "if node or token are specified then they both must be specified",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "do not specify both the -n flag and the node and token positional arguments. They mean the same thing.",
            "message": "do not specify both the -n flag and the node and token positional arguments. They mean the same thing.",
//  END NON-TRANSLATABLE
            "translation": "do not specify both the -n flag and the node and token positional arguments. They mean the same thing.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "either the node and token positional arguments, or the -n flag must be specified.",
            "message": "either the node and token positional arguments, or the -n flag must be specified.",
//  END NON-TRANSLATABLE
            "translation": "either the node and token positional arguments, or the -n flag must be specified.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "User {Org}/{User} does not exist in the exchange with the specified password, creating it...",
            "message": "User {Org}/{User} does not exist in the exchange with the specified password, creating it...",
//  END NON-TRANSLATABLE
            "translation": "User {Org}/{User} does not exist in the exchange with the specified password, creating it...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "User",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "user"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "user '{Org}/{User}' does not exist with the specified password or -e was not specified to be able to create it in the 'public' org.",
            "message": "user '{Org}/{User}' does not exist with the specified password or -e was not specified to be able to create it in the 'public' org.",
//  END NON-TRANSLATABLE
            "translation": "user '{Org}/{User}' does not exist with the specified password or -e was not specified to be able to create it in the 'public' org.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "User",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "user"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "key '{OrgAndCredsorg_nodeId}' not found in exchange nodes output",
            "message": "key '{OrgAndCredsorg_nodeId}' not found in exchange nodes output",
//  END NON-TRANSLATABLE
            "translation": "key '{OrgAndCredsorg_nodeId}' not found in exchange nodes output",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OrgAndCredsorg_nodeId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cliutils.OrgAndCreds(org, nodeId)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "can not update existing node {NodeId} because it is owned by another user ({Owner})",
            "message": "can not update existing node {NodeId} because it is owned by another user ({Owner})",
//  END NON-TRANSLATABLE
            "translation": "can not update existing node {NodeId} because it is owned by another user ({Owner})",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Owner",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "ourNode.Owner"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {Org}/{Node} not found in the Horizon Exchange.",
            "message": "Node {Org}/{Node} not found in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Node {Org}/{Node} not found in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Node",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {Node} updated in the Horizon Exchange.",
            "message": "Node {Node} updated in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Node {Node} updated in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Node",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "-n is mutually exclusive with \u003cnode\u003e and \u003ctoken\u003e arguments.",
            "message": "-n is mutually exclusive with \u003cnode\u003e and \u003ctoken\u003e arguments.",
//  END NON-TRANSLATABLE
            "translation": "-n is mutually exclusive with \u003cnode\u003e and \u003ctoken\u003e arguments.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Please specify both node and token.",
            "message": "Please specify both node and token.",
//  END NON-TRANSLATABLE
            "translation": "Please specify both node and token.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove node {Org}/{Node} from the Horizon Exchange (should not be done while an edge node is registered with this node id)?",
            "message": "Are you sure you want to remove node {Org}/{Node} from the Horizon Exchange (should not be done while an edge node is registered with this node id)?",
//  END NON-TRANSLATABLE
            "translation": "Are you sure you want to remove node {Org}/{Node} from the Horizon Exchange (should not be done while an edge node is registered with this node id)?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Node",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "node '{Org}/{Node}' not found.",
            "message": "node '{Org}/{Node}' not found.",
//  END NON-TRANSLATABLE
            "translation": "node '{Org}/{Node}' not found.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Node",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Incorrect policy format in file {JsonFilePath}: {Err}",
            "message": "Incorrect policy format in file {JsonFilePath}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Incorrect policy format in file {JsonFilePath}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JsonFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "jsonFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node policy not found for node {Node}/{Org}",
            "message": "Node policy not found for node {Node}/{Org}",
//  END NON-TRANSLATABLE
            "translation": "Node policy not found for node {Node}/{Org}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Node",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "node"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid property list {Attribute}: {Err}",
            "message": "Invalid property list {Attribute}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Invalid property list {Attribute}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Attribute",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "attribute"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating Node {Node} policy properties in the horizon exchange and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
            "message": "Updating Node {Node} policy properties in the horizon exchange and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
//  END NON-TRANSLATABLE
            "translation": "Updating Node {Node} policy properties in the horizon exchange and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Node",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {Node} policy properties updated in the horizon exchange.",
            "message": "Node {Node} policy properties updated in the horizon exchange.",
//  END NON-TRANSLATABLE
            "translation": "Node {Node} policy properties updated in the horizon exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Node",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid constraint expression {Attribute}: {Err}",
            "message": "Invalid constraint expression {Attribute}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Invalid constraint expression {Attribute}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Attribute",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "attribute"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating Node {Node} policy constraints in the horizon exchange and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
            "message": "Updating Node {Node} policy constraints in the horizon exchange and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
//  END NON-TRANSLATABLE
            "translation": "Updating Node {Node} policy constraints in the horizon exchange and re-evaluating all agreements based on this policy. Existing agreements might be cancelled and re-negotiated.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Node",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {Node} policy constraints updated in the horizon exchange.",
            "message": "Node {Node} policy constraints updated in the horizon exchange.",
//  END NON-TRANSLATABLE
            "translation": "Node {Node} policy constraints updated in the horizon exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Node",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to find valid attribute to update in input {Attribute}. Attributes are constraints and properties.",
            "message": "Failed to find valid attribute to update in input {Attribute}. Attributes are constraints and properties.",
//  END NON-TRANSLATABLE
            "translation": "Failed to find valid attribute to update in input {Attribute}. Attributes are constraints and properties.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Attribute",
                    "string": "%[1]s",
                    "type": "[]byte",
                    "underlyingType": "[]byte",
                    "argNum": 1,
                    "expr": "attribute"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove node policy for {Org}/{Node} from the Horizon Exchange?",
            "message": "Are you sure you want to remove node policy for {Org}/{Node} from the Horizon Exchange?",
//  END NON-TRANSLATABLE
            "translation": "Are you sure you want to remove node policy for {Org}/{Node} from the Horizon Exchange?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Node",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removing Node policy and re-evaluating all agreements based on just the built-in node policy. Existing agreements might be cancelled and re-negotiated.",
            "message": "Removing Node policy and re-evaluating all agreements based on just the built-in node policy. Existing agreements might be cancelled and re-negotiated.",
//  END NON-TRANSLATABLE
            "translation": "Removing Node policy and re-evaluating all agreements based on just the built-in node policy. Existing agreements might be cancelled and re-negotiated.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'exchange pattern list' output: {Err}",
            "message": "failed to marshal 'exchange pattern list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'exchange pattern list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "pattern '{Pattern}' not found in org {PatOrg}",
            "message": "pattern '{Pattern}' not found in org {PatOrg}",
//  END NON-TRANSLATABLE
            "translation": "pattern '{Pattern}' not found in org {PatOrg}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pattern"
                },
                {
                    "id": "PatOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "patOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange pattern list' output: {Err}",
            "message": "failed to marshal 'hzn exchange pattern list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn exchange pattern list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Pattern {Pattern}/{PatOrg} updated in the Horizon exchange.",
            "message": "Pattern {Pattern}/{PatOrg} updated in the Horizon exchange.",
//  END NON-TRANSLATABLE
            "translation": "Pattern {Pattern}/{PatOrg} updated in the Horizon exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pattern"
                },
                {
                    "id": "PatOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "patOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal json for deployment overrides field {StringjsonBytes}: {Err}",
            "message": "failed to unmarshal json for deployment overrides field {StringjsonBytes}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to unmarshal json for deployment overrides field {StringjsonBytes}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "StringjsonBytes",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "string(jsonBytes)"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the org specified in the input file ({Org}) must match the org specified on the command line ({Org_1})",
            "message": "the org specified in the input file ({Org}) must match the org specified on the command line ({Org_1})",
//  END NON-TRANSLATABLE
            "translation": "the org specified in the input file ({Org}) must match the org specified on the command line ({Org_1})",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patFile.Org"
                },
                {
                    "id": "Org_1",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the pattern definition ({Services}) must contain services, unable to proceed",
            "message": "the pattern definition ({Services}) must contain services, unable to proceed",
//  END NON-TRANSLATABLE
            "translation": "the pattern definition ({Services}) must contain services, unable to proceed",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Services",
                    "string": "%[1]s",
                    "type": "[]github.com/open-horizon/anax/cli/exchange.ServiceReferenceFile",
                    "underlyingType": "[]github.com/open-horizon/anax/cli/exchange.ServiceReferenceFile",
                    "argNum": 1,
                    "expr": "patFile.Services"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Signing deployment_overrides field in service {I__1}, serviceVersion number {J__1}",
            "message": "Signing deployment_overrides field in service {I__1}, serviceVersion number {J__1}",
//  END NON-TRANSLATABLE
            "translation": "Signing deployment_overrides field in service {I__1}, serviceVersion number {J__1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I__1",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i + 1"
                },
                {
                    "id": "J__1",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "j + 1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal deployment_overrides field in service {I__1}, serviceVersion number {J__1}: {Err}",
            "message": "failed to marshal deployment_overrides field in service {I__1}, serviceVersion number {J__1}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal deployment_overrides field in service {I__1}, serviceVersion number {J__1}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I__1",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i + 1"
                },
                {
                    "id": "J__1",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "j + 1"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem signing the deployment_overrides string with {KeyFilePath}: {Err}",
            "message": "problem signing the deployment_overrides string with {KeyFilePath}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "problem signing the deployment_overrides string with {KeyFilePath}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating {ExchId} in the exchange...",
            "message": "Updating {ExchId} in the exchange...",
//  END NON-TRANSLATABLE
            "translation": "Updating {ExchId} in the exchange...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Creating {ExchId} in the exchange...",
            "message": "Creating {ExchId} in the exchange...",
//  END NON-TRANSLATABLE
            "translation": "Creating {ExchId} in the exchange...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Storing {BaseName} with the pattern in the exchange...",
            "message": "Storing {BaseName} with the pattern in the exchange...",
//  END NON-TRANSLATABLE
            "translation": "Storing {BaseName} with the pattern in the exchange...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BaseName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "baseName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "key '{Org____pattern}' not found in resources returned from exchange",
            "message": "key '{Org____pattern}' not found in resources returned from exchange",
//  END NON-TRANSLATABLE
            "translation": "key '{Org____pattern}' not found in resources returned from exchange",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org____pattern",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org + \"/\" + pattern"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1}",
            "message": "verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1}",
//  END NON-TRANSLATABLE
            "translation": "verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I__1",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i + 1"
                },
                {
                    "id": "J__1",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "j + 1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1} with {KeyFilePath}: {Err}",
            "message": "problem verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1} with {KeyFilePath}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "problem verifying deployment_overrides string in service {I__1}, serviceVersion number {J__1} with {KeyFilePath}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I__1",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i + 1"
                },
                {
                    "id": "J__1",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "j + 1"
                },
                {
                    "id": "KeyFilePath",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "keyFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deployment_overrides string in service {I__1}, serviceVersion number {J__1} was not signed with the private key associated with this public key {KeyFilePath}.",
            "message": "Deployment_overrides string in service {I__1}, serviceVersion number {J__1} was not signed with the private key associated with this public key {KeyFilePath}.",
//  END NON-TRANSLATABLE
            "translation": "Deployment_overrides string in service {I__1}, serviceVersion number {J__1} was not signed with the private key associated with this public key {KeyFilePath}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I__1",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i + 1"
                },
                {
                    "id": "J__1",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "j + 1"
                },
                {
                    "id": "KeyFilePath",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "keyFilePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove pattern {Org}/{Pattern} from the Horizon Exchange?",
            "message": "Are you sure you want to remove pattern {Org}/{Pattern} from the Horizon Exchange?",
//  END NON-TRANSLATABLE
            "translation": "Are you sure you want to remove pattern {Org}/{Pattern} from the Horizon Exchange?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Pattern",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pattern"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "key '{KeyName}' not found",
            "message": "key '{KeyName}' not found",
//  END NON-TRANSLATABLE
            "translation": "key '{KeyName}' not found",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "user input {Name} has no default value and is not set",
            "message": "user input {Name} has no default value and is not set",
//  END NON-TRANSLATABLE
            "translation": "user input {Name} has no default value and is not set",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ui.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange service list' output: {Err}",
            "message": "failed to marshal 'hzn exchange service list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn exchange service list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "service '{Service}' not found in org {SvcOrg}",
            "message": "service '{Service}' not found in org {SvcOrg}",
//  END NON-TRANSLATABLE
            "translation": "service '{Service}' not found in org {SvcOrg}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Service",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "service"
                },
                {
                    "id": "SvcOrg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svcOrg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Flags -I and -P are mutually exclusive.",
            "message": "Flags -I and -P are mutually exclusive.",
//  END NON-TRANSLATABLE
            "translation": "Flags -I and -P are mutually exclusive.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Adding service policy for service: {ServiceAddPolicyService}",
            "message": "Adding service policy for service: {ServiceAddPolicyService}",
//  END NON-TRANSLATABLE
            "translation": "Adding service policy for service: {ServiceAddPolicyService}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceAddPolicyService",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceAddPolicyService"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service policy added for service: {ServiceAddPolicyService}",
            "message": "Service policy added for service: {ServiceAddPolicyService}",
//  END NON-TRANSLATABLE
            "translation": "Service policy added for service: {ServiceAddPolicyService}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceAddPolicyService",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceAddPolicyService"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the 'deploymentSignature' field is non-blank, but being ignored, because the 'deployment' field is null",
            "message": "the 'deploymentSignature' field is non-blank, but being ignored, because the 'deployment' field is null",
//  END NON-TRANSLATABLE
            "translation": "the 'deploymentSignature' field is non-blank, but being ignored, because the 'deployment' field is null",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to sign deployment config: {Err}",
            "message": "unable to sign deployment config: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to sign deployment config: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the 'deployment' field is a non-empty string, which implies this service is pre-signed, but the 'deploymentSignature' field is empty",
            "message": "the 'deployment' field is a non-empty string, which implies this service is pre-signed, but the 'deploymentSignature' field is empty",
//  END NON-TRANSLATABLE
            "translation": "the 'deployment' field is a non-empty string, which implies this service is pre-signed, but the 'deploymentSignature' field is empty",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "'deployment' field is invalid type. It must be either a json object or a string (for pre-signed)",
            "message": "'deployment' field is invalid type. It must be either a json object or a string (for pre-signed)",
//  END NON-TRANSLATABLE
            "translation": "'deployment' field is invalid type. It must be either a json object or a string (for pre-signed)",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Service {Org}/{ExchId} exists in the exchange, do you want to overwrite it?",
            "message": "Service {Org}/{ExchId} exists in the exchange, do you want to overwrite it?",
//  END NON-TRANSLATABLE
            "translation": "Service {Org}/{ExchId} exists in the exchange, do you want to overwrite it?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "ExchId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "exchId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Storing {BaseName} with the service in the exchange...",
            "message": "Storing {BaseName} with the service in the exchange...",
//  END NON-TRANSLATABLE
            "translation": "Storing {BaseName} with the service in the exchange...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BaseName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "baseName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error: registry-token value of '{RegTok}' is not in the required format: registry:user:token. Not storing that in the Horizon exchange.",
            "message": "Error: registry-token value of '{RegTok}' is not in the required format: registry:user:token. Not storing that in the Horizon exchange.",
//  END NON-TRANSLATABLE
            "translation": "Error: registry-token value of '{RegTok}' is not in the required format: registry:user:token. Not storing that in the Horizon exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "RegTok",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "regTok"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to get container images from deployment: {Err}",
            "message": "unable to get container images from deployment: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to get container images from deployment: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem verifying deployment string with {KeyFilePath}: {Err}",
            "message": "problem verifying deployment string with {KeyFilePath}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "problem verifying deployment string with {KeyFilePath}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Deployment string was not signed with the private key associated with this public key {KeyFilePath}.",
            "message": "Deployment string was not signed with the private key associated with this public key {KeyFilePath}.",
//  END NON-TRANSLATABLE
            "translation": "Deployment string was not signed with the private key associated with this public key {KeyFilePath}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFilePath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFilePath"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove service {Org}/{Service} from the Horizon Exchange?",
            "message": "Are you sure you want to remove service {Org}/{Service} from the Horizon Exchange?",
//  END NON-TRANSLATABLE
            "translation": "Are you sure you want to remove service {Org}/{Service} from the Horizon Exchange?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Service",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "service"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "keys not found",
            "message": "keys not found",
//  END NON-TRANSLATABLE
            "translation": "keys not found",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "docker auth {AuthId} not found",
            "message": "docker auth {AuthId} not found",
//  END NON-TRANSLATABLE
            "translation": "docker auth {AuthId} not found",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AuthId",
                    "string": "%[1]d",
                    "type": "uint",
                    "underlyingType": "uint",
                    "argNum": 1,
                    "expr": "authId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "docker auths not found",
            "message": "docker auths not found",
//  END NON-TRANSLATABLE
            "translation": "docker auths not found",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "service '{Org}/{Service}' not found.",
            "message": "service '{Org}/{Service}' not found.",
//  END NON-TRANSLATABLE
            "translation": "service '{Org}/{Service}' not found.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Service",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "service"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn exchange service listpolicy' output: {Err}",
            "message": "failed to marshal 'hzn exchange service listpolicy' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn exchange service listpolicy' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Updating Service policy  and re-evaluating all agreements based on this Service policy. Existing agreements might be cancelled and re-negotiated.",
            "message": "Updating Service policy  and re-evaluating all agreements based on this Service policy. Existing agreements might be cancelled and re-negotiated.",
//  END NON-TRANSLATABLE
            "translation": "Updating Service policy  and re-evaluating all agreements based on this Service policy. Existing agreements might be cancelled and re-negotiated.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove service policy for {Org}/{Service} from the Horizon Exchange?",
            "message": "Are you sure you want to remove service policy for {Org}/{Service} from the Horizon Exchange?",
//  END NON-TRANSLATABLE
            "translation": "Are you sure you want to remove service policy for {Org}/{Service} from the Horizon Exchange?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Service",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "service"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removing Service policy and re-evaluating all agreements based on just the built-in node policy. Existing agreements might be cancelled and re-negotiated.",
            "message": "Removing Service policy and re-evaluating all agreements based on just the built-in node policy. Existing agreements might be cancelled and re-negotiated.",
//  END NON-TRANSLATABLE
            "translation": "Removing Service policy and re-evaluating all agreements based on just the built-in node policy. Existing agreements might be cancelled and re-negotiated.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "theUser '{TrimPrefixtheUser_}' not found in org {Org}",
            "message": "theUser '{TrimPrefixtheUser_}' not found in org {Org}",
//  END NON-TRANSLATABLE
            "translation": "theUser '{TrimPrefixtheUser_}' not found in org {Org}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TrimPrefixtheUser_",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "strings.TrimPrefix(theUser, \"/\")"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'exchange user list' output: {Err}",
            "message": "failed to marshal 'exchange user list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'exchange user list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the email must be specified via -e if the username is not an email address.",
            "message": "the email must be specified via -e if the username is not an email address.",
//  END NON-TRANSLATABLE
            "translation": "the email must be specified via -e if the username is not an email address.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Warning: this will also delete all Exchange resources owned by this user (nodes, services, patterns, etc). Are you sure you want to remove user {Org}/{User} from the Horizon Exchange?",
            "message": "Warning: this will also delete all Exchange resources owned by this user (nodes, services, patterns, etc). Are you sure you want to remove user {Org}/{User} from the Horizon Exchange?",
//  END NON-TRANSLATABLE
            "translation": "Warning: this will also delete all Exchange resources owned by this user (nodes, services, patterns, etc). Are you sure you want to remove user {Org}/{User} from the Horizon Exchange?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "User",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "user"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "user '{User}' not found in org {Org}",
            "message": "user '{User}' not found in org {Org}",
//  END NON-TRANSLATABLE
            "translation": "user '{User}' not found in org {Org}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "User",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "user"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn policy list' output: {Err}",
            "message": "failed to marshal 'hzn policy list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn policy list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove the node policy?",
            "message": "Are you sure you want to remove the node policy?",
//  END NON-TRANSLATABLE
            "translation": "Are you sure you want to remove the node policy?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of policy properties that describe the object.",
            "message": "A list of policy properties that describe the object.",
//  END NON-TRANSLATABLE
            "translation": "A list of policy properties that describe the object.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The selection string {V} is not valid.",
            "message": "The selection string {V} is not valid.",
//  END NON-TRANSLATABLE
            "translation": "The selection string {V} is not valid.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "V",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "v"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn eventlog list' output: {Err}",
            "message": "failed to marshal 'hzn eventlog list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn eventlog list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem signing stdin with {PrivKeyFilePath}: {Err}",
            "message": "problem signing stdin with {PrivKeyFilePath}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "problem signing stdin with {PrivKeyFilePath}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PrivKeyFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "privKeyFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get the variables from configuration file {CofigFile}. Error: {Err}",
            "message": "Failed to get the variables from configuration file {CofigFile}. Error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to get the variables from configuration file {CofigFile}. Error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CofigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cofigFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to unregister this Horizon node?",
            "message": "Are you sure you want to unregister this Horizon node?",
//  END NON-TRANSLATABLE
            "translation": "Are you sure you want to unregister this Horizon node?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon node delete call successful with return code: {Output}",
            "message": "Horizon node delete call successful with return code: {Output}",
//  END NON-TRANSLATABLE
            "translation": "Horizon node delete call successful with return code: {Output}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Output",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "output"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Timeout in {TotalWait} seconds ...",
            "message": "Timeout in {TotalWait} seconds ...",
//  END NON-TRANSLATABLE
            "translation": "Timeout in {TotalWait} seconds ...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TotalWait",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "totalWait"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Waiting for Horizon node unregister to complete: {UpdateStatus}",
            "message": "Waiting for Horizon node unregister to complete: {UpdateStatus}",
//  END NON-TRANSLATABLE
            "translation": "Waiting for Horizon node unregister to complete: {UpdateStatus}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "UpdateStatus",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "updateStatus"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No Timeout specified ...",
            "message": "No Timeout specified ...",
//  END NON-TRANSLATABLE
            "translation": "No Timeout specified ...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Stopping horizon...",
            "message": "Stopping horizon...",
//  END NON-TRANSLATABLE
            "translation": "Stopping horizon...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node configuration state: {State}",
            "message": "Node configuration state: {State}",
//  END NON-TRANSLATABLE
            "translation": "Node configuration state: {State}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "State",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "*horDevice.Config.State"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Timeout waiting for node change to 'unconfigured' state.",
            "message": "Timeout waiting for node change to 'unconfigured' state.",
//  END NON-TRANSLATABLE
            "translation": "Timeout waiting for node change to 'unconfigured' state.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error deleting container {Names0}. {Err}",
            "message": "Error deleting container {Names0}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error deleting container {Names0}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Names0",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "c.Names[0]"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Removed service container: {Names0}",
            "message": "Removed service container: {Names0}",
//  END NON-TRANSLATABLE
            "translation": "Removed service container: {Names0}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Names0",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "c.Names[0]"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error pruning docker networks. {Err}",
            "message": "Error pruning docker networks. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error pruning docker networks. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "must specify exchange credentials to access the model management service.",
            "message": "must specify exchange credentials to access the model management service.",
//  END NON-TRANSLATABLE
            "translation": "must specify exchange credentials to access the model management service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "must specify object ID when requesting object details.",
            "message": "must specify object ID when requesting object details.",
//  END NON-TRANSLATABLE
            "translation": "must specify object ID when requesting object details.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "no objects type '{ObjType}' found in org {Org}",
            "message": "no objects type '{ObjType}' found in org {Org}",
//  END NON-TRANSLATABLE
            "translation": "no objects type '{ObjType}' found in org {Org}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjType",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objType"
                },
                {
                    "id": "Org",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "object '{ObjId}' of type '{ObjType}' not found in org {Org}",
            "message": "object '{ObjId}' of type '{ObjType}' not found in org {Org}",
//  END NON-TRANSLATABLE
            "translation": "object '{ObjId}' of type '{ObjType}' not found in org {Org}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objId"
                },
                {
                    "id": "ObjType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "objType"
                },
                {
                    "id": "Org",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "destination detail for object '{ObjId}' of type '{ObjType}' not found in org {Org}",
            "message": "destination detail for object '{ObjId}' of type '{ObjType}' not found in org {Org}",
//  END NON-TRANSLATABLE
            "translation": "destination detail for object '{ObjId}' of type '{ObjType}' not found in org {Org}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objId"
                },
                {
                    "id": "ObjType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "objType"
                },
                {
                    "id": "Org",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Object status: {Stringresp}",
            "message": "Object status: {Stringresp}",
//  END NON-TRANSLATABLE
            "translation": "Object status: {Stringresp}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Stringresp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "string(resp)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Required: A unique identifier of the object.",
            "message": "Required: A unique identifier of the object.",
//  END NON-TRANSLATABLE
            "translation": "Required: A unique identifier of the object.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Required: The type of the object.",
            "message": "Required: The type of the object.",
//  END NON-TRANSLATABLE
            "translation": "Required: The type of the object.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Required: The organization ID of the object (an object belongs to exactly one organization).",
            "message": "Required: The organization ID of the object (an object belongs to exactly one organization).",
//  END NON-TRANSLATABLE
            "translation": "Required: The organization ID of the object (an object belongs to exactly one organization).",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node id (without org prefix) where the object should be placed.",
            "message": "The node id (without org prefix) where the object should be placed.",
//  END NON-TRANSLATABLE
            "translation": "The node id (without org prefix) where the object should be placed.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "If omitted the object is sent to all nodes the same destinationType.",
            "message": "If omitted the object is sent to all nodes the same destinationType.",
//  END NON-TRANSLATABLE
            "translation": "If omitted the object is sent to all nodes the same destinationType.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Delete this field when you are using destinationPolicy.",
            "message": "Delete this field when you are using destinationPolicy.",
//  END NON-TRANSLATABLE
            "translation": "Delete this field when you are using destinationPolicy.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The pattern in use by nodes that should receive this object.",
            "message": "The pattern in use by nodes that should receive this object.",
//  END NON-TRANSLATABLE
            "translation": "The pattern in use by nodes that should receive this object.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "If omitted (and if destinationsList is omitted too) the object is broadcast to all known nodes.",
            "message": "If omitted (and if destinationsList is omitted too) the object is broadcast to all known nodes.",
//  END NON-TRANSLATABLE
            "translation": "If omitted (and if destinationsList is omitted too) the object is broadcast to all known nodes.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Delete this field when you are using policy.",
            "message": "Delete this field when you are using policy.",
//  END NON-TRANSLATABLE
            "translation": "Delete this field when you are using policy.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The list of destinations as an array of pattern:nodeId pairs that should receive this object.",
            "message": "The list of destinations as an array of pattern:nodeId pairs that should receive this object.",
//  END NON-TRANSLATABLE
            "translation": "The list of destinations as an array of pattern:nodeId pairs that should receive this object.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "If provided, destinationType and destinationID must be omitted.",
            "message": "If provided, destinationType and destinationID must be omitted.",
//  END NON-TRANSLATABLE
            "translation": "If provided, destinationType and destinationID must be omitted.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The policy specification that should be used to distribute this object.",
            "message": "The policy specification that should be used to distribute this object.",
//  END NON-TRANSLATABLE
            "translation": "The policy specification that should be used to distribute this object.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Delete these fields if the target node is using a pattern.",
            "message": "Delete these fields if the target node is using a pattern.",
//  END NON-TRANSLATABLE
            "translation": "Delete these fields if the target node is using a pattern.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Valid types are string, bool, int, float, list of string (comma separated), version.",
            "message": "Valid types are string, bool, int, float, list of string (comma separated), version.",
//  END NON-TRANSLATABLE
            "translation": "Valid types are string, bool, int, float, list of string (comma separated), version.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Type can be omitted if the type is discernable from the value, e.g. unquoted true is boolean.",
            "message": "Type can be omitted if the type is discernable from the value, e.g. unquoted true is boolean.",
//  END NON-TRANSLATABLE
            "translation": "Type can be omitted if the type is discernable from the value, e.g. unquoted true is boolean.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of constraint expressions of the form \u003cproperty name\u003e \u003coperator\u003e \u003cproperty value\u003e, separated by boolean operators AND (\u0026\u0026) or OR (||).",
            "message": "A list of constraint expressions of the form \u003cproperty name\u003e \u003coperator\u003e \u003cproperty value\u003e, separated by boolean operators AND (\u0026\u0026) or OR (||).",
//  END NON-TRANSLATABLE
            "translation": "A list of constraint expressions of the form \u003cproperty name\u003e \u003coperator\u003e \u003cproperty value\u003e, separated by boolean operators AND (\u0026\u0026) or OR (||).",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service(s) that will use this object.",
            "message": "The service(s) that will use this object.",
//  END NON-TRANSLATABLE
            "translation": "The service(s) that will use this object.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Set to '*' to indcate services of any hardware architecture.",
            "message": "Set to '*' to indcate services of any hardware architecture.",
//  END NON-TRANSLATABLE
            "translation": "Set to '*' to indcate services of any hardware architecture.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A version range.",
            "message": "A version range.",
//  END NON-TRANSLATABLE
            "translation": "A version range.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A timestamp/date indicating when the object expires (it is automatically deleted). The timestamp should be provided in RFC3339 format.",
            "message": "A timestamp/date indicating when the object expires (it is automatically deleted). The timestamp should be provided in RFC3339 format.",
//  END NON-TRANSLATABLE
            "translation": "A timestamp/date indicating when the object expires (it is automatically deleted). The timestamp should be provided in RFC3339 format.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Arbitrary string value. The value is not semantically interpreted. The Model Management System does not keep multiple version of an object.",
            "message": "Arbitrary string value. The value is not semantically interpreted. The Model Management System does not keep multiple version of an object.",
//  END NON-TRANSLATABLE
            "translation": "Arbitrary string value. The value is not semantically interpreted. The Model Management System does not keep multiple version of an object.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "An arbitrary description.",
            "message": "An arbitrary description.",
//  END NON-TRANSLATABLE
            "translation": "An arbitrary description.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A timestamp/date as to when this object should automatically be activated. The timestamp should be provided in RFC3339 format.",
            "message": "A timestamp/date as to when this object should automatically be activated. The timestamp should be provided in RFC3339 format.",
//  END NON-TRANSLATABLE
            "translation": "A timestamp/date as to when this object should automatically be activated. The timestamp should be provided in RFC3339 format.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "must specify exchange credentials to access the model management service",
            "message": "must specify exchange credentials to access the model management service",
//  END NON-TRANSLATABLE
            "translation": "must specify exchange credentials to access the model management service",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "must specify --type with --id",
            "message": "must specify --type with --id",
//  END NON-TRANSLATABLE
            "translation": "must specify --type with --id",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "must specify --id with --type",
            "message": "must specify --id with --type",
//  END NON-TRANSLATABLE
            "translation": "must specify --id with --type",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "cannot specify --id and --type with --def",
            "message": "cannot specify --id and --type with --def",
//  END NON-TRANSLATABLE
            "translation": "cannot specify --id and --type with --def",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "must specify either --type and --id or --def",
            "message": "must specify either --type and --id or --def",
//  END NON-TRANSLATABLE
            "translation": "must specify either --type and --id or --def",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "cannot specify --pattern with --def",
            "message": "cannot specify --pattern with --def",
//  END NON-TRANSLATABLE
            "translation": "cannot specify --pattern with --def",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to read definition file {ObjMetadataFile}: {Err}",
            "message": "unable to read definition file {ObjMetadataFile}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to read definition file {ObjMetadataFile}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjMetadataFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objMetadataFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal definition file {ObjMetadataFile}: {Err}",
            "message": "failed to unmarshal definition file {ObjMetadataFile}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to unmarshal definition file {ObjMetadataFile}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjMetadataFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objMetadataFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to open object file {ObjFile}: {Err}",
            "message": "unable to open object file {ObjFile}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to open object file {ObjFile}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Object {ObjFile} uploaded to org {Org} in the Model Management Service",
            "message": "Object {ObjFile} uploaded to org {Org} in the Model Management Service",
//  END NON-TRANSLATABLE
            "translation": "Object {ObjFile} uploaded to org {Org} in the Model Management Service",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objFile"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Object {ObjectID} added to org {Org} in the Model Management Service",
            "message": "Object {ObjectID} added to org {Org} in the Model Management Service",
//  END NON-TRANSLATABLE
            "translation": "Object {ObjectID} added to org {Org} in the Model Management Service",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjectID",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objectMeta.ObjectID"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Object {ObjId} deleted from org {Org} in the Model Management Service",
            "message": "Object {ObjId} deleted from org {Org} in the Model Management Service",
//  END NON-TRANSLATABLE
            "translation": "Object {ObjId} deleted from org {Org} in the Model Management Service",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ObjId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "objId"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "health status API returned HTTP code {HttpCode}",
            "message": "health status API returned HTTP code {HttpCode}",
//  END NON-TRANSLATABLE
            "translation": "health status API returned HTTP code {HttpCode}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create network {NETWORKNAME} for file sync service, error {Err}",
            "message": "unable to create network {NETWORKNAME} for file sync service, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to create network {NETWORKNAME} for file sync service, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NETWORKNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "NETWORK_NAME"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to start CSS, error {Err}",
            "message": "unable to start CSS, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to start CSS, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to load file objects into CSS, error {Err}",
            "message": "unable to load file objects into CSS, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to load file objects into CSS, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to start ESS, error {Err}",
            "message": "unable to start ESS, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to start ESS, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to stop {MakeLabelNameESSNAME}, error {Err}",
            "message": "Unable to stop {MakeLabelNameESSNAME}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to stop {MakeLabelNameESSNAME}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MakeLabelNameESSNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "makeLabelName(ESS_NAME)"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to remove network {NETWORKNAME} for file sync service, error {Err}",
            "message": "Unable to remove network {NETWORKNAME} for file sync service, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to remove network {NETWORKNAME} for file sync service, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NETWORKNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "NETWORK_NAME"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to list existing docker images, error {Err}",
            "message": "unable to list existing docker images, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to list existing docker images, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Found docker image {Name} locally.",
            "message": "Found docker image {Name} locally.",
//  END NON-TRANSLATABLE
            "translation": "Found docker image {Name} locally.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to pull CSS container using image {GetFSSFullImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a different image tag.",
            "message": "unable to pull CSS container using image {GetFSSFullImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a different image tag.",
//  END NON-TRANSLATABLE
            "translation": "unable to pull CSS container using image {GetFSSFullImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a different image tag.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "GetFSSFullImageName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "getFSSFullImageName()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                },
                {
                    "id": "DEVTOOLHZNFSSIMAGETAG",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "dev.DEVTOOL_HZN_FSS_IMAGE_TAG"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Pulled docker image {Name}.",
            "message": "Pulled docker image {Name}.",
//  END NON-TRANSLATABLE
            "translation": "Pulled docker image {Name}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create CSS container using image {GetFSSImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a diferent image tag.",
            "message": "unable to create CSS container using image {GetFSSImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a diferent image tag.",
//  END NON-TRANSLATABLE
            "translation": "unable to create CSS container using image {GetFSSImageName}, error {Err}. Set environment variable {DEVTOOLHZNFSSIMAGETAG} to use a diferent image tag.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "GetFSSImageName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "getFSSImageName()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                },
                {
                    "id": "DEVTOOLHZNFSSIMAGETAG",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "dev.DEVTOOL_HZN_FSS_IMAGE_TAG"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to start CSS container, error {Err}",
            "message": "unable to start CSS container, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to start CSS container, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Created {MakeLabelNameCSSNAME} container, listening on host port {GetCSSPort}",
            "message": "Created {MakeLabelNameCSSNAME} container, listening on host port {GetCSSPort}",
//  END NON-TRANSLATABLE
            "translation": "Created {MakeLabelNameCSSNAME} container, listening on host port {GetCSSPort}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MakeLabelNameCSSNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "makeLabelName(CSS_NAME)"
                },
                {
                    "id": "GetCSSPort",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "getCSSPort()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "File sync service container {MakeLabelNameCSSNAME} listening on host port {GetCSSPort}",
            "message": "File sync service container {MakeLabelNameCSSNAME} listening on host port {GetCSSPort}",
//  END NON-TRANSLATABLE
            "translation": "File sync service container {MakeLabelNameCSSNAME} listening on host port {GetCSSPort}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MakeLabelNameCSSNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "makeLabelName(CSS_NAME)"
                },
                {
                    "id": "GetCSSPort",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "getCSSPort()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create SSL certificate for ESS, error {Err}",
            "message": "unable to create SSL certificate for ESS, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to create SSL certificate for ESS, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to open ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
            "message": "unable to open ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to open ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ESSSSLClientCertPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cw.Config.GetESSSSLClientCertPath()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to read ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
            "message": "unable to read ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to read ESS SSL Certificate file {ESSSSLClientCertPath}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ESSSSLClientCertPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cw.Config.GetESSSSLClientCertPath()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to open ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
            "message": "unable to open ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to open ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ESSSSLCertKeyPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cw.Config.GetESSSSLCertKeyPath()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to read ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
            "message": "unable to read ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to read ESS SSL Certificate Key file {ESSSSLCertKeyPath}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ESSSSLCertKeyPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cw.Config.GetESSSSLCertKeyPath()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create ESS container, error {Err}",
            "message": "unable to create ESS container, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to create ESS container, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to start ESS container, error {Err}",
            "message": "unable to start ESS container, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to start ESS container, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Created {MakeLabelNameESSNAME} container",
            "message": "Created {MakeLabelNameESSNAME} container",
//  END NON-TRANSLATABLE
            "translation": "Created {MakeLabelNameESSNAME} container",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MakeLabelNameESSNAME",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "makeLabelName(ESS_NAME)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to list docker containers, error {Err}",
            "message": "unable to list docker containers, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to list docker containers, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to stop docker container {Name}, error {Err}",
            "message": "unable to stop docker container {Name}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to stop docker container {Name}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to remove docker container {Name}, error {Err}",
            "message": "unable to remove docker container {Name}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to remove docker container {Name}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Stopped {Name} container",
            "message": "Stopped {Name} container",
//  END NON-TRANSLATABLE
            "translation": "Stopped {Name} container",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Loading {FileName} into CSS",
            "message": "Loading {FileName} into CSS",
//  END NON-TRANSLATABLE
            "translation": "Loading {FileName} into CSS",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to open file object {FileName}, error {Err}",
            "message": "unable to open file object {FileName}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to open file object {FileName}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to read file object {FileName}, error {Err}",
            "message": "unable to read file object {FileName}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to read file object {FileName}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to add file {FileName} to the CSS, error {Err}",
            "message": "unable to add file {FileName} to the CSS, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to add file {FileName} to the CSS, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "fileName"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Configuration files {FileObjects} loaded into the File sync service.",
            "message": "Configuration files {FileObjects} loaded into the File sync service.",
//  END NON-TRANSLATABLE
            "translation": "Configuration files {FileObjects} loaded into the File sync service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FileObjects",
                    "string": "%[1]v",
                    "type": "[]string",
                    "underlyingType": "[]string",
                    "argNum": 1,
                    "expr": "fileObjects"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to marshal CSS file PUT for {Metadata}, error {Err}",
            "message": "unable to marshal CSS file PUT for {Metadata}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to marshal CSS file PUT for {Metadata}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Metadata",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/cli/sync_service.cssFileMeta",
                    "underlyingType": "struct{ObjectID string \"json:\\\"objectID\\\"\"; ObjectType string \"json:\\\"objectType\\\"\"}",
                    "argNum": 1,
                    "expr": "*metadata"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create CSS file PUT request for {Metadata}, error {Err}",
            "message": "unable to create CSS file PUT request for {Metadata}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to create CSS file PUT request for {Metadata}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Metadata",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/cli/sync_service.cssFileMeta",
                    "underlyingType": "struct{ObjectID string \"json:\\\"objectID\\\"\"; ObjectType string \"json:\\\"objectType\\\"\"}",
                    "argNum": 1,
                    "expr": "*metadata"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to send CSS file PUT request to CSS for {Metadata}, error {Err}",
            "message": "unable to send CSS file PUT request to CSS for {Metadata}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to send CSS file PUT request to CSS for {Metadata}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Metadata",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/cli/sync_service.cssFileMeta",
                    "underlyingType": "struct{ObjectID string \"json:\\\"objectID\\\"\"; ObjectType string \"json:\\\"objectType\\\"\"}",
                    "argNum": 1,
                    "expr": "*metadata"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to PUT file {Metadata} into CSS, HTTP code {StatusCode}",
            "message": "unable to PUT file {Metadata} into CSS, HTTP code {StatusCode}",
//  END NON-TRANSLATABLE
            "translation": "unable to PUT file {Metadata} into CSS, HTTP code {StatusCode}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Metadata",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/cli/sync_service.cssFileMeta",
                    "underlyingType": "struct{ObjectID string \"json:\\\"objectID\\\"\"; ObjectType string \"json:\\\"objectType\\\"\"}",
                    "argNum": 1,
                    "expr": "*metadata"
                },
                {
                    "id": "StatusCode",
                    "string": "%[2]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "resp.StatusCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Created network {Name}",
            "message": "Created network {Name}",
//  END NON-TRANSLATABLE
            "translation": "Created network {Name}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to list docker networks, error {Err}",
            "message": "unable to list docker networks, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to list docker networks, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to remove docker network {Name}, error {Err}",
            "message": "unable to remove docker network {Name}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to remove docker network {Name}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "name"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "horizon api agreement output did not include 'agreements' key",
            "message": "horizon api agreement output did not include 'agreements' key",
//  END NON-TRANSLATABLE
            "translation": "horizon api agreement output did not include 'agreements' key",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "horizon api agreement output did not include '{WhichAgreements}' key",
            "message": "horizon api agreement output did not include '{WhichAgreements}' key",
//  END NON-TRANSLATABLE
            "translation": "horizon api agreement output did not include '{WhichAgreements}' key",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "WhichAgreements",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "whichAgreements"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn metering list' output: {Err}",
            "message": "failed to marshal 'hzn metering list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn metering list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to set env var 'HORIZON_URL', error {Err}",
            "message": "unable to set env var 'HORIZON_URL', error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to set env var 'HORIZON_URL', error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'agreement list' output: {Err}",
            "message": "failed to marshal 'agreement list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'agreement list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "either an agreement ID or -a must be specified.",
            "message": "either an agreement ID or -a must be specified.",
//  END NON-TRANSLATABLE
            "translation": "either an agreement ID or -a must be specified.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Canceling agreement {Id} ...",
            "message": "Canceling agreement {Id} ...",
//  END NON-TRANSLATABLE
            "translation": "Canceling agreement {Id} ...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Id",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "id"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'policy list' output: {Err}",
            "message": "failed to marshal 'policy list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'policy list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error: The organization '{Org}' does not exist.",
            "message": "Error: The organization '{Org}' does not exist.",
//  END NON-TRANSLATABLE
            "translation": "Error: The organization '{Org}' does not exist.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error: Either the organization '{Org}' does not exist or the policy '{Name}' is not hosted by this agbot.",
            "message": "Error: Either the organization '{Org}' does not exist or the policy '{Name}' is not hosted by this agbot.",
//  END NON-TRANSLATABLE
            "translation": "Error: Either the organization '{Org}' does not exist or the policy '{Name}' is not hosted by this agbot.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Name",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Reading configuration file: {ConfigFile}",
            "message": "Reading configuration file: {ConfigFile}",
//  END NON-TRANSLATABLE
            "translation": "Reading configuration file: {ConfigFile}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to read config file: {ConfigFile}. {Err}",
            "message": "Unable to read config file: {ConfigFile}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to read config file: {ConfigFile}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to decode content of config file {ConfigFile}. {Err}",
            "message": "Unable to decode content of config file {ConfigFile}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to decode content of config file {ConfigFile}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Config file does not exist: {ConfigFile}.",
            "message": "Config file does not exist: {ConfigFile}.",
//  END NON-TRANSLATABLE
            "translation": "Config file does not exist: {ConfigFile}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to set the environment variable defined in the MetadataVars attribute in file {ConfigFile}. {Err}",
            "message": "Failed to set the environment variable defined in the MetadataVars attribute in file {ConfigFile}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to set the environment variable defined in the MetadataVars attribute in file {ConfigFile}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to set the environment variable in top level in file {ConfigFile}. {Err}",
            "message": "Failed to set the environment variable in top level in file {ConfigFile}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to set the environment variable in top level in file {ConfigFile}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to set the environment variable defined in file {ConfigFile}. {Err}",
            "message": "Failed to set the environment variable defined in file {ConfigFile}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to set the environment variable defined in file {ConfigFile}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Local configuration {LocalConfigFile} has been setup at the beginning of this command. Will not setup twice.",
            "message": "Local configuration {LocalConfigFile} has been setup at the beginning of this command. Will not setup twice.",
//  END NON-TRANSLATABLE
            "translation": "Local configuration {LocalConfigFile} has been setup at the beginning of this command. Will not setup twice.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "LocalConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "localConfigFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to set the environment variable from the local configuration file {LocalConfigFile} for file {FilePath}. Error: {Err}",
            "message": "Failed to set the environment variable from the local configuration file {LocalConfigFile} for file {FilePath}. Error: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to set the environment variable from the local configuration file {LocalConfigFile} for file {FilePath}. Error: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "LocalConfigFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "localConfigFile"
                },
                {
                    "id": "FilePath",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to restore the environment variable after using local configuration file {UseLocalConfig}. {Err}",
            "message": "Failed to restore the environment variable after using local configuration file {UseLocalConfig}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to restore the environment variable after using local configuration file {UseLocalConfig}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "UseLocalConfig",
                    "string": "%[1]v",
                    "type": "bool",
                    "underlyingType": "bool",
                    "argNum": 1,
                    "expr": "useLocalConfig"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get the absolute path for file {ConfigFilepkg}. {Err}",
            "message": "Failed to get the absolute path for file {ConfigFilepkg}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to get the absolute path for file {ConfigFilepkg}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFilepkg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile_pkg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error reading environment variables from file {ConfigFilepkg}. {Err}",
            "message": "Error reading environment variables from file {ConfigFilepkg}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error reading environment variables from file {ConfigFilepkg}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ConfigFilepkg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "configFile_pkg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error reading environment variables from file /etc/default/horizon. {Err}",
            "message": "Error reading environment variables from file /etc/default/horizon. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error reading environment variables from file /etc/default/horizon. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get the absolute path for file ~/.hzn/hzn.json. {Err}",
            "message": "Failed to get the absolute path for file ~/.hzn/hzn.json. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Failed to get the absolute path for file ~/.hzn/hzn.json. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting project level configuration file name. {Err}",
            "message": "Error getting project level configuration file name. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error getting project level configuration file name. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No project level configuration file found.",
            "message": "No project level configuration file found.",
//  END NON-TRANSLATABLE
            "translation": "No project level configuration file found.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "failed to marshal agreement with index {I}: {Err}",
            "message": "failed to marshal agreement with index {I}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal agreement with index {I}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "agreement id {AgreementId} not found",
            "message": "agreement id {AgreementId} not found",
//  END NON-TRANSLATABLE
            "translation": "agreement id {AgreementId} not found",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AgreementId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "agreementId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal 'hzn agreement list' output: {Err}",
            "message": "failed to marshal 'hzn agreement list' output: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal 'hzn agreement list' output: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_CAP_FOR_WL",
                "Deployment config {Arg_1} contains unsupported capability for a workload"
            ],
            "message": "Deployment config {Arg_1} contains unsupported capability for a workload",
//  END NON-TRANSLATABLE
            "translation": "Deployment config {Arg_1} contains unsupported capability for a workload",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_CAP_FOR_CONT",
                "Deployment config {Arg_1} contains unsupported capability for infrastructure container."
            ],
            "message": "Deployment config {Arg_1} contains unsupported capability for infrastructure container.",
//  END NON-TRANSLATABLE
            "translation": "Deployment config {Arg_1} contains unsupported capability for infrastructure container.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_BIND",
                "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}"
            ],
            "message": "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_BIND_FOR",
                "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}"
            ],
            "message": "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}",
//  END NON-TRANSLATABLE
            "translation": "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_ERROR_UNMARSHAL_DEPLOY",
                "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_ERROR_UNMARSHAL_DEPLOY_OVERRIDE",
                "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}"
            ],
            "message": "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}",
//  END NON-TRANSLATABLE
            "translation": "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_START_CONTAINER_ERROR",
                "Error starting containers: {Arg_1}"
            ],
            "message": "Error starting containers: {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Error starting containers: {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_START_CONTAINER_ERROR_FOR_AG",
                "Error starting containers for agreement {Arg_1}: {Arg_2}"
            ],
            "message": "Error starting containers for agreement {Arg_1}: {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error starting containers for agreement {Arg_1}: {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_RESTART_CONTAINER_ERROR_FOR_AG",
                "Error restarting containers for agreements {Arg_1}: {Arg_2}"
            ],
            "message": "Error restarting containers for agreements {Arg_1}: {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error restarting containers for agreements {Arg_1}: {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_CLEAN_OLD_CONTAINER_ERROR",
                "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}"
            ],
            "message": "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_FAIL_GET_PAENT_CONT_FOR_SVC",
                "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}"
            ],
            "message": "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_FAIL_RESTORE_NW_WITH_PARENT",
                "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}"
            ],
            "message": "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": "properties contains an invalid property: {Err}",
            "message": "properties contains an invalid property: {Err}",
//  END NON-TRANSLATABLE
            "translation": "properties contains an invalid property: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property must include a name and a value: {Property}",
            "message": "Property must include a name and a value: {Property}",
//  END NON-TRANSLATABLE
            "translation": "Property must include a name and a value: {Property}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Property",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/externalpolicy.Property",
                    "underlyingType": "struct{Name string \"json:\\\"name\\\"\"; Value interface{} \"json:\\\"value\\\"\"; Type string \"json:\\\"type,omitempty\\\"\"}",
                    "argNum": 1,
                    "expr": "property"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of string.",
            "message": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of string.",
//  END NON-TRANSLATABLE
            "translation": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of string.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "property.Name"
                },
                {
                    "id": "DeclaredType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "declaredType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property value is of type {ActualType}, expected type {DeclaredType}",
            "message": "Property value is of type {ActualType}, expected type {DeclaredType}",
//  END NON-TRANSLATABLE
            "translation": "Property value is of type {ActualType}, expected type {DeclaredType}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ActualType",
                    "string": "%[1]T",
                    "type": "bool",
                    "underlyingType": "bool",
                    "argNum": 1,
                    "expr": "actualType"
                },
                {
                    "id": "DeclaredType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "declaredType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Value {Value} of property {Name} is not an integer type",
            "message": "Value {Value} of property {Name} is not an integer type",
//  END NON-TRANSLATABLE
            "translation": "Value {Value} of property {Name} is not an integer type",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Value",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "property.Value"
                },
                {
                    "id": "Name",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "property.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
            "message": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
//  END NON-TRANSLATABLE
            "translation": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Value",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "property.Value"
                },
                {
                    "id": "Name",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "property.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {Name} with value {Value} is not a valid verion string",
            "message": "Property {Name} with value {Value} is not a valid verion string",
//  END NON-TRANSLATABLE
            "translation": "Property {Name} with value {Value} is not a valid verion string",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "property.Name"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "property.Value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {Name} has invalid value type {ActualType}",
            "message": "Property {Name} has invalid value type {ActualType}",
//  END NON-TRANSLATABLE
            "translation": "Property {Name} has invalid value type {ActualType}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "property.Name"
                },
                {
                    "id": "ActualType",
                    "string": "%[2]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "actualType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Incorrect node policy format in file {JsonFilePath}: {Err}",
            "message": "Incorrect node policy format in file {JsonFilePath}: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Incorrect node policy format in file {JsonFilePath}: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "JsonFilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "jsonFilePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No pattern or node policy is specified. Will proceeed with the existing node policy.",
            "message": "No pattern or node policy is specified. Will proceeed with the existing node policy.",
//  END NON-TRANSLATABLE
            "translation": "No pattern or node policy is specified. Will proceeed with the existing node policy.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Reading input file {InputFile}...",
            "message": "Reading input file {InputFile}...",
//  END NON-TRANSLATABLE
            "translation": "Reading input file {InputFile}...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "InputFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "inputFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "hzn cli is configured with exchange url {ExchUrlBase} from {ExchangeUrlLocation} and the horizon agent is configured with exchange url {AnaxExchUrlBase} from {ExchangeUrlLocationFromAnax}. hzn register will not work with mismatched exchange urls.",
            "message": "hzn cli is configured with exchange url {ExchUrlBase} from {ExchangeUrlLocation} and the horizon agent is configured with exchange url {AnaxExchUrlBase} from {ExchangeUrlLocationFromAnax}. hzn register will not work with mismatched exchange urls.",
//  END NON-TRANSLATABLE
            "translation": "hzn cli is configured with exchange url {ExchUrlBase} from {ExchangeUrlLocation} and the horizon agent is configured with exchange url {AnaxExchUrlBase} from {ExchangeUrlLocationFromAnax}. hzn register will not work with mismatched exchange urls.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchUrlBase",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchUrlBase"
                },
                {
                    "id": "ExchangeUrlLocation",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "cliutils.GetExchangeUrlLocation()"
                },
                {
                    "id": "AnaxExchUrlBase",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "anaxExchUrlBase"
                },
                {
                    "id": "ExchangeUrlLocationFromAnax",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "cliutils.GetExchangeUrlLocationFromAnax()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Horizon Exchange base URL: {ExchUrlBase}",
            "message": "Horizon Exchange base URL: {ExchUrlBase}",
//  END NON-TRANSLATABLE
            "translation": "Horizon Exchange base URL: {ExchUrlBase}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchUrlBase",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchUrlBase"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get proper response from the Horizon agent",
            "message": "Failed to get proper response from the Horizon agent",
//  END NON-TRANSLATABLE
            "translation": "Failed to get proper response from the Horizon agent",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Please specify the node id and token using -n flag or HZN_EXCHANGE_NODE_AUTH environment variable.",
            "message": "Please specify the node id and token using -n flag or HZN_EXCHANGE_NODE_AUTH environment variable.",
//  END NON-TRANSLATABLE
            "translation": "Please specify the node id and token using -n flag or HZN_EXCHANGE_NODE_AUTH environment variable.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Using node ID '{NodeId}' from the Horizon agent",
            "message": "Using node ID '{NodeId}' from the Horizon agent",
//  END NON-TRANSLATABLE
            "translation": "Using node ID '{NodeId}' from the Horizon agent",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not create a random token",
            "message": "could not create a random token",
//  END NON-TRANSLATABLE
            "translation": "could not create a random token",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "node '{Org}/{NodeId}' does not exist in the exchange with the specified token, and the -u flag was not specified to provide exchange user credentials to create/update it.",
            "message": "node '{Org}/{NodeId}' does not exist in the exchange with the specified token, and the -u flag was not specified to provide exchange user credentials to create/update it.",
//  END NON-TRANSLATABLE
            "translation": "node '{Org}/{NodeId}' does not exist in the exchange with the specified token, and the -u flag was not specified to provide exchange user credentials to create/update it.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "NodeId",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {Org}/{NodeId} does not exist in the exchange with the specified token, creating/updating it...",
            "message": "Node {Org}/{NodeId} does not exist in the exchange with the specified token, creating/updating it...",
//  END NON-TRANSLATABLE
            "translation": "Node {Org}/{NodeId} does not exist in the exchange with the specified token, creating/updating it...",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "NodeId",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Node {Org}/{NodeId} exists in the exchange",
            "message": "Node {Org}/{NodeId} exists in the exchange",
//  END NON-TRANSLATABLE
            "translation": "Node {Org}/{NodeId} exists in the exchange",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "NodeId",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "this Horizon node is already registered or in the process of being registered. If you want to register it differently, run 'hzn unregister' first.",
            "message": "this Horizon node is already registered or in the process of being registered. If you want to register it differently, run 'hzn unregister' first.",
//  END NON-TRANSLATABLE
            "translation": "this Horizon node is already registered or in the process of being registered. If you want to register it differently, run 'hzn unregister' first.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Registration failed because {Matches0} Please update the services section in the input file {InputFile}. Run 'hzn unregister' and then 'hzn register...' again",
            "message": "Registration failed because {Matches0} Please update the services section in the input file {InputFile}. Run 'hzn unregister' and then 'hzn register...' again",
//  END NON-TRANSLATABLE
            "translation": "Registration failed because {Matches0} Please update the services section in the input file {InputFile}. Run 'hzn unregister' and then 'hzn register...' again",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Matches0",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "matches[0]"
                },
                {
                    "id": "InputFile",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "inputFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Errstring}. Please define variables for service {Matches2} in the input file {InputFile}. Run 'hzn unregister' and then 'hzn register...' again",
            "message": "{Errstring}. Please define variables for service {Matches2} in the input file {InputFile}. Run 'hzn unregister' and then 'hzn register...' again",
//  END NON-TRANSLATABLE
            "translation": "{Errstring}. Please define variables for service {Matches2} in the input file {InputFile}. Run 'hzn unregister' and then 'hzn register...' again",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Errstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "err_string"
                },
                {
                    "id": "Matches2",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "matches[2]"
                },
                {
                    "id": "InputFile",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "inputFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Errstring}. Please create an input file, define variables for service {Matches2}. Run 'hzn unregister' and then 'hzn register...' again with the -f flag to specify the input file.",
            "message": "{Errstring}. Please create an input file, define variables for service {Matches2}. Run 'hzn unregister' and then 'hzn register...' again with the -f flag to specify the input file.",
//  END NON-TRANSLATABLE
            "translation": "{Errstring}. Please create an input file, define variables for service {Matches2}. Run 'hzn unregister' and then 'hzn register...' again with the -f flag to specify the input file.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Errstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "err_string"
                },
                {
                    "id": "Matches2",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "matches[2]"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "-o and -p are mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
            "message": "-o and -p are mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
//  END NON-TRANSLATABLE
            "translation": "-o and -p are mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "--policy is mutually exclusive with -p.",
            "message": "--policy is mutually exclusive with -p.",
//  END NON-TRANSLATABLE
            "translation": "--policy is mutually exclusive with -p.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "--policy is mutually exclusive with \u003cpattern\u003e argument.",
            "message": "--policy is mutually exclusive with \u003cpattern\u003e argument.",
//  END NON-TRANSLATABLE
            "translation": "--policy is mutually exclusive with \u003cpattern\u003e argument.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Please specify the node organization id.",
            "message": "Please specify the node organization id.",
//  END NON-TRANSLATABLE
            "translation": "Please specify the node organization id.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "invalid version range '{Vr}': {Err}",
            "message": "invalid version range '{Vr}': {Err}",
//  END NON-TRANSLATABLE
            "translation": "invalid version range '{Vr}': {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Vr",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "vr"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to verify that {Version} is within {VRange}, error {Err}",
            "message": "unable to verify that {Version} is within {VRange}, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "unable to verify that {Version} is within {VRange}, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "version"
                },
                {
                    "id": "VRange",
                    "string": "%[2]v",
                    "type": "*github.com/open-horizon/anax/semanticversion.Version_Expression",
                    "underlyingType": "*github.com/open-horizon/anax/semanticversion.Version_Expression",
                    "argNum": 2,
                    "expr": "vRange"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "found no services in the exchange matching: org={Org}, url={Url}, arch={Arch}",
            "message": "found no services in the exchange matching: org={Org}, url={Url}, arch={Arch}",
//  END NON-TRANSLATABLE
            "translation": "found no services in the exchange matching: org={Org}, url={Url}, arch={Arch}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Url",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "url"
                },
                {
                    "id": "Arch",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "arch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "error comparing version {ServiceshighestKey} with version {Version}. {Err}",
            "message": "error comparing version {ServiceshighestKey} with version {Version}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "error comparing version {ServiceshighestKey} with version {Version}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceshighestKey",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/exchange.ServiceDefinition",
                    "underlyingType": "struct{Owner string \"json:\\\"owner\\\"\"; Label string \"json:\\\"label\\\"\"; Description string \"json:\\\"description\\\"\"; Public bool \"json:\\\"public\\\"\"; URL string \"json:\\\"url\\\"\"; Version string \"json:\\\"version\\\"\"; Arch string \"json:\\\"arch\\\"\"; Sharable string \"json:\\\"sharable\\\"\"; MatchHardware github.com/open-horizon/anax/exchange.HardwareRequirement \"json:\\\"matchHardware\\\"\"; RequiredServices []github.com/open-horizon/anax/exchange.ServiceDependency \"json:\\\"requiredServices\\\"\"; UserInputs []github.com/open-horizon/anax/exchange.UserInput \"json:\\\"userInput\\\"\"; Deployment string \"json:\\\"deployment\\\"\"; DeploymentSignature string \"json:\\\"deploymentSignature\\\"\"; LastUpdated string \"json:\\\"lastUpdated\\\"\"}",
                    "argNum": 1,
                    "expr": "svcOutput.Services[highestKey]"
                },
                {
                    "id": "Version",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svc.Version"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "found no services in the exchange matched: org={Org}, specRef={Url}, version range={VersionRanges}, arch={Arch}",
            "message": "found no services in the exchange matched: org={Org}, specRef={Url}, version range={VersionRanges}, arch={Arch}",
//  END NON-TRANSLATABLE
            "translation": "found no services in the exchange matched: org={Org}, specRef={Url}, version range={VersionRanges}, arch={Arch}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Url",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "url"
                },
                {
                    "id": "VersionRanges",
                    "string": "%[3]s",
                    "type": "[]string",
                    "underlyingType": "[]string",
                    "argNum": 3,
                    "expr": "versionRanges"
                },
                {
                    "id": "Arch",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "arch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "found: {Org}, {Url}, {Arch}, {VersionRange}",
            "message": "found: {Org}, {Url}, {Arch}, {VersionRange}",
//  END NON-TRANSLATABLE
            "translation": "found: {Org}, {Url}, {Arch}, {VersionRange}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "org"
                },
                {
                    "id": "Url",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "url"
                },
                {
                    "id": "Arch",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "arch"
                },
                {
                    "id": "VersionRange",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "versionRange"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "did not find pattern '{PatKey}' as expected",
            "message": "did not find pattern '{PatKey}' as expected",
//  END NON-TRANSLATABLE
            "translation": "did not find pattern '{PatKey}' as expected",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatKey",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patKey"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Ignoring service that is a different architecture: {ServiceOrg}, {ServiceURL}, {ServiceArch}",
            "message": "Ignoring service that is a different architecture: {ServiceOrg}, {ServiceURL}, {ServiceArch}",
//  END NON-TRANSLATABLE
            "translation": "Ignoring service that is a different architecture: {ServiceOrg}, {ServiceURL}, {ServiceArch}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svc.ServiceOrg"
                },
                {
                    "id": "ServiceURL",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svc.ServiceURL"
                },
                {
                    "id": "ServiceArch",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "svc.ServiceArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal the user input template file: {Err}",
            "message": "failed to marshal the user input template file: {Err}",
//  END NON-TRANSLATABLE
            "translation": "failed to marshal the user input template file: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem writing the user input template file: {Err}",
            "message": "problem writing the user input template file: {Err}",
//  END NON-TRANSLATABLE
            "translation": "problem writing the user input template file: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Wrote {InputFile}",
            "message": "Wrote {InputFile}",
//  END NON-TRANSLATABLE
            "translation": "Wrote {InputFile}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "InputFile",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "inputFile"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error parsing the selections {Form}. {Err}",
            "message": "Error parsing the selections {Form}. {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error parsing the selections {Form}. {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Form",
                    "string": "%[1]v",
                    "type": "net/url.Values",
                    "underlyingType": "map[string][]string",
                    "argNum": 1,
                    "expr": "r.Form"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting {Resource} for output, error {Err}",
            "message": "Error getting {Resource} for output, error {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error getting {Resource} for output, error {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Resource",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "resource"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_REG",
                "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_UNREG",
                "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_UPDATE",
                "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_POLICY",
                "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_POLICY_PATCH",
                "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_POLICY_PATCH_INPUT_PROPERTY_ERROR",
                "Error parsing input for node policy patch. Input body did not contain a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node policy patch. Input body did not contain a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error parsing input for node policy patch. Input body did not contain a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_UI",
                "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_REG",
                "Error in node configuration/registration for node {Arg_1}. {Arg_2}"
            ],
            "message": "Error in node configuration/registration for node {Arg_1}. {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error in node configuration/registration for node {Arg_1}. {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UPDATE",
                "Error in updating node {Arg_1}. {Arg_2}"
            ],
            "message": "Error in updating node {Arg_1}. {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error in updating node {Arg_1}. {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UNREG",
                "Error in node unregistration. {Arg_1}"
            ],
            "message": "Error in node unregistration. {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Error in node unregistration. {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_VERIFY_EXCH_VERSION",
                "Error verifiying exchange version. error: {Arg_1}"
            ],
            "message": "Error verifiying exchange version. error: {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Error verifiying exchange version. error: {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_POLICY_CREATE",
                "Error in creating or replacing node policy. {Arg_1}"
            ],
            "message": "Error in creating or replacing node policy. {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Error in creating or replacing node policy. {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_POLICY_PATCH",
                "Error in patching node policy. {Arg_1}"
            ],
            "message": "Error in patching node policy. {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Error in patching node policy. {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_POLICY_DEL",
                "Error in deleting node policy. {Arg_1}"
            ],
            "message": "Error in deleting node policy. {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Error in deleting node policy. {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UI_UPDATE",
                "Error in updating node user input. {Arg_1}"
            ],
            "message": "Error in updating node user input. {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Error in updating node user input. {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UI_PATCH",
                "Error in patching node user input. {Arg_1}"
            ],
            "message": "Error in patching node user input. {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Error in patching node user input. {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UI_DEL",
                "Error in deleting node userinput. {Arg_1}"
            ],
            "message": "Error in deleting node userinput. {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Error in deleting node userinput. {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_NODE_REG",
                "Start node configuration/registration for node {Arg_1}."
            ],
            "message": "Start node configuration/registration for node {Arg_1}.",
//  END NON-TRANSLATABLE
            "translation": "Start node configuration/registration for node {Arg_1}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_NODE_UPDATE",
                "Start updating node {Arg_1}."
            ],
            "message": "Start updating node {Arg_1}.",
//  END NON-TRANSLATABLE
            "translation": "Start updating node {Arg_1}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_NODE_UPDATE",
                "Complete node update for {Arg_1}."
            ],
            "message": "Complete node update for {Arg_1}.",
//  END NON-TRANSLATABLE
            "translation": "Complete node update for {Arg_1}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_NODE_UNREG",
                "Start node unregistration."
            ],
            "message": "Start node unregistration.",
//  END NON-TRANSLATABLE
            "translation": "Start node unregistration.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_NODE_UNREG",
                "Node unregistration complete for node {Arg_1}."
            ],
            "message": "Node unregistration complete for node {Arg_1}.",
//  END NON-TRANSLATABLE
            "translation": "Node unregistration complete for node {Arg_1}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_NOT_FOUND",
                "Error unregistring the node. The node is not found from the database."
            ],
            "message": "Error unregistring the node. The node is not found from the database.",
//  END NON-TRANSLATABLE
            "translation": "Error unregistring the node. The node is not found from the database.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_NOT_IN_STATE",
                "Error unregistring the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it."
            ],
            "message": "Error unregistring the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it.",
//  END NON-TRANSLATABLE
            "translation": "Error unregistring the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_WRONG_VALUE_FOR_RN",
                "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode"
            ],
            "message": "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode",
//  END NON-TRANSLATABLE
            "translation": "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_WRONG_VALUE_FOR_DC",
                "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean"
            ],
            "message": "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean",
//  END NON-TRANSLATABLE
            "translation": "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_WRONG_VALUE_FOR_BLOCK",
                "Input error for node unregistration. {Arg_1} is an incorrect value for block"
            ],
            "message": "Input error for node unregistration. {Arg_1} is an incorrect value for block",
//  END NON-TRANSLATABLE
            "translation": "Input error for node unregistration. {Arg_1} is an incorrect value for block",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_READ_NODE_FROM_DB",
                "Unable to read node object from database, error {Arg_1}"
            ],
            "message": "Unable to read node object from database, error {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Unable to read node object from database, error {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_SAVE_NODE_CONF_TO_DB",
                "Error saving new node config state (unconfiguring) in the database: {Arg_1}"
            ],
            "message": "Error saving new node config state (unconfiguring) in the database: {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Error saving new node config state (unconfiguring) in the database: {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_CONF_NOT_FOUND",
                "Error in node configuration. The node is not found from the database."
            ],
            "message": "Error in node configuration. The node is not found from the database.",
//  END NON-TRANSLATABLE
            "translation": "Error in node configuration. The node is not found from the database.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_CONF_WRONG_STATE",
                "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}."
            ],
            "message": "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}.",
//  END NON-TRANSLATABLE
            "translation": "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_UNSUP_NODE_STATE_TRANS",
                "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported."
            ],
            "message": "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported.",
//  END NON-TRANSLATABLE
            "translation": "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_FAIL_GET_UI_FROM_DB",
                "Failed get user input from local db. {Arg_1}"
            ],
            "message": "Failed get user input from local db. {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Failed get user input from local db. {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_FAIL_FIND_SVC_PREF_FROM_UI",
                "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}"
            ],
            "message": "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}",
//  END NON-TRANSLATABLE
            "translation": "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_SAVE_NODE_CONFSTATE",
                "Error saving new node config state to database: {Arg_1}"
            ],
            "message": "Error saving new node config state to database: {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "Error saving new node config state to database: {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_NODE_REG",
                "Complete node configuration/registration for node {Arg_1}."
            ],
            "message": "Complete node configuration/registration for node {Arg_1}.",
//  END NON-TRANSLATABLE
            "translation": "Complete node configuration/registration for node {Arg_1}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_SVC_CONF",
                "Error in service configuration for {Arg_1}. {Arg_2}"
            ],
            "message": "Error in service configuration for {Arg_1}. {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error in service configuration for {Arg_1}. {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_GET_SREFS_FOR_PATTERN",
                "Error getting service references for pattern {Arg_1}. {Arg_2}"
            ],
            "message": "Error getting service references for pattern {Arg_1}. {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error getting service references for pattern {Arg_1}. {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NEW_NODE_POL",
                "New node policy: {Arg_1}"
            ],
            "message": "New node policy: {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "New node policy: {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NODE_POL_DELETED",
                "Deleted node policy"
            ],
            "message": "Deleted node policy",
//  END NON-TRANSLATABLE
            "translation": "Deleted node policy",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NEW_NODE_UI",
                "New node user input: {Arg_1}"
            ],
            "message": "New node user input: {Arg_1}",
//  END NON-TRANSLATABLE
            "translation": "New node user input: {Arg_1}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NO_NODE_UI_TO_DEL",
                "No node user input to detele"
            ],
            "message": "No node user input to detele",
//  END NON-TRANSLATABLE
            "translation": "No node user input to detele",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_DELETED_ALL_NODE_UI",
                "Deleted all node user input"
            ],
            "message": "Deleted all node user input",
//  END NON-TRANSLATABLE
            "translation": "Deleted all node user input",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_SVC_CONFIG",
                "Start service configuration with user input for {Arg_1}/{Arg_2}."
            ],
            "message": "Start service configuration with user input for {Arg_1}/{Arg_2}.",
//  END NON-TRANSLATABLE
            "translation": "Start service configuration with user input for {Arg_1}/{Arg_2}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_SVC_AUTO_CONFIG",
                "Start service auto configuration for {Arg_1}/{Arg_2}."
            ],
            "message": "Start service auto configuration for {Arg_1}/{Arg_2}.",
//  END NON-TRANSLATABLE
            "translation": "Start service auto configuration for {Arg_1}/{Arg_2}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_SVC_CONFIG",
                "Complete service configuration for {Arg_1}/{Arg_2}."
            ],
            "message": "Complete service configuration for {Arg_1}/{Arg_2}.",
//  END NON-TRANSLATABLE
            "translation": "Complete service configuration for {Arg_1}/{Arg_2}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_SVC_AUTO_CONFIG",
                "Complete service auto configuration for {Arg_1}/{Arg_2}."
            ],
            "message": "Complete service auto configuration for {Arg_1}/{Arg_2}.",
//  END NON-TRANSLATABLE
            "translation": "Complete service auto configuration for {Arg_1}/{Arg_2}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_MISS_VAR_IN_SVC_CONFIG",
                "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may cause agreement not formed if the business policy does not contain the setting for the missing variable."
            ],
            "message": "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may cause agreement not formed if the business policy does not contain the setting for the missing variable.",
//  END NON-TRANSLATABLE
            "translation": "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may cause agreement not formed if the business policy does not contain the setting for the missing variable.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_CONFIG_SVC",
                "Error configuring service {Arg_1}. {Arg_2}"
            ],
            "message": "Error configuring service {Arg_1}. {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error configuring service {Arg_1}. {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_CHANGE_SVC_CONFIGSTATE",
                "Error changing service configstate {Arg_1}, error {Arg_2}"
            ],
            "message": "Error changing service configstate {Arg_1}, error {Arg_2}",
//  END NON-TRANSLATABLE
            "translation": "Error changing service configstate {Arg_1}, error {Arg_2}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_CHANGE_SVC_CONFIGSTATE",
                "Start changing service configuration state to {Arg_1} for {Arg_2} for the node."
            ],
            "message": "Start changing service configuration state to {Arg_1} for {Arg_2} for the node.",
//  END NON-TRANSLATABLE
            "translation": "Start changing service configuration state to {Arg_1} for {Arg_2} for the node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_CHANGE_SVC_CONFIGSTATE",
                "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node."
            ],
            "message": "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node.",
//  END NON-TRANSLATABLE
            "translation": "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error converting the selections into Selectors: {Err}",
            "message": "Error converting the selections into Selectors: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error converting the selections into Selectors: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "deployment config {Dep} is not supported",
            "message": "deployment config {Dep} is not supported",
//  END NON-TRANSLATABLE
            "translation": "deployment config {Dep} is not supported",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dep",
                    "string": "%[1]v",
                    "type": "map[string]interface{}",
                    "underlyingType": "map[string]interface{}",
                    "argNum": 1,
                    "expr": "dep"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "starting test mode is not supported for this project",
            "message": "starting test mode is not supported for this project",
//  END NON-TRANSLATABLE
            "translation": "starting test mode is not supported for this project",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Command line interface for Horizon agent. Most of the sub-commands use the Horizon Agent API at the default location http://localhost (see environment Environment Variables section to override this).\n\nEnvironment Variables:\n  HORIZON_URL:  Override the URL at which hzn contacts the Horizon Agent API.\n      This can facilitate using a remote Horizon Agent via an ssh tunnel.\n  HZN_EXCHANGE_URL:  Override the URL that the 'hzn exchange' sub-commands use\n      to communicate with the Horizon Exchange, for example\n      https://exchange.bluehorizon.network/api/v1. (By default hzn will ask the\n      Horizon Agent for the URL.)\n  HZN_ORG_ID:  Default value for the 'hzn exchange -o' flag,\n      to specify the organization ID'.\n  HZN_EXCHANGE_USER_AUTH:  Default value for the 'hzn exchange -u' or 'hzn\n\t  register -u' flag, in the form '[org/]user:pw'. Notice that HZN_ORG_ID can be set \n\t  if org is omitted when HZN_EXCHANGE_USER_AUTH is set.\n  HZN_FSS_CSSURL:  Override the URL that the 'hzn mms' sub-commands use\n      to communicate with the Horizon Model Management Service, for example\n      https://exchange.bluehorizon.network/css/. (By default hzn will ask the\n      Horizon Agent for the URL.)\n\n  All these environment variables and ones mentioned in the command help can be\n  specified in user's configuration file: ~/.hzn/hzn.json with JSON format.\n  For example:\n  {Com____}",
            "message": "Command line interface for Horizon agent. Most of the sub-commands use the Horizon Agent API at the default location http://localhost (see environment Environment Variables section to override this).\n\nEnvironment Variables:\n  HORIZON_URL:  Override the URL at which hzn contacts the Horizon Agent API.\n      This can facilitate using a remote Horizon Agent via an ssh tunnel.\n  HZN_EXCHANGE_URL:  Override the URL that the 'hzn exchange' sub-commands use\n      to communicate with the Horizon Exchange, for example\n      https://exchange.bluehorizon.network/api/v1. (By default hzn will ask the\n      Horizon Agent for the URL.)\n  HZN_ORG_ID:  Default value for the 'hzn exchange -o' flag,\n      to specify the organization ID'.\n  HZN_EXCHANGE_USER_AUTH:  Default value for the 'hzn exchange -u' or 'hzn\n\t  register -u' flag, in the form '[org/]user:pw'. Notice that HZN_ORG_ID can be set \n\t  if org is omitted when HZN_EXCHANGE_USER_AUTH is set.\n  HZN_FSS_CSSURL:  Override the URL that the 'hzn mms' sub-commands use\n      to communicate with the Horizon Model Management Service, for example\n      https://exchange.bluehorizon.network/css/. (By default hzn will ask the\n      Horizon Agent for the URL.)\n\n  All these environment variables and ones mentioned in the command help can be\n  specified in user's configuration file: ~/.hzn/hzn.json with JSON format.\n  For example:\n  {Com____}",
//  END NON-TRANSLATABLE
            "translation": "Command line interface for Horizon agent. Most of the sub-commands use the Horizon Agent API at the default location http://localhost (see environment Environment Variables section to override this).\n\nEnvironment Variables:\n  HORIZON_URL:  Override the URL at which hzn contacts the Horizon Agent API.\n      This can facilitate using a remote Horizon Agent via an ssh tunnel.\n  HZN_EXCHANGE_URL:  Override the URL that the 'hzn exchange' sub-commands use\n      to communicate with the Horizon Exchange, for example\n      https://exchange.bluehorizon.network/api/v1. (By default hzn will ask the\n      Horizon Agent for the URL.)\n  HZN_ORG_ID:  Default value for the 'hzn exchange -o' flag,\n      to specify the organization ID'.\n  HZN_EXCHANGE_USER_AUTH:  Default value for the 'hzn exchange -u' or 'hzn\n\t  register -u' flag, in the form '[org/]user:pw'. Notice that HZN_ORG_ID can be set \n\t  if org is omitted when HZN_EXCHANGE_USER_AUTH is set.\n  HZN_FSS_CSSURL:  Override the URL that the 'hzn mms' sub-commands use\n      to communicate with the Horizon Model Management Service, for example\n      https://exchange.bluehorizon.network/css/. (By default hzn will ask the\n      Horizon Agent for the URL.)\n\n  All these environment variables and ones mentioned in the command help can be\n  specified in user's configuration file: ~/.hzn/hzn.json with JSON format.\n  For example:\n  {Com____}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Com____",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "`{\n    \"HZN_ORG_ID\": \"me@mycomp.com\"\n  }\n`"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Verbose output.",
            "message": "Verbose output.",
//  END NON-TRANSLATABLE
            "translation": "Verbose output.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When calling the Horizon or Exchange API, do GETs, but don't do PUTs, POSTs, or DELETEs.",
            "message": "When calling the Horizon or Exchange API, do GETs, but don't do PUTs, POSTs, or DELETEs.",
//  END NON-TRANSLATABLE
            "translation": "When calling the Horizon or Exchange API, do GETs, but don't do PUTs, POSTs, or DELETEs.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the Horizon version.",
            "message": "Show the Horizon version.",
//  END NON-TRANSLATABLE
            "translation": "Show the Horizon version.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the architecture of this machine (as defined by Horizon and golang).",
            "message": "Show the architecture of this machine (as defined by Horizon and golang).",
//  END NON-TRANSLATABLE
            "translation": "Show the architecture of this machine (as defined by Horizon and golang).",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage Horizon Exchange resources.",
            "message": "List and manage Horizon Exchange resources.",
//  END NON-TRANSLATABLE
            "translation": "List and manage Horizon Exchange resources.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange organization ID. If not specified, HZN_ORG_ID will be used as a default.",
            "message": "The Horizon exchange organization ID. If not specified, HZN_ORG_ID will be used as a default.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon exchange organization ID. If not specified, HZN_ORG_ID will be used as a default.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon Exchange user credentials to query and create exchange resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value. As an alternative to using -o, you can set HZN_ORG_ID with the Horizon exchange organization ID",
            "message": "Horizon Exchange user credentials to query and create exchange resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value. As an alternative to using -o, you can set HZN_ORG_ID with the Horizon exchange organization ID",
//  END NON-TRANSLATABLE
            "translation": "Horizon Exchange user credentials to query and create exchange resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value. As an alternative to using -o, you can set HZN_ORG_ID with the Horizon exchange organization ID",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the version of the Horizon Exchange.",
            "message": "Display the version of the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Display the version of the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the status of the Horizon Exchange.",
            "message": "Display the status of the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Display the status of the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage users in the Horizon Exchange.",
            "message": "List and manage users in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "List and manage users in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the user resource from the Horizon Exchange. (Normally you can only display your own user. If the user does not exist, you will get an invalid credentials error.)",
            "message": "Display the user resource from the Horizon Exchange. (Normally you can only display your own user. If the user does not exist, you will get an invalid credentials error.)",
//  END NON-TRANSLATABLE
            "translation": "Display the user resource from the Horizon Exchange. (Normally you can only display your own user. If the user does not exist, you will get an invalid credentials error.)",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List this one user. Default is your own user. Only admin users can list other users.",
            "message": "List this one user. Default is your own user. Only admin users can list other users.",
//  END NON-TRANSLATABLE
            "translation": "List this one user. Default is your own user. Only admin users can list other users.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List all users in the org. Will only do this if you are a user with admin privilege.",
            "message": "List all users in the org. Will only do this if you are a user with admin privilege.",
//  END NON-TRANSLATABLE
            "translation": "List all users in the org. Will only do this if you are a user with admin privilege.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When listing all of the users, show only the usernames, instead of each entire resource.",
            "message": "When listing all of the users, show only the usernames, instead of each entire resource.",
//  END NON-TRANSLATABLE
            "translation": "When listing all of the users, show only the usernames, instead of each entire resource.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create the user resource in the Horizon Exchange.",
            "message": "Create the user resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Create the user resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Your username for this user account when creating it in the Horizon exchange.",
            "message": "Your username for this user account when creating it in the Horizon exchange.",
//  END NON-TRANSLATABLE
            "translation": "Your username for this user account when creating it in the Horizon exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Your password for this user account when creating it in the Horizon exchange.",
            "message": "Your password for this user account when creating it in the Horizon exchange.",
//  END NON-TRANSLATABLE
            "translation": "Your password for this user account when creating it in the Horizon exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Your email address that should be associated with this user account when creating it in the Horizon exchange. If your username is an email address, this argument can be omitted.",
            "message": "Your email address that should be associated with this user account when creating it in the Horizon exchange. If your username is an email address, this argument can be omitted.",
//  END NON-TRANSLATABLE
            "translation": "Your email address that should be associated with this user account when creating it in the Horizon exchange. If your username is an email address, this argument can be omitted.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "This user should be an administrator, capable of managing all resources in this org of the exchange.",
            "message": "This user should be an administrator, capable of managing all resources in this org of the exchange.",
//  END NON-TRANSLATABLE
            "translation": "This user should be an administrator, capable of managing all resources in this org of the exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Change the existing user to be an admin user (like root in his/her org) or to no longer be an admin user. Can only be run by exchange root or another admin user.",
            "message": "Change the existing user to be an admin user (like root in his/her org) or to no longer be an admin user. Can only be run by exchange root or another admin user.",
//  END NON-TRANSLATABLE
            "translation": "Change the existing user to be an admin user (like root in his/her org) or to no longer be an admin user. Can only be run by exchange root or another admin user.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The user to be modified.",
            "message": "The user to be modified.",
//  END NON-TRANSLATABLE
            "translation": "The user to be modified.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "True if they should be an admin user, otherwise false.",
            "message": "True if they should be an admin user, otherwise false.",
//  END NON-TRANSLATABLE
            "translation": "True if they should be an admin user, otherwise false.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a user resource from the Horizon Exchange. Warning: this will cause all exchange resources owned by this user to also be deleted (nodes, services, patterns, etc).",
            "message": "Remove a user resource from the Horizon Exchange. Warning: this will cause all exchange resources owned by this user to also be deleted (nodes, services, patterns, etc).",
//  END NON-TRANSLATABLE
            "translation": "Remove a user resource from the Horizon Exchange. Warning: this will cause all exchange resources owned by this user to also be deleted (nodes, services, patterns, etc).",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The user to remove.",
            "message": "The user to remove.",
//  END NON-TRANSLATABLE
            "translation": "The user to remove.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Skip the 'are you sure?' prompt.",
            "message": "Skip the 'are you sure?' prompt.",
//  END NON-TRANSLATABLE
            "translation": "Skip the 'are you sure?' prompt.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage nodes in the Horizon Exchange",
            "message": "List and manage nodes in the Horizon Exchange",
//  END NON-TRANSLATABLE
            "translation": "List and manage nodes in the Horizon Exchange",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the node resources from the Horizon Exchange.",
            "message": "Display the node resources from the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Display the node resources from the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one node.",
            "message": "List just this one node.",
//  END NON-TRANSLATABLE
            "translation": "List just this one node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon Exchange node ID and token to be used as credentials to query and modify the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
            "message": "The Horizon Exchange node ID and token to be used as credentials to query and modify the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon Exchange node ID and token to be used as credentials to query and modify the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When listing all of the nodes, show the entire resource of each node, instead of just the name.",
            "message": "When listing all of the nodes, show the entire resource of each node, instead of just the name.",
//  END NON-TRANSLATABLE
            "translation": "When listing all of the nodes, show the entire resource of each node, instead of just the name.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create the node resource in the Horizon Exchange.",
            "message": "Create the node resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Create the node resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon Exchange node ID and token to be created. The node ID must be unique within the organization.",
            "message": "The Horizon Exchange node ID and token to be created. The node ID must be unique within the organization.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon Exchange node ID and token to be created. The node ID must be unique within the organization.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Your email address. Only needs to be specified if: the user specified in the -u flag does not exist, and you specified the 'public' org. If these things are true we will create the user and include this value as the email attribute.",
            "message": "Your email address. Only needs to be specified if: the user specified in the -u flag does not exist, and you specified the 'public' org. If these things are true we will create the user and include this value as the email attribute.",
//  END NON-TRANSLATABLE
            "translation": "Your email address. Only needs to be specified if: the user specified in the -u flag does not exist, and you specified the 'public' org. If these things are true we will create the user and include this value as the email attribute.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Your node architecture. If not specified, arch will leave blank.",
            "message": "Your node architecture. If not specified, arch will leave blank.",
//  END NON-TRANSLATABLE
            "translation": "Your node architecture. If not specified, arch will leave blank.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of your node",
            "message": "The name of your node",
//  END NON-TRANSLATABLE
            "translation": "The name of your node",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node to be created.",
            "message": "The node to be created.",
//  END NON-TRANSLATABLE
            "translation": "The node to be created.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The token the new node should have.",
            "message": "The token the new node should have.",
//  END NON-TRANSLATABLE
            "translation": "The token the new node should have.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update an attribute of the node in the Horizon Exchange.",
            "message": "Update an attribute of the node in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Update an attribute of the node in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node to be updated.",
            "message": "The node to be updated.",
//  END NON-TRANSLATABLE
            "translation": "The node to be updated.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path to a json file containing the changed attribute to be updated in the Horizon Exchange. Specify -f- to read from stdin.",
            "message": "The path to a json file containing the changed attribute to be updated in the Horizon Exchange. Specify -f- to read from stdin.",
//  END NON-TRANSLATABLE
            "translation": "The path to a json file containing the changed attribute to be updated in the Horizon Exchange. Specify -f- to read from stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Change the token of a node resource in the Horizon Exchange.",
            "message": "Change the token of a node resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Change the token of a node resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node to be changed.",
            "message": "The node to be changed.",
//  END NON-TRANSLATABLE
            "translation": "The node to be changed.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The new token for the node.",
            "message": "The new token for the node.",
//  END NON-TRANSLATABLE
            "translation": "The new token for the node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Check to see if the specified node and token are valid in the Horizon Exchange.",
            "message": "Check to see if the specified node and token are valid in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Check to see if the specified node and token are valid in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange node ID and token to be checked. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. Mutually exclusive with \u003cnode\u003e and \u003ctoken\u003e arguments.",
            "message": "The Horizon exchange node ID and token to be checked. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. Mutually exclusive with \u003cnode\u003e and \u003ctoken\u003e arguments.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon exchange node ID and token to be checked. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. Mutually exclusive with \u003cnode\u003e and \u003ctoken\u003e arguments.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node id to be checked. Mutually exclusive with -n flag.",
            "message": "The node id to be checked. Mutually exclusive with -n flag.",
//  END NON-TRANSLATABLE
            "translation": "The node id to be checked. Mutually exclusive with -n flag.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The token for the node. Mutually exclusive with -n flag.",
            "message": "The token for the node. Mutually exclusive with -n flag.",
//  END NON-TRANSLATABLE
            "translation": "The token for the node. Mutually exclusive with -n flag.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a node resource from the Horizon Exchange. Do NOT do this when an edge node is registered with this node id.",
            "message": "Remove a node resource from the Horizon Exchange. Do NOT do this when an edge node is registered with this node id.",
//  END NON-TRANSLATABLE
            "translation": "Remove a node resource from the Horizon Exchange. Do NOT do this when an edge node is registered with this node id.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon Exchange node ID and token to be used as credentials to query and modfy the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
            "message": "The Horizon Exchange node ID and token to be used as credentials to query and modfy the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon Exchange node ID and token to be used as credentials to query and modfy the node resources if -u flag is not specified. HZN_EXCHANGE_NODE_AUTH will be used as a default for -n. If you don't prepend it with the node's org, it will automatically be prepended with the -o value.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The node to remove.",
            "message": "The node to remove.",
//  END NON-TRANSLATABLE
            "translation": "The node to remove.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the node policy from the Horizon Exchange.",
            "message": "Display the node policy from the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Display the node policy from the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List policy for this node.",
            "message": "List policy for this node.",
//  END NON-TRANSLATABLE
            "translation": "List policy for this node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace the node policy in the Horizon Exchange.",
            "message": "Add or replace the node policy in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Add or replace the node policy in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace policy for this node.",
            "message": "Add or replace policy for this node.",
//  END NON-TRANSLATABLE
            "translation": "Add or replace policy for this node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the metadata necessary to create/update the node policy in the Horizon exchange. Specify -f- to read from stdin.",
            "message": "The path of a JSON file containing the metadata necessary to create/update the node policy in the Horizon exchange. Specify -f- to read from stdin.",
//  END NON-TRANSLATABLE
            "translation": "The path of a JSON file containing the metadata necessary to create/update the node policy in the Horizon exchange. Specify -f- to read from stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update an attribute of the policy for this node in the Horizon Exchange.",
            "message": "Update an attribute of the policy for this node in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Update an attribute of the policy for this node in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update the policy for this node.",
            "message": "Update the policy for this node.",
//  END NON-TRANSLATABLE
            "translation": "Update the policy for this node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the attribute to be updated in the Horizon Exchange. Specify -f- to read from stdin.",
            "message": "The path of a JSON file containing the attribute to be updated in the Horizon Exchange. Specify -f- to read from stdin.",
//  END NON-TRANSLATABLE
            "translation": "The path of a JSON file containing the attribute to be updated in the Horizon Exchange. Specify -f- to read from stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove the node policy in the Horizon Exchange.",
            "message": "Remove the node policy in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Remove the node policy in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove policy for this node.",
            "message": "Remove policy for this node.",
//  END NON-TRANSLATABLE
            "translation": "Remove policy for this node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage agbots in the Horizon Exchange",
            "message": "List and manage agbots in the Horizon Exchange",
//  END NON-TRANSLATABLE
            "translation": "List and manage agbots in the Horizon Exchange",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the agbot resources from the Horizon Exchange.",
            "message": "Display the agbot resources from the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Display the agbot resources from the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one agbot.",
            "message": "List just this one agbot.",
//  END NON-TRANSLATABLE
            "translation": "List just this one agbot.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When listing all of the agbots, show the entire resource of each agbots, instead of just the name.",
            "message": "When listing all of the agbots, show the entire resource of each agbots, instead of just the name.",
//  END NON-TRANSLATABLE
            "translation": "When listing all of the agbots, show the entire resource of each agbots, instead of just the name.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the patterns that this agbot is serving.",
            "message": "Display the patterns that this agbot is serving.",
//  END NON-TRANSLATABLE
            "translation": "Display the patterns that this agbot is serving.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to list the patterns for.",
            "message": "The agbot to list the patterns for.",
//  END NON-TRANSLATABLE
            "translation": "The agbot to list the patterns for.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the 1 pattern to list.",
            "message": "The organization of the 1 pattern to list.",
//  END NON-TRANSLATABLE
            "translation": "The organization of the 1 pattern to list.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the 1 pattern to list.",
            "message": "The name of the 1 pattern to list.",
//  END NON-TRANSLATABLE
            "translation": "The name of the 1 pattern to list.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the nodes that should be searched. Defaults to patternorg.",
            "message": "The organization of the nodes that should be searched. Defaults to patternorg.",
//  END NON-TRANSLATABLE
            "translation": "The organization of the nodes that should be searched. Defaults to patternorg.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add this pattern to the list of patterns this agbot is serving.",
            "message": "Add this pattern to the list of patterns this agbot is serving.",
//  END NON-TRANSLATABLE
            "translation": "Add this pattern to the list of patterns this agbot is serving.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to add the pattern to.",
            "message": "The agbot to add the pattern to.",
//  END NON-TRANSLATABLE
            "translation": "The agbot to add the pattern to.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the pattern to add.",
            "message": "The organization of the pattern to add.",
//  END NON-TRANSLATABLE
            "translation": "The organization of the pattern to add.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the pattern to add.",
            "message": "The name of the pattern to add.",
//  END NON-TRANSLATABLE
            "translation": "The name of the pattern to add.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove this pattern from the list of patterns this agbot is serving.",
            "message": "Remove this pattern from the list of patterns this agbot is serving.",
//  END NON-TRANSLATABLE
            "translation": "Remove this pattern from the list of patterns this agbot is serving.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to remove the pattern from.",
            "message": "The agbot to remove the pattern from.",
//  END NON-TRANSLATABLE
            "translation": "The agbot to remove the pattern from.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the pattern to remove.",
            "message": "The organization of the pattern to remove.",
//  END NON-TRANSLATABLE
            "translation": "The organization of the pattern to remove.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the pattern to remove.",
            "message": "The name of the pattern to remove.",
//  END NON-TRANSLATABLE
            "translation": "The name of the pattern to remove.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the business policies that this agbot is serving.",
            "message": "Display the business policies that this agbot is serving.",
//  END NON-TRANSLATABLE
            "translation": "Display the business policies that this agbot is serving.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to list serving business policies for.",
            "message": "The agbot to list serving business policies for.",
//  END NON-TRANSLATABLE
            "translation": "The agbot to list serving business policies for.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add this business policy to the list of policies this agbot is serving. Currently only support adding all the business polycies from an organization.",
            "message": "Add this business policy to the list of policies this agbot is serving. Currently only support adding all the business polycies from an organization.",
//  END NON-TRANSLATABLE
            "translation": "Add this business policy to the list of policies this agbot is serving. Currently only support adding all the business polycies from an organization.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to add the business policy to.",
            "message": "The agbot to add the business policy to.",
//  END NON-TRANSLATABLE
            "translation": "The agbot to add the business policy to.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the business policy to add.",
            "message": "The organization of the business policy to add.",
//  END NON-TRANSLATABLE
            "translation": "The organization of the business policy to add.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove this business policy from the list of policies this agbot is serving. Currently only support removing all the business polycies from an organization.",
            "message": "Remove this business policy from the list of policies this agbot is serving. Currently only support removing all the business polycies from an organization.",
//  END NON-TRANSLATABLE
            "translation": "Remove this business policy from the list of policies this agbot is serving. Currently only support removing all the business polycies from an organization.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The agbot to remove the business policy from.",
            "message": "The agbot to remove the business policy from.",
//  END NON-TRANSLATABLE
            "translation": "The agbot to remove the business policy from.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the business policy to remove.",
            "message": "The organization of the business policy to remove.",
//  END NON-TRANSLATABLE
            "translation": "The organization of the business policy to remove.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage patterns in the Horizon Exchange",
            "message": "List and manage patterns in the Horizon Exchange",
//  END NON-TRANSLATABLE
            "translation": "List and manage patterns in the Horizon Exchange",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the pattern resources from the Horizon Exchange.",
            "message": "Display the pattern resources from the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Display the pattern resources from the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one pattern. Use \u003corg\u003e/\u003cpat\u003e to specify a public pattern in another org, or \u003corg\u003e/ to list all of the public patterns in another org.",
            "message": "List just this one pattern. Use \u003corg\u003e/\u003cpat\u003e to specify a public pattern in another org, or \u003corg\u003e/ to list all of the public patterns in another org.",
//  END NON-TRANSLATABLE
            "translation": "List just this one pattern. Use \u003corg\u003e/\u003cpat\u003e to specify a public pattern in another org, or \u003corg\u003e/ to list all of the public patterns in another org.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When listing all of the patterns, show the entire resource of each pattern, instead of just the name.",
            "message": "When listing all of the patterns, show the entire resource of each pattern, instead of just the name.",
//  END NON-TRANSLATABLE
            "translation": "When listing all of the patterns, show the entire resource of each pattern, instead of just the name.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Sign and create/update the pattern resource in the Horizon Exchange.",
            "message": "Sign and create/update the pattern resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Sign and create/update the pattern resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the metadata necessary to create/update the pattern in the Horizon exchange. See /usr/horizon/samples/pattern.json. Specify -f- to read from stdin.",
            "message": "The path of a JSON file containing the metadata necessary to create/update the pattern in the Horizon exchange. See /usr/horizon/samples/pattern.json. Specify -f- to read from stdin.",
//  END NON-TRANSLATABLE
            "translation": "The path of a JSON file containing the metadata necessary to create/update the pattern in the Horizon exchange. See /usr/horizon/samples/pattern.json. Specify -f- to read from stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a private key file to be used to sign the pattern. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
            "message": "The path of a private key file to be used to sign the pattern. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
//  END NON-TRANSLATABLE
            "translation": "The path of a private key file to be used to sign the pattern. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of public key file (that corresponds to the private key) that should be stored with the pattern, to be used by the Horizon Agent to verify the signature. If both this and -k flags are not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If HZN_PUBLIC_KEY_FILE is not set, ~/.hzn/keys/service.public.pem is the default. If -k is specified and this flag is not specified, then no public key file will be stored with the pattern. The Horizon Agent needs to import the public key to verify the signature.",
            "message": "The path of public key file (that corresponds to the private key) that should be stored with the pattern, to be used by the Horizon Agent to verify the signature. If both this and -k flags are not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If HZN_PUBLIC_KEY_FILE is not set, ~/.hzn/keys/service.public.pem is the default. If -k is specified and this flag is not specified, then no public key file will be stored with the pattern. The Horizon Agent needs to import the public key to verify the signature.",
//  END NON-TRANSLATABLE
            "translation": "The path of public key file (that corresponds to the private key) that should be stored with the pattern, to be used by the Horizon Agent to verify the signature. If both this and -k flags are not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If HZN_PUBLIC_KEY_FILE is not set, ~/.hzn/keys/service.public.pem is the default. If -k is specified and this flag is not specified, then no public key file will be stored with the pattern. The Horizon Agent needs to import the public key to verify the signature.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name to use for this pattern in the Horizon exchange. If not specified, will default to the base name of the file path specified in -f.",
            "message": "The name to use for this pattern in the Horizon exchange. If not specified, will default to the base name of the file path specified in -f.",
//  END NON-TRANSLATABLE
            "translation": "The name to use for this pattern in the Horizon exchange. If not specified, will default to the base name of the file path specified in -f.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Verify the signatures of a pattern resource in the Horizon Exchange.",
            "message": "Verify the signatures of a pattern resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Verify the signatures of a pattern resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The pattern to verify.",
            "message": "The pattern to verify.",
//  END NON-TRANSLATABLE
            "translation": "The pattern to verify.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a pem public key file to be used to verify the pattern. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "message": "The path of a pem public key file to be used to verify the pattern. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
//  END NON-TRANSLATABLE
            "translation": "The path of a pem public key file to be used to verify the pattern. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update an attribute of the pattern in the Horizon Exchange.",
            "message": "Update an attribute of the pattern in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Update an attribute of the pattern in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the pattern in the Horizon Exchange to publish.",
            "message": "The name of the pattern in the Horizon Exchange to publish.",
//  END NON-TRANSLATABLE
            "translation": "The name of the pattern in the Horizon Exchange to publish.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path to a json file containing the updated attribute of the pattern to be put in the Horizon Exchange. Specify -f- to read from stdin.",
            "message": "The path to a json file containing the updated attribute of the pattern to be put in the Horizon Exchange. Specify -f- to read from stdin.",
//  END NON-TRANSLATABLE
            "translation": "The path to a json file containing the updated attribute of the pattern to be put in the Horizon Exchange. Specify -f- to read from stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a pattern resource from the Horizon Exchange.",
            "message": "Remove a pattern resource from the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Remove a pattern resource from the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The pattern to remove.",
            "message": "The pattern to remove.",
//  END NON-TRANSLATABLE
            "translation": "The pattern to remove.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the signing public keys/certs for this pattern resource in the Horizon Exchange.",
            "message": "List the signing public keys/certs for this pattern resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "List the signing public keys/certs for this pattern resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing pattern to list the keys for.",
            "message": "The existing pattern to list the keys for.",
//  END NON-TRANSLATABLE
            "translation": "The existing pattern to list the keys for.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing key name to see the contents of.",
            "message": "The existing key name to see the contents of.",
//  END NON-TRANSLATABLE
            "translation": "The existing key name to see the contents of.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a signing public key/cert for this pattern resource in the Horizon Exchange.",
            "message": "Remove a signing public key/cert for this pattern resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Remove a signing public key/cert for this pattern resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing pattern to remove the key from.",
            "message": "The existing pattern to remove the key from.",
//  END NON-TRANSLATABLE
            "translation": "The existing pattern to remove the key from.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing key name to remove.",
            "message": "The existing key name to remove.",
//  END NON-TRANSLATABLE
            "translation": "The existing key name to remove.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage services in the Horizon Exchange",
            "message": "List and manage services in the Horizon Exchange",
//  END NON-TRANSLATABLE
            "translation": "List and manage services in the Horizon Exchange",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the service resources from the Horizon Exchange.",
            "message": "Display the service resources from the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Display the service resources from the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one service. Use \u003corg\u003e/\u003csvc\u003e to specify a public service in another org, or \u003corg\u003e/ to list all of the public services in another org.",
            "message": "List just this one service. Use \u003corg\u003e/\u003csvc\u003e to specify a public service in another org, or \u003corg\u003e/ to list all of the public services in another org.",
//  END NON-TRANSLATABLE
            "translation": "List just this one service. Use \u003corg\u003e/\u003csvc\u003e to specify a public service in another org, or \u003corg\u003e/ to list all of the public services in another org.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "When listing all of the services, show the entire resource of each services, instead of just the name.",
            "message": "When listing all of the services, show the entire resource of each services, instead of just the name.",
//  END NON-TRANSLATABLE
            "translation": "When listing all of the services, show the entire resource of each services, instead of just the name.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Sign and create/update the service resource in the Horizon Exchange.",
            "message": "Sign and create/update the service resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Sign and create/update the service resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the metadata necessary to create/update the service in the Horizon exchange. See /usr/horizon/samples/service.json. Specify -f- to read from stdin.",
            "message": "The path of a JSON file containing the metadata necessary to create/update the service in the Horizon exchange. See /usr/horizon/samples/service.json. Specify -f- to read from stdin.",
//  END NON-TRANSLATABLE
            "translation": "The path of a JSON file containing the metadata necessary to create/update the service in the Horizon exchange. See /usr/horizon/samples/service.json. Specify -f- to read from stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a private key file to be used to sign the service. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
            "message": "The path of a private key file to be used to sign the service. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
//  END NON-TRANSLATABLE
            "translation": "The path of a private key file to be used to sign the service. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of public key file (that corresponds to the private key) that should be stored with the service, to be used by the Horizon Agent to verify the signature. If both this and -k flags are not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If HZN_PUBLIC_KEY_FILE is not set, ~/.hzn/keys/service.public.pem is the default. If -k is specified and this flag is not specified, then no public key file will be stored with the service. The Horizon Agent needs to import the public key to verify the signature.",
            "message": "The path of public key file (that corresponds to the private key) that should be stored with the service, to be used by the Horizon Agent to verify the signature. If both this and -k flags are not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If HZN_PUBLIC_KEY_FILE is not set, ~/.hzn/keys/service.public.pem is the default. If -k is specified and this flag is not specified, then no public key file will be stored with the service. The Horizon Agent needs to import the public key to verify the signature.",
//  END NON-TRANSLATABLE
            "translation": "The path of public key file (that corresponds to the private key) that should be stored with the service, to be used by the Horizon Agent to verify the signature. If both this and -k flags are not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If HZN_PUBLIC_KEY_FILE is not set, ~/.hzn/keys/service.public.pem is the default. If -k is specified and this flag is not specified, then no public key file will be stored with the service. The Horizon Agent needs to import the public key to verify the signature.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The image paths in the deployment field have regular tags and should not be changed to sha256 digest values. The image will not get automatically uploaded to the repository. This should only be used during development when testing new versions often.",
            "message": "The image paths in the deployment field have regular tags and should not be changed to sha256 digest values. The image will not get automatically uploaded to the repository. This should only be used during development when testing new versions often.",
//  END NON-TRANSLATABLE
            "translation": "The image paths in the deployment field have regular tags and should not be changed to sha256 digest values. The image will not get automatically uploaded to the repository. This should only be used during development when testing new versions often.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Use the image from the image repository. It will pull the image from the image repository and overwrite the local image if exists. This flag is mutually exclusive with -I.",
            "message": "Use the image from the image repository. It will pull the image from the image repository and overwrite the local image if exists. This flag is mutually exclusive with -I.",
//  END NON-TRANSLATABLE
            "translation": "Use the image from the image repository. It will pull the image from the image repository and overwrite the local image if exists. This flag is mutually exclusive with -I.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Docker registry domain and auth that should be stored with the service, to enable the Horizon edge node to access the service's docker images. This flag can be repeated, and each flag should be in the format: registry:user:token",
            "message": "Docker registry domain and auth that should be stored with the service, to enable the Horizon edge node to access the service's docker images. This flag can be repeated, and each flag should be in the format: registry:user:token",
//  END NON-TRANSLATABLE
            "translation": "Docker registry domain and auth that should be stored with the service, to enable the Horizon edge node to access the service's docker images. This flag can be repeated, and each flag should be in the format: registry:user:token",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Overwrite the existing version if the service exists in the exchange. It will skip the 'do you want to overwrite' prompt.",
            "message": "Overwrite the existing version if the service exists in the exchange. It will skip the 'do you want to overwrite' prompt.",
//  END NON-TRANSLATABLE
            "translation": "Overwrite the existing version if the service exists in the exchange. It will skip the 'do you want to overwrite' prompt.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of the service policy JSON file to be used for the service to be published. This flag is optional",
            "message": "The path of the service policy JSON file to be used for the service to be published. This flag is optional",
//  END NON-TRANSLATABLE
            "translation": "The path of the service policy JSON file to be used for the service to be published. This flag is optional",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Verify the signatures of a service resource in the Horizon Exchange.",
            "message": "Verify the signatures of a service resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Verify the signatures of a service resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service to verify.",
            "message": "The service to verify.",
//  END NON-TRANSLATABLE
            "translation": "The service to verify.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a pem public key file to be used to verify the service. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "message": "The path of a pem public key file to be used to verify the service. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
//  END NON-TRANSLATABLE
            "translation": "The path of a pem public key file to be used to verify the service. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a service resource from the Horizon Exchange.",
            "message": "Remove a service resource from the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Remove a service resource from the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service to remove.",
            "message": "The service to remove.",
//  END NON-TRANSLATABLE
            "translation": "The service to remove.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the signing public keys/certs for this service resource in the Horizon Exchange.",
            "message": "List the signing public keys/certs for this service resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "List the signing public keys/certs for this service resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing service to list the keys for.",
            "message": "The existing service to list the keys for.",
//  END NON-TRANSLATABLE
            "translation": "The existing service to list the keys for.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a signing public key/cert for this service resource in the Horizon Exchange.",
            "message": "Remove a signing public key/cert for this service resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Remove a signing public key/cert for this service resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing service to remove the key from.",
            "message": "The existing service to remove the key from.",
//  END NON-TRANSLATABLE
            "translation": "The existing service to remove the key from.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the docker auth tokens for this service resource in the Horizon Exchange.",
            "message": "List the docker auth tokens for this service resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "List the docker auth tokens for this service resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing service to list the docker auths for.",
            "message": "The existing service to list the docker auths for.",
//  END NON-TRANSLATABLE
            "translation": "The existing service to list the docker auths for.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing docker auth id to see the contents of.",
            "message": "The existing docker auth id to see the contents of.",
//  END NON-TRANSLATABLE
            "translation": "The existing docker auth id to see the contents of.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a docker auth token for this service resource in the Horizon Exchange.",
            "message": "Remove a docker auth token for this service resource in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Remove a docker auth token for this service resource in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing service to remove the docker auth from.",
            "message": "The existing service to remove the docker auth from.",
//  END NON-TRANSLATABLE
            "translation": "The existing service to remove the docker auth from.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The existing docker auth id to remove.",
            "message": "The existing docker auth id to remove.",
//  END NON-TRANSLATABLE
            "translation": "The existing docker auth id to remove.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the service policy from the Horizon Exchange.",
            "message": "Display the service policy from the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Display the service policy from the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon Exchange id and password of the user",
            "message": "The Horizon Exchange id and password of the user",
//  END NON-TRANSLATABLE
            "translation": "The Horizon Exchange id and password of the user",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List policy for this service.",
            "message": "List policy for this service.",
//  END NON-TRANSLATABLE
            "translation": "List policy for this service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty service policy template that can be filled in.",
            "message": "Display an empty service policy template that can be filled in.",
//  END NON-TRANSLATABLE
            "translation": "Display an empty service policy template that can be filled in.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace the service policy in the Horizon Exchange.",
            "message": "Add or replace the service policy in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Add or replace the service policy in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon Exchange ID and password of the user",
            "message": "The Horizon Exchange ID and password of the user",
//  END NON-TRANSLATABLE
            "translation": "The Horizon Exchange ID and password of the user",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace policy for this service.",
            "message": "Add or replace policy for this service.",
//  END NON-TRANSLATABLE
            "translation": "Add or replace policy for this service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a JSON file containing the metadata necessary to create/update the service policy in the Horizon Exchange. Specify -f- to read from stdin.",
            "message": "The path of a JSON file containing the metadata necessary to create/update the service policy in the Horizon Exchange. Specify -f- to read from stdin.",
//  END NON-TRANSLATABLE
            "translation": "The path of a JSON file containing the metadata necessary to create/update the service policy in the Horizon Exchange. Specify -f- to read from stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove the service policy in the Horizon Exchange.",
            "message": "Remove the service policy in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Remove the service policy in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove policy for this service.",
            "message": "Remove policy for this service.",
//  END NON-TRANSLATABLE
            "translation": "Remove policy for this service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage business policies in the Horizon Exchange.",
            "message": "List and manage business policies in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "List and manage business policies in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the business policies from the Horizon Exchange.",
            "message": "Display the business policies from the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Display the business policies from the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon ID and password of the user.",
            "message": "The Horizon ID and password of the user.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon ID and password of the user.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display detailed output about the business policies.",
            "message": "Display detailed output about the business policies.",
//  END NON-TRANSLATABLE
            "translation": "Display detailed output about the business policies.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one policy. Use \u003corg\u003e/\u003cpolicy\u003e to specify a public policy in another org, or \u003corg\u003e/ to list all of the public policies in another org.",
            "message": "List just this one policy. Use \u003corg\u003e/\u003cpolicy\u003e to specify a public policy in another org, or \u003corg\u003e/ to list all of the public policies in another org.",
//  END NON-TRANSLATABLE
            "translation": "List just this one policy. Use \u003corg\u003e/\u003cpolicy\u003e to specify a public policy in another org, or \u003corg\u003e/ to list all of the public policies in another org.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty business policy template that can be filled in.",
            "message": "Display an empty business policy template that can be filled in.",
//  END NON-TRANSLATABLE
            "translation": "Display an empty business policy template that can be filled in.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or replace a business policy in the Horizon Exchange. Use 'hzn exchange business new' for an empty business policy template.",
            "message": "Add or replace a business policy in the Horizon Exchange. Use 'hzn exchange business new' for an empty business policy template.",
//  END NON-TRANSLATABLE
            "translation": "Add or replace a business policy in the Horizon Exchange. Use 'hzn exchange business new' for an empty business policy template.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the policy to add or overwrite.",
            "message": "The name of the policy to add or overwrite.",
//  END NON-TRANSLATABLE
            "translation": "The name of the policy to add or overwrite.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update one attribute of an existing policy in the Horizon Exchange. The supported attributes are the top level attributes in the policy definition as shown by the command 'hzn exchange business new'.",
            "message": "Update one attribute of an existing policy in the Horizon Exchange. The supported attributes are the top level attributes in the policy definition as shown by the command 'hzn exchange business new'.",
//  END NON-TRANSLATABLE
            "translation": "Update one attribute of an existing policy in the Horizon Exchange. The supported attributes are the top level attributes in the policy definition as shown by the command 'hzn exchange business new'.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the policy to be updated in the Horizon Exchange.",
            "message": "The name of the policy to be updated in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "The name of the policy to be updated in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path to the json file containing the updated business policy attribute to be changed in the Horizon Exchange. Specify -f- to read from stdin.",
            "message": "The path to the json file containing the updated business policy attribute to be changed in the Horizon Exchange. Specify -f- to read from stdin.",
//  END NON-TRANSLATABLE
            "translation": "The path to the json file containing the updated business policy attribute to be changed in the Horizon Exchange. Specify -f- to read from stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove the business policy in the Horizon Exchange.",
            "message": "Remove the business policy in the Horizon Exchange.",
//  END NON-TRANSLATABLE
            "translation": "Remove the business policy in the Horizon Exchange.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the business policy to be removed.",
            "message": "The name of the business policy to be removed.",
//  END NON-TRANSLATABLE
            "translation": "The name of the business policy to be removed.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List all public services/patterns in all orgs that have orgType: IBM.",
            "message": "List all public services/patterns in all orgs that have orgType: IBM.",
//  END NON-TRANSLATABLE
            "translation": "List all public services/patterns in all orgs that have orgType: IBM.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display all public services in all orgs that have orgType: IBM.",
            "message": "Display all public services in all orgs that have orgType: IBM.",
//  END NON-TRANSLATABLE
            "translation": "Display all public services in all orgs that have orgType: IBM.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Only display org (IBM) and service names.",
            "message": "Only display org (IBM) and service names.",
//  END NON-TRANSLATABLE
            "translation": "Only display org (IBM) and service names.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display detailed output about public services in all orgs that have orgType: IBM.",
            "message": "Display detailed output about public services in all orgs that have orgType: IBM.",
//  END NON-TRANSLATABLE
            "translation": "Display detailed output about public services in all orgs that have orgType: IBM.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display all public patterns in all orgs that have orgType: IBM.",
            "message": "Display all public patterns in all orgs that have orgType: IBM.",
//  END NON-TRANSLATABLE
            "translation": "Display all public patterns in all orgs that have orgType: IBM.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Only display org (IBM) and pattern names.",
            "message": "Only display org (IBM) and pattern names.",
//  END NON-TRANSLATABLE
            "translation": "Only display org (IBM) and pattern names.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display detailed output about public patterns in all orgs that have orgType: IBM.",
            "message": "Display detailed output about public patterns in all orgs that have orgType: IBM.",
//  END NON-TRANSLATABLE
            "translation": "Display detailed output about public patterns in all orgs that have orgType: IBM.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create an input file template for this pattern that can be used for the 'hzn register' command (once filled in). This examines the services that the specified pattern uses, and determines the node owner input that is required for them.",
            "message": "Create an input file template for this pattern that can be used for the 'hzn register' command (once filled in). This examines the services that the specified pattern uses, and determines the node owner input that is required for them.",
//  END NON-TRANSLATABLE
            "translation": "Create an input file template for this pattern that can be used for the 'hzn register' command (once filled in). This examines the services that the specified pattern uses, and determines the node owner input that is required for them.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange node ID and token (it must already exist).",
            "message": "The Horizon exchange node ID and token (it must already exist).",
//  END NON-TRANSLATABLE
            "translation": "The Horizon exchange node ID and token (it must already exist).",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The JSON input template file name that should be created. This file will contain placeholders for you to fill in user input values.",
            "message": "The JSON input template file name that should be created. This file will contain placeholders for you to fill in user input values.",
//  END NON-TRANSLATABLE
            "translation": "The JSON input template file name that should be created. This file will contain placeholders for you to fill in user input values.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange organization ID that the node will be registered in.",
            "message": "The Horizon exchange organization ID that the node will be registered in.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon exchange organization ID that the node will be registered in.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format.",
            "message": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The architecture to write the template file for. (Horizon ignores services in patterns whose architecture is different from the target system.) The architecture must be what is returned by 'hzn node list' on the target system.",
            "message": "The architecture to write the template file for. (Horizon ignores services in patterns whose architecture is different from the target system.) The architecture must be what is returned by 'hzn node list' on the target system.",
//  END NON-TRANSLATABLE
            "translation": "The architecture to write the template file for. (Horizon ignores services in patterns whose architecture is different from the target system.) The architecture must be what is returned by 'hzn node list' on the target system.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Register this edge node with Horizon.",
            "message": "Register this edge node with Horizon.",
//  END NON-TRANSLATABLE
            "translation": "Register this edge node with Horizon.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange node ID and token. The node ID must be unique within the organization. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. If both -n and HZN_EXCHANGE_NODE_AUTH are not specified, the node ID will be created by Horizon from the machine serial number or fully qualified hostname. If the token is not specified, Horizon will create a random token. If node resource in the exchange identified by the ID and token does not yet exist, you must also specify the -u flag so it can be created.",
            "message": "The Horizon exchange node ID and token. The node ID must be unique within the organization. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. If both -n and HZN_EXCHANGE_NODE_AUTH are not specified, the node ID will be created by Horizon from the machine serial number or fully qualified hostname. If the token is not specified, Horizon will create a random token. If node resource in the exchange identified by the ID and token does not yet exist, you must also specify the -u flag so it can be created.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon exchange node ID and token. The node ID must be unique within the organization. If not specified, HZN_EXCHANGE_NODE_AUTH will be used as a default. If both -n and HZN_EXCHANGE_NODE_AUTH are not specified, the node ID will be created by Horizon from the machine serial number or fully qualified hostname. If the token is not specified, Horizon will create a random token. If node resource in the exchange identified by the ID and token does not yet exist, you must also specify the -u flag so it can be created.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the node. If not specified, it will be the same as the node id.",
            "message": "The name of the node. If not specified, it will be the same as the node id.",
//  END NON-TRANSLATABLE
            "translation": "The name of the node. If not specified, it will be the same as the node id.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "User credentials to create the node resource in the Horizon exchange if it does not already exist. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default.",
            "message": "User credentials to create the node resource in the Horizon exchange if it does not already exist. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default.",
//  END NON-TRANSLATABLE
            "translation": "User credentials to create the node resource in the Horizon exchange if it does not already exist. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Your email address. Only needs to be specified if: the node resource does not yet exist in the Horizon exchange, and the user specified in the -u flag does not exist, and you specified the 'public' org. If all of these things are true we will create the user and include this value as the email attribute.",
            "message": "Your email address. Only needs to be specified if: the node resource does not yet exist in the Horizon exchange, and the user specified in the -u flag does not exist, and you specified the 'public' org. If all of these things are true we will create the user and include this value as the email attribute.",
//  END NON-TRANSLATABLE
            "translation": "Your email address. Only needs to be specified if: the node resource does not yet exist in the Horizon exchange, and the user specified in the -u flag does not exist, and you specified the 'public' org. If all of these things are true we will create the user and include this value as the email attribute.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A JSON file that sets or overrides variables needed by the node and services that are part of this pattern. See /usr/horizon/samples/input.json and /usr/horizon/samples/more-examples.json. Specify -f- to read from stdin.",
            "message": "A JSON file that sets or overrides variables needed by the node and services that are part of this pattern. See /usr/horizon/samples/input.json and /usr/horizon/samples/more-examples.json. Specify -f- to read from stdin.",
//  END NON-TRANSLATABLE
            "translation": "A JSON file that sets or overrides variables needed by the node and services that are part of this pattern. See /usr/horizon/samples/input.json and /usr/horizon/samples/more-examples.json. Specify -f- to read from stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange organization ID that the node should be registered in. The default is the HZN_ORG_ID environment variable. Mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
            "message": "The Horizon exchange organization ID that the node should be registered in. The default is the HZN_ORG_ID environment variable. Mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon exchange organization ID that the node should be registered in. The default is the HZN_ORG_ID environment variable. Mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments and --policy flag.",
            "message": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments and --policy flag.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with \u003cnodeorg\u003e and \u003cpattern\u003e arguments and --policy flag.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A JSON file that sets or overrides the node policy for this node that will be used for policy based agreement negotiation. Mutually exclusive with -p argument.",
            "message": "A JSON file that sets or overrides the node policy for this node that will be used for policy based agreement negotiation. Mutually exclusive with -p argument.",
//  END NON-TRANSLATABLE
            "translation": "A JSON file that sets or overrides the node policy for this node that will be used for policy based agreement negotiation. Mutually exclusive with -p argument.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange organization ID that the node should be registered in. Mutually exclusive with -o and -p.",
            "message": "The Horizon exchange organization ID that the node should be registered in. Mutually exclusive with -o and -p.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon exchange organization ID that the node should be registered in. Mutually exclusive with -o and -p.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with -o, -p and --policy.",
            "message": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with -o, -p and --policy.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon exchange pattern that describes what workloads that should be deployed to this node. If the pattern is from a different organization than the node, use the 'other_org/pattern' format. Mutually exclusive with -o, -p and --policy.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage keys for signing and verifying services.",
            "message": "List and manage keys for signing and verifying services.",
//  END NON-TRANSLATABLE
            "translation": "List and manage keys for signing and verifying services.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the signing keys that have been imported into this Horizon agent.",
            "message": "List the signing keys that have been imported into this Horizon agent.",
//  END NON-TRANSLATABLE
            "translation": "List the signing keys that have been imported into this Horizon agent.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of a specific key to show.",
            "message": "The name of a specific key to show.",
//  END NON-TRANSLATABLE
            "translation": "The name of a specific key to show.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the names of all signing keys, even the older public keys not wrapped in a certificate.",
            "message": "List the names of all signing keys, even the older public keys not wrapped in a certificate.",
//  END NON-TRANSLATABLE
            "translation": "List the names of all signing keys, even the older public keys not wrapped in a certificate.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Generate a signing key pair.",
            "message": "Generate a signing key pair.",
//  END NON-TRANSLATABLE
            "translation": "Generate a signing key pair.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "x509 certificate Organization (O) field (preferably a company name or other organization's name).",
            "message": "x509 certificate Organization (O) field (preferably a company name or other organization's name).",
//  END NON-TRANSLATABLE
            "translation": "x509 certificate Organization (O) field (preferably a company name or other organization's name).",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "x509 certificate Common Name (CN) field (preferably an email address issued by x509org).",
            "message": "x509 certificate Common Name (CN) field (preferably an email address issued by x509org).",
//  END NON-TRANSLATABLE
            "translation": "x509 certificate Common Name (CN) field (preferably an email address issued by x509org).",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The directory to put the key pair files in. Mutually exclusive with -k and -K. The file names will be randomly generated.",
            "message": "The directory to put the key pair files in. Mutually exclusive with -k and -K. The file names will be randomly generated.",
//  END NON-TRANSLATABLE
            "translation": "The directory to put the key pair files in. Mutually exclusive with -k and -K. The file names will be randomly generated.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The full path of the private key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
            "message": "The full path of the private key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
//  END NON-TRANSLATABLE
            "translation": "The full path of the private key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PRIVATE_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.private.key is the default.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The full path of the public key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "message": "The full path of the public key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
//  END NON-TRANSLATABLE
            "translation": "The full path of the public key file. Mutually exclusive with -d. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Overwrite the existing files. It will skip the 'do you want to overwrite' prompt.",
            "message": "Overwrite the existing files. It will skip the 'do you want to overwrite' prompt.",
//  END NON-TRANSLATABLE
            "translation": "Overwrite the existing files. It will skip the 'do you want to overwrite' prompt.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The length of the key to create.",
            "message": "The length of the key to create.",
//  END NON-TRANSLATABLE
            "translation": "The length of the key to create.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "x509 certificate validity (Validity \u003e Not After) expressed in days from the day of generation.",
            "message": "x509 certificate validity (Validity \u003e Not After) expressed in days from the day of generation.",
//  END NON-TRANSLATABLE
            "translation": "x509 certificate validity (Validity \u003e Not After) expressed in days from the day of generation.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Automatically import the created public key into the local Horizon agent.",
            "message": "Automatically import the created public key into the local Horizon agent.",
//  END NON-TRANSLATABLE
            "translation": "Automatically import the created public key into the local Horizon agent.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Imports a signing public key into the Horizon agent.",
            "message": "Imports a signing public key into the Horizon agent.",
//  END NON-TRANSLATABLE
            "translation": "Imports a signing public key into the Horizon agent.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a pem public key file to be imported. The base name in the path is also used as the key name in the Horizon agent. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
            "message": "The path of a pem public key file to be imported. The base name in the path is also used as the key name in the Horizon agent. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
//  END NON-TRANSLATABLE
            "translation": "The path of a pem public key file to be imported. The base name in the path is also used as the key name in the Horizon agent. If not specified, the environment variable HZN_PUBLIC_KEY_FILE will be used. If none of them are set, ~/.hzn/keys/service.public.pem is the default.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove the specified signing key from this Horizon agent.",
            "message": "Remove the specified signing key from this Horizon agent.",
//  END NON-TRANSLATABLE
            "translation": "Remove the specified signing key from this Horizon agent.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of a specific key to remove.",
            "message": "The name of a specific key to remove.",
//  END NON-TRANSLATABLE
            "translation": "The name of a specific key to remove.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage general information about this Horizon edge node.",
            "message": "List and manage general information about this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "List and manage general information about this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display general information about this Horizon edge node.",
            "message": "Display general information about this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "Display general information about this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage policy for this Horizon edge node.",
            "message": "List and manage policy for this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "List and manage policy for this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display this edge node's policy.",
            "message": "Display this edge node's policy.",
//  END NON-TRANSLATABLE
            "translation": "Display this edge node's policy.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty policy template that can be filled in.",
            "message": "Display an empty policy template that can be filled in.",
//  END NON-TRANSLATABLE
            "translation": "Display an empty policy template that can be filled in.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update the node's policy. The node's built-in properties will be automatically added if the input policy does not contain them.",
            "message": "Update the node's policy. The node's built-in properties will be automatically added if the input policy does not contain them.",
//  END NON-TRANSLATABLE
            "translation": "Update the node's policy. The node's built-in properties will be automatically added if the input policy does not contain them.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The JSON input file name containing the node policy.",
            "message": "The JSON input file name containing the node policy.",
//  END NON-TRANSLATABLE
            "translation": "The JSON input file name containing the node policy.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add or update node policy properties or overwrite the node policy constraint expression.",
            "message": "Add or update node policy properties or overwrite the node policy constraint expression.",
//  END NON-TRANSLATABLE
            "translation": "Add or update node policy properties or overwrite the node policy constraint expression.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The new constraints or properties in the format '{Constraintsconstraint_list}' or '{Propertiesproperty_list}'.",
            "message": "The new constraints or properties in the format '{Constraintsconstraint_list}' or '{Propertiesproperty_list}'.",
//  END NON-TRANSLATABLE
            "translation": "The new constraints or properties in the format '{Constraintsconstraint_list}' or '{Propertiesproperty_list}'.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Constraintsconstraint_list",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "\"{\\\"constraints\\\":[\u003cconstraint list\u003e]}\""
                },
                {
                    "id": "Propertiesproperty_list",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "\"{\\\"properties\\\":[\u003cproperty list\u003e]}\""
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Remove the node's policy.",
            "message": "Remove the node's policy.",
//  END NON-TRANSLATABLE
            "translation": "Remove the node's policy.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the active or archived agreements this edge node has made with a Horizon agreement bot.",
            "message": "List or manage the active or archived agreements this edge node has made with a Horizon agreement bot.",
//  END NON-TRANSLATABLE
            "translation": "List or manage the active or archived agreements this edge node has made with a Horizon agreement bot.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the active or archived agreements this edge node has made with a Horizon agreement bot.",
            "message": "List the active or archived agreements this edge node has made with a Horizon agreement bot.",
//  END NON-TRANSLATABLE
            "translation": "List the active or archived agreements this edge node has made with a Horizon agreement bot.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show the details of this active or archived agreement.",
            "message": "Show the details of this active or archived agreement.",
//  END NON-TRANSLATABLE
            "translation": "Show the details of this active or archived agreement.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List archived agreements instead of the active agreements.",
            "message": "List archived agreements instead of the active agreements.",
//  END NON-TRANSLATABLE
            "translation": "List archived agreements instead of the active agreements.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Cancel 1 or all of the active agreements this edge node has made with a Horizon agreement bot. Usually an agbot will immediately negotiated a new agreement. If you want to cancel all agreements and not have this edge accept new agreements, run 'hzn unregister'.",
            "message": "Cancel 1 or all of the active agreements this edge node has made with a Horizon agreement bot. Usually an agbot will immediately negotiated a new agreement. If you want to cancel all agreements and not have this edge accept new agreements, run 'hzn unregister'.",
//  END NON-TRANSLATABLE
            "translation": "Cancel 1 or all of the active agreements this edge node has made with a Horizon agreement bot. Usually an agbot will immediately negotiated a new agreement. If you want to cancel all agreements and not have this edge accept new agreements, run 'hzn unregister'.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Cancel all of the current agreements.",
            "message": "Cancel all of the current agreements.",
//  END NON-TRANSLATABLE
            "translation": "Cancel all of the current agreements.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The active agreement to cancel.",
            "message": "The active agreement to cancel.",
//  END NON-TRANSLATABLE
            "translation": "The active agreement to cancel.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the metering (payment) information for the active or archived agreements.",
            "message": "List or manage the metering (payment) information for the active or archived agreements.",
//  END NON-TRANSLATABLE
            "translation": "List or manage the metering (payment) information for the active or archived agreements.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the metering (payment) information for the active or archived agreements.",
            "message": "List the metering (payment) information for the active or archived agreements.",
//  END NON-TRANSLATABLE
            "translation": "List the metering (payment) information for the active or archived agreements.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List archived agreement metering information instead of metering for the active agreements.",
            "message": "List archived agreement metering information instead of metering for the active agreements.",
//  END NON-TRANSLATABLE
            "translation": "List archived agreement metering information instead of metering for the active agreements.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the global attributes that are currently registered on this Horizon edge node.",
            "message": "List or manage the global attributes that are currently registered on this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "List or manage the global attributes that are currently registered on this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the global attributes that are currently registered on this Horizon edge node.",
            "message": "List the global attributes that are currently registered on this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "List the global attributes that are currently registered on this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the service user inputs that are currently registered on this Horizon edge node.",
            "message": "List or manage the service user inputs that are currently registered on this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "List or manage the service user inputs that are currently registered on this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the service user inputs currently registered on this Horizon edge node.",
            "message": "List the service user inputs currently registered on this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "List the service user inputs currently registered on this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty userinput template.",
            "message": "Display an empty userinput template.",
//  END NON-TRANSLATABLE
            "translation": "Display an empty userinput template.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Add a new user input object or overwrite the current user input object for this Horizon edge node.",
            "message": "Add a new user input object or overwrite the current user input object for this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "Add a new user input object or overwrite the current user input object for this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The file path to the json file with the user input object. Specify -f- to read from stdin.",
            "message": "The file path to the json file with the user input object. Specify -f- to read from stdin.",
//  END NON-TRANSLATABLE
            "translation": "The file path to the json file with the user input object. Specify -f- to read from stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Update an existing user input object for this Horizon edge node.",
            "message": "Update an existing user input object for this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "Update an existing user input object for this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The file path to the json file with the updated user input object. Specify -f- to read from stdin.",
            "message": "The file path to the json file with the updated user input object. Specify -f- to read from stdin.",
//  END NON-TRANSLATABLE
            "translation": "The file path to the json file with the updated user input object. Specify -f- to read from stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove the user inputs that are currently registered on this Horizon edge node.",
            "message": "Remove the user inputs that are currently registered on this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "Remove the user inputs that are currently registered on this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Skip the 'Are you sure?' prompt.",
            "message": "Skip the 'Are you sure?' prompt.",
//  END NON-TRANSLATABLE
            "translation": "Skip the 'Are you sure?' prompt.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the services that are currently registered on this Horizon edge node.",
            "message": "List or manage the services that are currently registered on this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "List or manage the services that are currently registered on this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the services variable configuration that has been done on this Horizon edge node.",
            "message": "List the services variable configuration that has been done on this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "List the services variable configuration that has been done on this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the services that are currently registered on this Horizon edge node.",
            "message": "List the services that are currently registered on this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "List the services that are currently registered on this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the configuration state for the services that are currently registered on this Horizon edge node.",
            "message": "List or manage the configuration state for the services that are currently registered on this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "List or manage the configuration state for the services that are currently registered on this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the configuration state for the services that are currently registered on this Horizon edge node.",
            "message": "List the configuration state for the services that are currently registered on this Horizon edge node.",
//  END NON-TRANSLATABLE
            "translation": "List the configuration state for the services that are currently registered on this Horizon edge node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Change the configuration state to 'suspend' for a service.",
            "message": "Change the configuration state to 'suspend' for a service.",
//  END NON-TRANSLATABLE
            "translation": "Change the configuration state to 'suspend' for a service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Change the configuration state to 'active' for a service.",
            "message": "Change the configuration state to 'active' for a service.",
//  END NON-TRANSLATABLE
            "translation": "Change the configuration state to 'active' for a service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Suspend all registerd services.",
            "message": "Suspend all registerd services.",
//  END NON-TRANSLATABLE
            "translation": "Suspend all registerd services.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the service that should be suspended.",
            "message": "The organization of the service that should be suspended.",
//  END NON-TRANSLATABLE
            "translation": "The organization of the service that should be suspended.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the service that should be suspended.",
            "message": "The name of the service that should be suspended.",
//  END NON-TRANSLATABLE
            "translation": "The name of the service that should be suspended.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Resume all registerd services.",
            "message": "Resume all registerd services.",
//  END NON-TRANSLATABLE
            "translation": "Resume all registerd services.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization of the service that should be resumed.",
            "message": "The organization of the service that should be resumed.",
//  END NON-TRANSLATABLE
            "translation": "The organization of the service that should be resumed.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the service that should be resumed.",
            "message": "The name of the service that should be resumed.",
//  END NON-TRANSLATABLE
            "translation": "The name of the service that should be resumed.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Unregister and reset this Horizon edge node so that it is ready to be registered again. Warning: this will stop all the Horizon services running on this edge node, and restart the Horizon agent.",
            "message": "Unregister and reset this Horizon edge node so that it is ready to be registered again. Warning: this will stop all the Horizon services running on this edge node, and restart the Horizon agent.",
//  END NON-TRANSLATABLE
            "translation": "Unregister and reset this Horizon edge node so that it is ready to be registered again. Warning: this will stop all the Horizon services running on this edge node, and restart the Horizon agent.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Also remove this node resource from the Horizon exchange (because you no longer want to use this node with Horizon).",
            "message": "Also remove this node resource from the Horizon exchange (because you no longer want to use this node with Horizon).",
//  END NON-TRANSLATABLE
            "translation": "Also remove this node resource from the Horizon exchange (because you no longer want to use this node with Horizon).",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Also remove all the previous registration information. Use it only after the 'hzn unregister' command failed. Please capture the logs by running 'hzn eventlog list -a -l' command before using this flag.",
            "message": "Also remove all the previous registration information. Use it only after the 'hzn unregister' command failed. Please capture the logs by running 'hzn eventlog list -a -l' command before using this flag.",
//  END NON-TRANSLATABLE
            "translation": "Also remove all the previous registration information. Use it only after the 'hzn unregister' command failed. Please capture the logs by running 'hzn eventlog list -a -l' command before using this flag.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The number of minutes to wait for unregistration to complete. The default is zero which will wait forever.",
            "message": "The number of minutes to wait for unregistration to complete. The default is zero which will wait forever.",
//  END NON-TRANSLATABLE
            "translation": "The number of minutes to wait for unregistration to complete. The default is zero which will wait forever.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the current horizon internal status for the node.",
            "message": "Display the current horizon internal status for the node.",
//  END NON-TRANSLATABLE
            "translation": "Display the current horizon internal status for the node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Show detailed status",
            "message": "Show detailed status",
//  END NON-TRANSLATABLE
            "translation": "Show detailed status",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the event logs for the current or all registrations.",
            "message": "List the event logs for the current or all registrations.",
//  END NON-TRANSLATABLE
            "translation": "List the event logs for the current or all registrations.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List all the event logs including the previous registrations.",
            "message": "List all the event logs including the previous registrations.",
//  END NON-TRANSLATABLE
            "translation": "List all the event logs including the previous registrations.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List event logs with details.",
            "message": "List event logs with details.",
//  END NON-TRANSLATABLE
            "translation": "List event logs with details.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Selection string. This flag can be repeated which means 'AND'. Each flag should be in the format of attribute=value, attribute~value, \"attribute\u003evalue\" or \"attribute\u003cvalue\", where '~' means contains. The common attribute names are timestamp, severity, message, event_code, source_type, agreement_id, service_url etc. Use the '-l' flag to see all the attribute names.",
            "message": "Selection string. This flag can be repeated which means 'AND'. Each flag should be in the format of attribute=value, attribute~value, \"attribute\u003evalue\" or \"attribute\u003cvalue\", where '~' means contains. The common attribute names are timestamp, severity, message, event_code, source_type, agreement_id, service_url etc. Use the '-l' flag to see all the attribute names.",
//  END NON-TRANSLATABLE
            "translation": "Selection string. This flag can be repeated which means 'AND'. Each flag should be in the format of attribute=value, attribute~value, \"attribute\u003evalue\" or \"attribute\u003cvalue\", where '~' means contains. The common attribute names are timestamp, severity, message, event_code, source_type, agreement_id, service_url etc. Use the '-l' flag to see all the attribute names.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Development tools for creation of services.",
            "message": "Development tools for creation of services.",
//  END NON-TRANSLATABLE
            "translation": "Development tools for creation of services.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Directory containing Horizon project metadata. If omitted, a subdirectory called 'horizon' under current directory will be used.",
            "message": "Directory containing Horizon project metadata. If omitted, a subdirectory called 'horizon' under current directory will be used.",
//  END NON-TRANSLATABLE
            "translation": "Directory containing Horizon project metadata. If omitted, a subdirectory called 'horizon' under current directory will be used.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "For working with a service project.",
            "message": "For working with a service project.",
//  END NON-TRANSLATABLE
            "translation": "For working with a service project.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Create a new service project.",
            "message": "Create a new service project.",
//  END NON-TRANSLATABLE
            "translation": "Create a new service project.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Org id that the service is defined within. If this flag is omitted, the HZN_ORG_ID environment variable is used.",
            "message": "The Org id that the service is defined within. If this flag is omitted, the HZN_ORG_ID environment variable is used.",
//  END NON-TRANSLATABLE
            "translation": "The Org id that the service is defined within. If this flag is omitted, the HZN_ORG_ID environment variable is used.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The name of the service. If this flag and the -i flag are omitted, only the skeletal horizon metadata files will be generated.",
            "message": "The name of the service. If this flag and the -i flag are omitted, only the skeletal horizon metadata files will be generated.",
//  END NON-TRANSLATABLE
            "translation": "The name of the service. If this flag and the -i flag are omitted, only the skeletal horizon metadata files will be generated.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The version of the service. If this flag is omitted, '0.0.1' is used.",
            "message": "The version of the service. If this flag is omitted, '0.0.1' is used.",
//  END NON-TRANSLATABLE
            "translation": "The version of the service. If this flag is omitted, '0.0.1' is used.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The docker container image base name without the version tag for the service. This command will add arch and version to the base name to form the final image name. The format is 'basename_arch:serviceversion'. This flag can be repeated to specify multiple images when '--noImageGen' flag is specified.",
            "message": "The docker container image base name without the version tag for the service. This command will add arch and version to the base name to form the final image name. The format is 'basename_arch:serviceversion'. This flag can be repeated to specify multiple images when '--noImageGen' flag is specified.",
//  END NON-TRANSLATABLE
            "translation": "The docker container image base name without the version tag for the service. This command will add arch and version to the base name to form the final image name. The format is 'basename_arch:serviceversion'. This flag can be repeated to specify multiple images when '--noImageGen' flag is specified.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Indicates that the image is built somewhere else. No image sample code will be created by this command. If this flag is not specified, files for generating a simple service image will be created under current directory.",
            "message": "Indicates that the image is built somewhere else. No image sample code will be created by this command. If this flag is not specified, files for generating a simple service image will be created under current directory.",
//  END NON-TRANSLATABLE
            "translation": "Indicates that the image is built somewhere else. No image sample code will be created by this command. If this flag is not specified, files for generating a simple service image will be created under current directory.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Indicates no pattern definition file will be created.",
            "message": "Indicates no pattern definition file will be created.",
//  END NON-TRANSLATABLE
            "translation": "Indicates no pattern definition file will be created.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Indicate no policy file will be created.",
            "message": "Indicate no policy file will be created.",
//  END NON-TRANSLATABLE
            "translation": "Indicate no policy file will be created.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Indicates the type of deployment that will be used, e.g. native (the default), or helm.",
            "message": "Indicates the type of deployment that will be used, e.g. native (the default), or helm.",
//  END NON-TRANSLATABLE
            "translation": "Indicates the type of deployment that will be used, e.g. native (the default), or helm.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Run a service in a mocked Horizon Agent environment.",
            "message": "Run a service in a mocked Horizon Agent environment.",
//  END NON-TRANSLATABLE
            "translation": "Run a service in a mocked Horizon Agent environment.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "File containing user input values for running a test. If omitted, the userinput file for the project will be used.",
            "message": "File containing user input values for running a test. If omitted, the userinput file for the project will be used.",
//  END NON-TRANSLATABLE
            "translation": "File containing user input values for running a test. If omitted, the userinput file for the project will be used.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "File to be made available through the sync service APIs. This flag can be repeated to populate multiple files.",
            "message": "File to be made available through the sync service APIs. This flag can be repeated to populate multiple files.",
//  END NON-TRANSLATABLE
            "translation": "File to be made available through the sync service APIs. This flag can be repeated to populate multiple files.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of file to be made available through the sync service APIs. All config files are presumed to be of the same type. This flag is required if any configFiles are specified.",
            "message": "The type of file to be made available through the sync service APIs. All config files are presumed to be of the same type. This flag is required if any configFiles are specified.",
//  END NON-TRANSLATABLE
            "translation": "The type of file to be made available through the sync service APIs. All config files are presumed to be of the same type. This flag is required if any configFiles are specified.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Do not bring up file sync service (FSS) containers. They are brought up by default.",
            "message": "Do not bring up file sync service (FSS) containers. They are brought up by default.",
//  END NON-TRANSLATABLE
            "translation": "Do not bring up file sync service (FSS) containers. They are brought up by default.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon Exchange user credentials to query exchange resources. Specify it when you want to automatically fetch the missing dependent services from the exchange. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "message": "Horizon Exchange user credentials to query exchange resources. Specify it when you want to automatically fetch the missing dependent services from the exchange. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
//  END NON-TRANSLATABLE
            "translation": "Horizon Exchange user credentials to query exchange resources. Specify it when you want to automatically fetch the missing dependent services from the exchange. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Stop a service that is running in a mocked Horizon Agent environment.",
            "message": "Stop a service that is running in a mocked Horizon Agent environment.",
//  END NON-TRANSLATABLE
            "translation": "Stop a service that is running in a mocked Horizon Agent environment.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Validate the project for completeness and schema compliance.",
            "message": "Validate the project for completeness and schema compliance.",
//  END NON-TRANSLATABLE
            "translation": "Validate the project for completeness and schema compliance.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "File containing user input values for verification of a project. If omitted, the userinput file for the project will be used.",
            "message": "File containing user input values for verification of a project. If omitted, the userinput file for the project will be used.",
//  END NON-TRANSLATABLE
            "translation": "File containing user input values for verification of a project. If omitted, the userinput file for the project will be used.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "For working with project dependencies.",
            "message": "For working with project dependencies.",
//  END NON-TRANSLATABLE
            "translation": "For working with project dependencies.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The URL of the service dependency in the exchange. Mutually exclusive with -p and --url.",
            "message": "The URL of the service dependency in the exchange. Mutually exclusive with -p and --url.",
//  END NON-TRANSLATABLE
            "translation": "The URL of the service dependency in the exchange. Mutually exclusive with -p and --url.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The URL of the service dependency in the exchange. Mutually exclusive with -p and --specRef.",
            "message": "The URL of the service dependency in the exchange. Mutually exclusive with -p and --specRef.",
//  END NON-TRANSLATABLE
            "translation": "The URL of the service dependency in the exchange. Mutually exclusive with -p and --specRef.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Org of the service dependency in the exchange. Mutually exclusive with -p.",
            "message": "The Org of the service dependency in the exchange. Mutually exclusive with -p.",
//  END NON-TRANSLATABLE
            "translation": "The Org of the service dependency in the exchange. Mutually exclusive with -p.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(optional) The Version of the service dependency in the exchange. Mutually exclusive with -p.",
            "message": "(optional) The Version of the service dependency in the exchange. Mutually exclusive with -p.",
//  END NON-TRANSLATABLE
            "translation": "(optional) The Version of the service dependency in the exchange. Mutually exclusive with -p.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "(optional) The hardware Architecture of the service dependency in the exchange. Mutually exclusive with -p.",
            "message": "(optional) The hardware Architecture of the service dependency in the exchange. Mutually exclusive with -p.",
//  END NON-TRANSLATABLE
            "translation": "(optional) The hardware Architecture of the service dependency in the exchange. Mutually exclusive with -p.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Retrieving Horizon metadata for a new dependency.",
            "message": "Retrieving Horizon metadata for a new dependency.",
//  END NON-TRANSLATABLE
            "translation": "Retrieving Horizon metadata for a new dependency.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon project containing the definition of a dependency. Mutually exclusive with -s -o --ver -a and --url.",
            "message": "Horizon project containing the definition of a dependency. Mutually exclusive with -s -o --ver -a and --url.",
//  END NON-TRANSLATABLE
            "translation": "Horizon project containing the definition of a dependency. Mutually exclusive with -s -o --ver -a and --url.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon Exchange user credentials to query exchange resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
            "message": "Horizon Exchange user credentials to query exchange resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
//  END NON-TRANSLATABLE
            "translation": "Horizon Exchange user credentials to query exchange resources. The default is HZN_EXCHANGE_USER_AUTH environment variable. If you don't prepend it with the user's org, it will automatically be prepended with the value of the HZN_ORG_ID environment variable.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "File containing user input values for configuring the new dependency. If omitted, the userinput file in the dependency project will be used.",
            "message": "File containing user input values for configuring the new dependency. If omitted, the userinput file in the dependency project will be used.",
//  END NON-TRANSLATABLE
            "translation": "File containing user input values for configuring the new dependency. If omitted, the userinput file in the dependency project will be used.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List all dependencies.",
            "message": "List all dependencies.",
//  END NON-TRANSLATABLE
            "translation": "List all dependencies.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Remove a project dependency.",
            "message": "Remove a project dependency.",
//  END NON-TRANSLATABLE
            "translation": "Remove a project dependency.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage Horizon agreement bot resources.",
            "message": "List and manage Horizon agreement bot resources.",
//  END NON-TRANSLATABLE
            "translation": "List and manage Horizon agreement bot resources.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display general information about this Horizon agbot node.",
            "message": "Display general information about this Horizon agbot node.",
//  END NON-TRANSLATABLE
            "translation": "Display general information about this Horizon agbot node.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List or manage the active or archived agreements this Horizon agreement bot has with edge nodes.",
            "message": "List or manage the active or archived agreements this Horizon agreement bot has with edge nodes.",
//  END NON-TRANSLATABLE
            "translation": "List or manage the active or archived agreements this Horizon agreement bot has with edge nodes.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the active or archived agreements this Horizon agreement bot has with edge nodes.",
            "message": "List the active or archived agreements this Horizon agreement bot has with edge nodes.",
//  END NON-TRANSLATABLE
            "translation": "List the active or archived agreements this Horizon agreement bot has with edge nodes.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List just this one agreement.",
            "message": "List just this one agreement.",
//  END NON-TRANSLATABLE
            "translation": "List just this one agreement.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Cancel 1 or all of the active agreements this Horizon agreement bot has with edge nodes. Usually an agbot will immediately negotiated a new agreement.",
            "message": "Cancel 1 or all of the active agreements this Horizon agreement bot has with edge nodes. Usually an agbot will immediately negotiated a new agreement.",
//  END NON-TRANSLATABLE
            "translation": "Cancel 1 or all of the active agreements this Horizon agreement bot has with edge nodes. Usually an agbot will immediately negotiated a new agreement.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List the policies this Horizon agreement bot hosts.",
            "message": "List the policies this Horizon agreement bot hosts.",
//  END NON-TRANSLATABLE
            "translation": "List the policies this Horizon agreement bot hosts.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List policies this Horizon agreement bot hosts.",
            "message": "List policies this Horizon agreement bot hosts.",
//  END NON-TRANSLATABLE
            "translation": "List policies this Horizon agreement bot hosts.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The organization the policy belongs to.",
            "message": "The organization the policy belongs to.",
//  END NON-TRANSLATABLE
            "translation": "The organization the policy belongs to.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The policy name.",
            "message": "The policy name.",
//  END NON-TRANSLATABLE
            "translation": "The policy name.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the current horizon internal status for the Horizon agreement bot.",
            "message": "Display the current horizon internal status for the Horizon agreement bot.",
//  END NON-TRANSLATABLE
            "translation": "Display the current horizon internal status for the Horizon agreement bot.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Utility commands.",
            "message": "Utility commands.",
//  END NON-TRANSLATABLE
            "translation": "Utility commands.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Sign the text in stdin. The signature is sent to stdout.",
            "message": "Sign the text in stdin. The signature is sent to stdout.",
//  END NON-TRANSLATABLE
            "translation": "Sign the text in stdin. The signature is sent to stdout.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a private key file to be used to sign the stdin.",
            "message": "The path of a private key file to be used to sign the stdin.",
//  END NON-TRANSLATABLE
            "translation": "The path of a private key file to be used to sign the stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Verify that the signature specified via -s is a valid signature for the text in stdin.",
            "message": "Verify that the signature specified via -s is a valid signature for the text in stdin.",
//  END NON-TRANSLATABLE
            "translation": "Verify that the signature specified via -s is a valid signature for the text in stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of public key file (that corresponds to the private key that was used to sign) to verify the signature of stdin.",
            "message": "The path of public key file (that corresponds to the private key that was used to sign) to verify the signature of stdin.",
//  END NON-TRANSLATABLE
            "translation": "The path of public key file (that corresponds to the private key that was used to sign) to verify the signature of stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The supposed signature of stdin.",
            "message": "The supposed signature of stdin.",
//  END NON-TRANSLATABLE
            "translation": "The supposed signature of stdin.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Convert the configuration file from JSON format to a shell script.",
            "message": "Convert the configuration file from JSON format to a shell script.",
//  END NON-TRANSLATABLE
            "translation": "Convert the configuration file from JSON format to a shell script.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The path of a configuration file to be converted.",
            "message": "The path of a configuration file to be converted.",
//  END NON-TRANSLATABLE
            "translation": "The path of a configuration file to be converted.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage Horizon Model Management Service resources.",
            "message": "List and manage Horizon Model Management Service resources.",
//  END NON-TRANSLATABLE
            "translation": "List and manage Horizon Model Management Service resources.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The Horizon organization ID. If not specified, HZN_ORG_ID will be used as a default.",
            "message": "The Horizon organization ID. If not specified, HZN_ORG_ID will be used as a default.",
//  END NON-TRANSLATABLE
            "translation": "The Horizon organization ID. If not specified, HZN_ORG_ID will be used as a default.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Horizon user credentials to query and create Model Management Service resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
            "message": "Horizon user credentials to query and create Model Management Service resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
//  END NON-TRANSLATABLE
            "translation": "Horizon user credentials to query and create Model Management Service resources. If not specified, HZN_EXCHANGE_USER_AUTH will be used as a default. If you don't prepend it with the user's org, it will automatically be prepended with the -o value.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display the status of the Horizon Model Management Service.",
            "message": "Display the status of the Horizon Model Management Service.",
//  END NON-TRANSLATABLE
            "translation": "Display the status of the Horizon Model Management Service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List and manage objects in the Horizon Model Management Service.",
            "message": "List and manage objects in the Horizon Model Management Service.",
//  END NON-TRANSLATABLE
            "translation": "List and manage objects in the Horizon Model Management Service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "List objects in the Horizon Model Management Service.",
            "message": "List objects in the Horizon Model Management Service.",
//  END NON-TRANSLATABLE
            "translation": "List objects in the Horizon Model Management Service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of the object to list.",
            "message": "The type of the object to list.",
//  END NON-TRANSLATABLE
            "translation": "The type of the object to list.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The id of the object to list. This flag is optional. Omit this flag to list all objects of a given object type.",
            "message": "The id of the object to list. This flag is optional. Omit this flag to list all objects of a given object type.",
//  END NON-TRANSLATABLE
            "translation": "The id of the object to list. This flag is optional. Omit this flag to list all objects of a given object type.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Provides additional detail about the deployment of the object on edge nodes. This flag is only used when --id is specified.",
            "message": "Provides additional detail about the deployment of the object on edge nodes. This flag is only used when --id is specified.",
//  END NON-TRANSLATABLE
            "translation": "Provides additional detail about the deployment of the object on edge nodes. This flag is only used when --id is specified.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Display an empty object metadata template that can be filled in and passed as the -m option on the 'hzn mms object publish' command.",
            "message": "Display an empty object metadata template that can be filled in and passed as the -m option on the 'hzn mms object publish' command.",
//  END NON-TRANSLATABLE
            "translation": "Display an empty object metadata template that can be filled in and passed as the -m option on the 'hzn mms object publish' command.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Publish an object in the Horizon Model Management Service, making it available for services deployed on nodes.",
            "message": "Publish an object in the Horizon Model Management Service, making it available for services deployed on nodes.",
//  END NON-TRANSLATABLE
            "translation": "Publish an object in the Horizon Model Management Service, making it available for services deployed on nodes.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of the object to publish. This flag must be used with -i. It is mutually exclusive with -m",
            "message": "The type of the object to publish. This flag must be used with -i. It is mutually exclusive with -m",
//  END NON-TRANSLATABLE
            "translation": "The type of the object to publish. This flag must be used with -i. It is mutually exclusive with -m",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The id of the object to publish. This flag must be used with -t. It is mutually exclusive with -m",
            "message": "The id of the object to publish. This flag must be used with -t. It is mutually exclusive with -m",
//  END NON-TRANSLATABLE
            "translation": "The id of the object to publish. This flag must be used with -t. It is mutually exclusive with -m",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "If you want the object to be deployed on nodes using a given pattern, specify it using this flag. This flag is optional and can only be used with --type and --id. It is mutually exclusive with -m",
            "message": "If you want the object to be deployed on nodes using a given pattern, specify it using this flag. This flag is optional and can only be used with --type and --id. It is mutually exclusive with -m",
//  END NON-TRANSLATABLE
            "translation": "If you want the object to be deployed on nodes using a given pattern, specify it using this flag. This flag is optional and can only be used with --type and --id. It is mutually exclusive with -m",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The definition of the object to publish. A blank template can be obtained from the 'hzn mss object new' command.",
            "message": "The definition of the object to publish. A blank template can be obtained from the 'hzn mss object new' command.",
//  END NON-TRANSLATABLE
            "translation": "The definition of the object to publish. A blank template can be obtained from the 'hzn mss object new' command.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The object (in the form of a file) to publish. This flag is optional so that you can update only the object's definition.",
            "message": "The object (in the form of a file) to publish. This flag is optional so that you can update only the object's definition.",
//  END NON-TRANSLATABLE
            "translation": "The object (in the form of a file) to publish. This flag is optional so that you can update only the object's definition.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The type of the object to delete.",
            "message": "The type of the object to delete.",
//  END NON-TRANSLATABLE
            "translation": "The type of the object to delete.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The id of the object to delete.",
            "message": "The id of the object to delete.",
//  END NON-TRANSLATABLE
            "translation": "The id of the object to delete.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "organization ID must be specified with either the -o flag or HZN_ORG_ID",
            "message": "organization ID must be specified with either the -o flag or HZN_ORG_ID",
//  END NON-TRANSLATABLE
            "translation": "organization ID must be specified with either the -o flag or HZN_ORG_ID",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "exchange user authentication must be specified with either the -u flag or HZN_EXCHANGE_USER_AUTH",
            "message": "exchange user authentication must be specified with either the -u flag or HZN_EXCHANGE_USER_AUTH",
//  END NON-TRANSLATABLE
            "translation": "exchange user authentication must be specified with either the -u flag or HZN_EXCHANGE_USER_AUTH",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Version_Expression: Whitespace is not permitted in {Expr}.",
            "message": "Version_Expression: Whitespace is not permitted in {Expr}.",
//  END NON-TRANSLATABLE
            "translation": "Version_Expression: Whitespace is not permitted in {Expr}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Expr",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "expr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: {Verstring} is not a valid version string.",
            "message": "Version_Expression: {Verstring} is not a valid version string.",
//  END NON-TRANSLATABLE
            "translation": "Version_Expression: {Verstring} is not a valid version string.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver_string"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
            "message": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
//  END NON-TRANSLATABLE
            "translation": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver_string"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
            "message": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
//  END NON-TRANSLATABLE
            "translation": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver_string"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
            "message": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
//  END NON-TRANSLATABLE
            "translation": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Expr",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "expr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input version string {V1} or {V2} is not a valid single version string.",
            "message": "Input version string {V1} or {V2} is not a valid single version string.",
//  END NON-TRANSLATABLE
            "translation": "Input version string {V1} or {V2} is not a valid single version string.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "V1",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "v1"
                },
                {
                    "id": "V2",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "v2"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to marshal userinput object: {Err}",
            "message": "Unable to marshal userinput object: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Unable to marshal userinput object: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "A list of objects, each one containing the user inputs required for a specified service.",
            "message": "A list of objects, each one containing the user inputs required for a specified service.",
//  END NON-TRANSLATABLE
            "translation": "A list of objects, each one containing the user inputs required for a specified service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The horizon org of the specified service.",
            "message": "The horizon org of the specified service.",
//  END NON-TRANSLATABLE
            "translation": "The horizon org of the specified service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The unique string used to identify the specified service.",
            "message": "The unique string used to identify the specified service.",
//  END NON-TRANSLATABLE
            "translation": "The unique string used to identify the specified service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service architecture that these inputs apply to. Omit or leave blank to mean all architectures.",
            "message": "The service architecture that these inputs apply to. Omit or leave blank to mean all architectures.",
//  END NON-TRANSLATABLE
            "translation": "The service architecture that these inputs apply to. Omit or leave blank to mean all architectures.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The service versions that these inputs apply to. Omit or specify \"[0.0.0,INFINITY)\" to mean all versions.",
            "message": "The service versions that these inputs apply to. Omit or specify \"[0.0.0,INFINITY)\" to mean all versions.",
//  END NON-TRANSLATABLE
            "translation": "The service versions that these inputs apply to. Omit or specify \"[0.0.0,INFINITY)\" to mean all versions.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "A list of objects with the names and values for the user inputs used by this service.",
            "message": "A list of objects with the names and values for the user inputs used by this service.",
//  END NON-TRANSLATABLE
            "translation": "A list of objects with the names and values for the user inputs used by this service.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error unmarshaling userInput json file: {Err}",
            "message": "Error unmarshaling userInput json file: {Err}",
//  END NON-TRANSLATABLE
            "translation": "Error unmarshaling userInput json file: {Err}",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Are you sure you want to remove the node user inputs?",
            "message": "Are you sure you want to remove the node user inputs?",
//  END NON-TRANSLATABLE
            "translation": "Are you sure you want to remove the node user inputs?",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Name, or Org is empty string.",
            "message": "Name, or Org is empty string.",
//  END NON-TRANSLATABLE
            "translation": "Name, or Org is empty string.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The serviceVersions array is empty.",
            "message": "The serviceVersions array is empty.",
//  END NON-TRANSLATABLE
            "translation": "The serviceVersions array is empty.",
//  START NON-TRANSLATABLE
            "translatorComment": "Copied from source.",
            "fuzzy": true
        }
    ]
//  END NON-TRANSLATABLE
}