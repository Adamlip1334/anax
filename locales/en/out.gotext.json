{
    "language": "en",
    "messages": [
        {
            "id": [
                "EL_AG_UNABLE_READ_POL_FILE",
                "Unable to read policy file {Arg_1} for service {Arg_2}, error: {Arg_3}"
            ],
            "message": "Unable to read policy file {Arg_1} for service {Arg_2}, error: {Arg_3}",
            "translation": "Unable to read policy file {Arg_1} for service {Arg_2}, error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_START_ADVERTISE_POL",
                "Start policy advertising with the exchange for service {Arg_1}/{Arg_2}."
            ],
            "message": "Start policy advertising with the exchange for service {Arg_1}/{Arg_2}.",
            "translation": "Start policy advertising with the exchange for service {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_ADVERTISE_POL",
                "Unable to advertise policies with exchange for service {Arg_1}/{Arg_2}, error: {Arg_3}"
            ],
            "message": "Unable to advertise policies with exchange for service {Arg_1}/{Arg_2}, error: {Arg_3}",
            "translation": "Unable to advertise policies with exchange for service {Arg_1}/{Arg_2}, error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_COMPLETE_ADVERTISE_POL",
                "Complete policy advertising with the exchange for service {Arg_1}/{Arg_2}."
            ],
            "message": "Complete policy advertising with the exchange for service {Arg_1}/{Arg_2}.",
            "translation": "Complete policy advertising with the exchange for service {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_NODE_HB_FAILED",
                "Node heartbeat failed for node {Arg_1}/{Arg_2}. Error: {Arg_3}"
            ],
            "message": "Node heartbeat failed for node {Arg_1}/{Arg_2}. Error: {Arg_3}",
            "translation": "Node heartbeat failed for node {Arg_1}/{Arg_2}. Error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_NODE_HB_RESTORED",
                "Node heartbeat restored for node {Arg_1}/{Arg_2}."
            ],
            "message": "Node heartbeat restored for node {Arg_1}/{Arg_2}.",
            "translation": "Node heartbeat restored for node {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_READ_NODE_POL_FROM_DB",
                "unable to read node policy from the local database. {Arg_1}"
            ],
            "message": "unable to read node policy from the local database. {Arg_1}",
            "translation": "unable to read node policy from the local database. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_READ_NODE_FROM_DB",
                "Unable to read node object from the local database. {Arg_1}"
            ],
            "message": "Unable to read node object from the local database. {Arg_1}",
            "translation": "Unable to read node object from the local database. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_SYNC_NODE_POL_WITH_EXCH",
                "Unable to sync the local node policy with the exchange copy. Error: {Arg_1}"
            ],
            "message": "Unable to sync the local node policy with the exchange copy. Error: {Arg_1}",
            "translation": "Unable to sync the local node policy with the exchange copy. Error: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_NODE_POL_SYNCED_WITH_EXCH",
                "Node policy updated with the exchange copy: {Arg_1}"
            ],
            "message": "Node policy updated with the exchange copy: {Arg_1}",
            "translation": "Node policy updated with the exchange copy: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_SYNC_NODE_UI_WITH_EXCH",
                "Unable to sync the local node user input with the exchange copy. Error: {Arg_1}"
            ],
            "message": "Unable to sync the local node user input with the exchange copy. Error: {Arg_1}",
            "translation": "Unable to sync the local node user input with the exchange copy. Error: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_NODE_UI_SYNCED_WITH_EXCH",
                "Node user input updated with the exchange copy. The changed user inputs are: {Arg_1}"
            ],
            "message": "Node user input updated with the exchange copy. The changed user inputs are: {Arg_1}",
            "translation": "Node user input updated with the exchange copy. The changed user inputs are: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_NODE_CANNOT_VERIFY_AG",
                "Node could not verify the agreement {Arg_1} with the consumer. Will cancel it"
            ],
            "message": "Node could not verify the agreement {Arg_1} with the consumer. Will cancel it",
            "translation": "Node could not verify the agreement {Arg_1} with the consumer. Will cancel it",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_NODE_IS_OFFLINE",
                "Node is offline. Logging of periodic offline error messages will be curtailed until connection is restored"
            ],
            "message": "Node is offline. Logging of periodic offline error messages will be curtailed until connection is restored",
            "translation": "Node is offline. Logging of periodic offline error messages will be curtailed until connection is restored",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_CAP_FOR_WL",
                "Deployment config {Arg_1} contains unsupported capability for a workload"
            ],
            "message": "Deployment config {Arg_1} contains unsupported capability for a workload",
            "translation": "Deployment config {Arg_1} contains unsupported capability for a workload",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_CAP_FOR_CONT",
                "Deployment config {Arg_1} contains unsupported capability for infrastructure container."
            ],
            "message": "Deployment config {Arg_1} contains unsupported capability for infrastructure container.",
            "translation": "Deployment config {Arg_1} contains unsupported capability for infrastructure container.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_BIND",
                "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}"
            ],
            "message": "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}",
            "translation": "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_BIND_FOR",
                "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}"
            ],
            "message": "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}",
            "translation": "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_ERROR_UNMARSHAL_DEPLOY",
                "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}",
            "translation": "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_ERROR_UNMARSHAL_DEPLOY_OVERRIDE",
                "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}"
            ],
            "message": "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}",
            "translation": "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_START_CONTAINER_ERROR",
                "Error starting containers: {Arg_1}"
            ],
            "message": "Error starting containers: {Arg_1}",
            "translation": "Error starting containers: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_START_CONTAINER_ERROR_FOR_AG",
                "Error starting containers for agreement {Arg_1}: {Arg_2}"
            ],
            "message": "Error starting containers for agreement {Arg_1}: {Arg_2}",
            "translation": "Error starting containers for agreement {Arg_1}: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_RESTART_CONTAINER_ERROR_FOR_AG",
                "Error restarting containers for agreements {Arg_1}: {Arg_2}"
            ],
            "message": "Error restarting containers for agreements {Arg_1}: {Arg_2}",
            "translation": "Error restarting containers for agreements {Arg_1}: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_CLEAN_OLD_CONTAINER_ERROR",
                "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}"
            ],
            "message": "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}",
            "translation": "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_FAIL_GET_PAENT_CONT_FOR_SVC",
                "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}"
            ],
            "message": "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}",
            "translation": "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_FAIL_RESTORE_NW_WITH_PARENT",
                "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}"
            ],
            "message": "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}",
            "translation": "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_PROD_AG_EXISTS_IGNORE_PROPOSAL",
                "Agreement {Arg_1} already exists, ignoring proposal: {Arg_2}"
            ],
            "message": "Agreement {Arg_1} already exists, ignoring proposal: {Arg_2}",
            "translation": "Agreement {Arg_1} already exists, ignoring proposal: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_PROD_ERR_DEMARSH_TC_FOR_AG",
                "received error demarshalling TsAndCs for agrement {Arg_1}, {Arg_2}"
            ],
            "message": "received error demarshalling TsAndCs for agrement {Arg_1}, {Arg_2}",
            "translation": "received error demarshalling TsAndCs for agrement {Arg_1}, {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_PROD_NODE_REJECTED_PROPOSAL_MSG",
                "Node received Proposal message using agreement {Arg_1} for service {Arg_2}/{Arg_3} from the agbot {Arg_4}."
            ],
            "message": "Node received Proposal message using agreement {Arg_1} for service {Arg_2}/{Arg_3} from the agbot {Arg_4}.",
            "translation": "Node received Proposal message using agreement {Arg_1} for service {Arg_2}/{Arg_3} from the agbot {Arg_4}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_PROD_NODE_REJECTED_PROPOSAL",
                "Node rejected the proposal for service {Arg_1}/{Arg_2}."
            ],
            "message": "Node rejected the proposal for service {Arg_1}/{Arg_2}.",
            "translation": "Node rejected the proposal for service {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_PROD_ERR_HANDLE_PROPOSAL",
                "Error handling proposal for service {Arg_1}/{Arg_2}. Error: {Arg_3}"
            ],
            "message": "Error handling proposal for service {Arg_1}/{Arg_2}. Error: {Arg_3}",
            "translation": "Error handling proposal for service {Arg_1}/{Arg_2}. Error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Name, or Org is empty string.",
            "message": "Name, or Org is empty string.",
            "translation": "Name, or Org is empty string.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The serviceVersions array is empty.",
            "message": "The serviceVersions array is empty.",
            "translation": "The serviceVersions array is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "properties contains an invalid property: {Err}",
            "message": "properties contains an invalid property: {Err}",
            "translation": "properties contains an invalid property: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_AG_FROM_DB",
                "Error retrieving agreement {Arg_1} from database, error {Arg_2}"
            ],
            "message": "Error retrieving agreement {Arg_1} from database, error {Arg_2}",
            "translation": "Error retrieving agreement {Arg_1} from database, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_AG_FROM_DB_FOR_MNM",
                "Unable to retrieve agreement {Arg_1} from database for MeteringNotification message, error {Arg_2}"
            ],
            "message": "Unable to retrieve agreement {Arg_1} from database for MeteringNotification message, error {Arg_2}",
            "translation": "Unable to retrieve agreement {Arg_1} from database for MeteringNotification message, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_AG_FROM_DB_FOR_CANM",
                "Unable to retrieve agreement {Arg_1} from database for Cancel message, error {Arg_2}"
            ],
            "message": "Unable to retrieve agreement {Arg_1} from database for Cancel message, error {Arg_2}",
            "translation": "Unable to retrieve agreement {Arg_1} from database for Cancel message, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_AG_FROM_DB_FOR_RAM",
                "Unable to retrieve agreement {Arg_1} from database for ReplyAck message, error {Arg_2}"
            ],
            "message": "Unable to retrieve agreement {Arg_1} from database for ReplyAck message, error {Arg_2}",
            "translation": "Unable to retrieve agreement {Arg_1} from database for ReplyAck message, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_AG_FROM_DB_FOR_DRM",
                "Unable to retrieve agreement {Arg_1} from database for DataReceived message, error {Arg_2}"
            ],
            "message": "Unable to retrieve agreement {Arg_1} from database for DataReceived message, error {Arg_2}",
            "translation": "Unable to retrieve agreement {Arg_1} from database for DataReceived message, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_UNARCHIVED_AG_FROM_DB",
                "Unable to retrieve unarchived agreements from database. {Arg_1}"
            ],
            "message": "Unable to retrieve unarchived agreements from database. {Arg_1}",
            "translation": "Unable to retrieve unarchived agreements from database. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_MARK_AG_TERMINATED_IN_DB",
                "Error marking agreement {Arg_1} terminated in database: {Arg_2}."
            ],
            "message": "Error marking agreement {Arg_1} terminated in database: {Arg_2}.",
            "translation": "Error marking agreement {Arg_1} terminated in database: {Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_SDEFS_FROM_DB",
                "Error getting service definitions {Arg_1} from db. {Arg_2}"
            ],
            "message": "Error getting service definitions {Arg_1} from db. {Arg_2}",
            "translation": "Error getting service definitions {Arg_1} from db. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_SINSTS_VER_FROM_DB",
                "Error retrieving all service instances from datavase for {Arg_1}/{Arg_2} version {Arg_3} key {Arg_4}. {Arg_5}"
            ],
            "message": "Error retrieving all service instances from datavase for {Arg_1}/{Arg_2} version {Arg_3} key {Arg_4}. {Arg_5}",
            "translation": "Error retrieving all service instances from datavase for {Arg_1}/{Arg_2} version {Arg_3} key {Arg_4}. {Arg_5}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                },
                {
                    "id": "Arg_5",
                    "string": "%[5]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 5
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_SINSTS_FOR_FROM_DB",
                "Error retrieving all service instances from database for {Arg_1}. {Arg_2}"
            ],
            "message": "Error retrieving all service instances from database for {Arg_1}. {Arg_2}",
            "translation": "Error retrieving all service instances from database for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_SINSTS_FROM_DB",
                "Error retrieving all service instances from database, error: {Arg_1}"
            ],
            "message": "Error retrieving all service instances from database, error: {Arg_1}",
            "translation": "Error retrieving all service instances from database, error: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_SINST_FROM_DB",
                "Error getting service instance {Arg_1} from db. {Arg_2}"
            ],
            "message": "Error getting service instance {Arg_1} from db. {Arg_2}",
            "translation": "Error getting service instance {Arg_1} from db. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_MATCH_AGS_FROM_DB",
                "Error retrieving matching agreements from database for workloads {Arg_1}. Error: {Arg_2}"
            ],
            "message": "Error retrieving matching agreements from database for workloads {Arg_1}. Error: {Arg_2}",
            "translation": "Error retrieving matching agreements from database for workloads {Arg_1}. Error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_SVC_CONFIGSTATE_FROM_EXCH",
                "Unable to retrieve the service configuration state for node resource {Arg_1} from the exchange, error {Arg_2}"
            ],
            "message": "Unable to retrieve the service configuration state for node resource {Arg_1} from the exchange, error {Arg_2}",
            "translation": "Unable to retrieve the service configuration state for node resource {Arg_1} from the exchange, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_NODE_FROM_EXCH",
                "Error retrieving node {Arg_1} from the exchange: {Arg_2}"
            ],
            "message": "Error retrieving node {Arg_1} from the exchange: {Arg_2}",
            "translation": "Error retrieving node {Arg_1} from the exchange: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_UPDATE_REGSVCS_IN_EXCH",
                "Error updating registeredServices for node {Arg_1} in the exchange: {Arg_2}"
            ],
            "message": "Error updating registeredServices for node {Arg_1} in the exchange: {Arg_2}",
            "translation": "Error updating registeredServices for node {Arg_1} in the exchange: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_IMAGE_LOADED",
                "Image loaded for {Arg_1}/{Arg_2}."
            ],
            "message": "Image loaded for {Arg_1}/{Arg_2}.",
            "translation": "Image loaded for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_IMAGE_LOADED_FOR_SVC",
                "Image loaded for service {Arg_1}/{Arg_2}."
            ],
            "message": "Image loaded for service {Arg_1}/{Arg_2}.",
            "translation": "Image loaded for service {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_LOADING_IMG",
                "Error loading image for {Arg_1}/{Arg_2}."
            ],
            "message": "Error loading image for {Arg_1}/{Arg_2}.",
            "translation": "Error loading image for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_LOADING_IMG_FOR_SVC",
                "Error loading image for service {Arg_1}/{Arg_2}."
            ],
            "message": "Error loading image for service {Arg_1}/{Arg_2}.",
            "translation": "Error loading image for service {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_TERM_AG_WITH_REASON",
                "Start terminating agreement for {Arg_1}. Termination reason: {Arg_2}"
            ],
            "message": "Start terminating agreement for {Arg_1}. Termination reason: {Arg_2}",
            "translation": "Start terminating agreement for {Arg_1}. Termination reason: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_AG_REACHED",
                "Agreement reached for service {Arg_1}. The agreement id is {Arg_2}."
            ],
            "message": "Agreement reached for service {Arg_1}. The agreement id is {Arg_2}.",
            "translation": "Agreement reached for service {Arg_1}. The agreement id is {Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_AG_NOT_VALID",
                "Agreement for {Arg_1} no longer valid on the agbot. Node will cancel it."
            ],
            "message": "Agreement for {Arg_1} no longer valid on the agbot. Node will cancel it.",
            "translation": "Agreement for {Arg_1} no longer valid on the agbot. Node will cancel it.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_WL_CONTAINER_UP",
                "Workload service containers for {Arg_1}/{Arg_2} are up and running."
            ],
            "message": "Workload service containers for {Arg_1}/{Arg_2} are up and running.",
            "translation": "Workload service containers for {Arg_1}/{Arg_2} are up and running.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_COMPLETE_TERM_AG_WITH_REASON",
                "Complete terminating agreement for {Arg_1}. Termination reason: {Arg_2}"
            ],
            "message": "Complete terminating agreement for {Arg_1}. Termination reason: {Arg_2}",
            "translation": "Complete terminating agreement for {Arg_1}. Termination reason: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_DEL_AG_IN_EXCH",
                "Error deleting agreement for {Arg_1} in exchange: {Arg_2}. Will retry."
            ],
            "message": "Error deleting agreement for {Arg_1} in exchange: {Arg_2}. Will retry.",
            "translation": "Error deleting agreement for {Arg_1} in exchange: {Arg_2}. Will retry.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_AG_VERIFICATION",
                "Encountered error for AgreementVerification for {Arg_1} with agbot, error {Arg_2}"
            ],
            "message": "Encountered error for AgreementVerification for {Arg_1} with agbot, error {Arg_2}",
            "translation": "Encountered error for AgreementVerification for {Arg_1} with agbot, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_REPLYACK_WILL_CANCEL_AG",
                "ReplyAck indicated that the agbot did not want to pursue the agreement for {Arg_1}. Node will cancel the agreement"
            ],
            "message": "ReplyAck indicated that the agbot did not want to pursue the agreement for {Arg_1}. Node will cancel the agreement",
            "translation": "ReplyAck indicated that the agbot did not want to pursue the agreement for {Arg_1}. Node will cancel the agreement",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_NODE_RECEIVED_CANCEL_MSG",
                "Node received Cancel message for {Arg_1}/{Arg_2} from agbot {Arg_3}."
            ],
            "message": "Node received Cancel message for {Arg_1}/{Arg_2} from agbot {Arg_3}.",
            "translation": "Node received Cancel message for {Arg_1}/{Arg_2} from agbot {Arg_3}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_REPLYACK_MSG_FOR_AG",
                "Error handling ReplyAck message for {Arg_1}. {Arg_2}"
            ],
            "message": "Error handling ReplyAck message for {Arg_1}. {Arg_2}",
            "translation": "Error handling ReplyAck message for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_REPLYACK_MSG",
                "Error handling ReplyAck message. {Arg_1}"
            ],
            "message": "Error handling ReplyAck message. {Arg_1}",
            "translation": "Error handling ReplyAck message. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_DATARECEIVED_MSG_FOR_AG",
                "Error handling DataReceived message for {Arg_1}. {Arg_2}"
            ],
            "message": "Error handling DataReceived message for {Arg_1}. {Arg_2}",
            "translation": "Error handling DataReceived message for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_DATARECEIVED_MSG",
                "Error handling DataReceived message. {Arg_1}"
            ],
            "message": "Error handling DataReceived message. {Arg_1}",
            "translation": "Error handling DataReceived message. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_METERING_MSG_FOR_AG",
                "Error handling MeterNotification message for {Arg_1}. {Arg_2}"
            ],
            "message": "Error handling MeterNotification message for {Arg_1}. {Arg_2}",
            "translation": "Error handling MeterNotification message for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_METERING_MSG",
                "Error handling MeterNotification message. {Arg_1}"
            ],
            "message": "Error handling MeterNotification message. {Arg_1}",
            "translation": "Error handling MeterNotification message. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_CANCEL_MSG_FOR_AG",
                "Error handling Cancel message for {Arg_1}. {Arg_2}"
            ],
            "message": "Error handling Cancel message for {Arg_1}. {Arg_2}",
            "translation": "Error handling Cancel message for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_CANCEL_MSG",
                "Error handling Cancel message. {Arg_1}"
            ],
            "message": "Error handling Cancel message. {Arg_1}",
            "translation": "Error handling Cancel message. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_WORKLOAD_SVC",
                "Start workload service for {Arg_1}/{Arg_2}."
            ],
            "message": "Start workload service for {Arg_1}/{Arg_2}.",
            "translation": "Start workload service for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_WORKLOAD_DESTROYED",
                "Workload destroyed for {Arg_1}"
            ],
            "message": "Workload destroyed for {Arg_1}",
            "translation": "Workload destroyed for {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_SVC_CONTAINER_STARTED",
                "Service containers for {Arg_1} started."
            ],
            "message": "Service containers for {Arg_1} started.",
            "translation": "Service containers for {Arg_1} started.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_COMPLETE_CLEANUP_SVC",
                "Complete cleaning up the service instance {Arg_1}."
            ],
            "message": "Complete cleaning up the service instance {Arg_1}.",
            "translation": "Complete cleaning up the service instance {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_DEPENDENT_SVC",
                "Start dependent services for {Arg_1}/{Arg_2}."
            ],
            "message": "Start dependent services for {Arg_1}/{Arg_2}.",
            "translation": "Start dependent services for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_DEPENDENT_SVC",
                "Encountered error starting dependen services for {Arg_1}/{Arg_2}. {Arg_3}"
            ],
            "message": "Encountered error starting dependen services for {Arg_1}/{Arg_2}. {Arg_3}",
            "translation": "Encountered error starting dependen services for {Arg_1}/{Arg_2}. {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_DEPENDENT_SVC_FOR_AG",
                "Error starting dependen service {Arg_1}/{Arg_2} version {Arg_3} for agreement {Arg_4}. {Arg_5}"
            ],
            "message": "Error starting dependen service {Arg_1}/{Arg_2} version {Arg_3} for agreement {Arg_4}. {Arg_5}",
            "translation": "Error starting dependen service {Arg_1}/{Arg_2} version {Arg_3} for agreement {Arg_4}. {Arg_5}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                },
                {
                    "id": "Arg_5",
                    "string": "%[5]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 5
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_CLEANUP_SVC",
                "Start cleaning up service {Arg_1} because agreement {Arg_2} ended."
            ],
            "message": "Start cleaning up service {Arg_1} because agreement {Arg_2} ended.",
            "translation": "Start cleaning up service {Arg_1} because agreement {Arg_2} ended.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_SVC",
                "Error starting service {Arg_1}/{Arg_2} version {Arg_3}, error: {Arg_4}"
            ],
            "message": "Error starting service {Arg_1}/{Arg_2} version {Arg_3}, error: {Arg_4}",
            "translation": "Error starting service {Arg_1}/{Arg_2} version {Arg_3}, error: {Arg_4}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_GET_ALL_SVCS_FROM_AGS",
                "Error getting all the services from agreements: {Arg_1}"
            ],
            "message": "Error getting all the services from agreements: {Arg_1}",
            "translation": "Error getting all the services from agreements: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_AGLESS_SVC",
                "Start agreement-less service {Arg_1}/{Arg_2}."
            ],
            "message": "Start agreement-less service {Arg_1}/{Arg_2}.",
            "translation": "Start agreement-less service {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_COMPLETE_START_AGLESS_SVC",
                "Complete starting agreement-less service {Arg_1}/{Arg_2} and its dependents."
            ],
            "message": "Complete starting agreement-less service {Arg_1}/{Arg_2} and its dependents.",
            "translation": "Complete starting agreement-less service {Arg_1}/{Arg_2} and its dependents.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_AGLESS_SVC",
                "Unable to start agreement-less service {Arg_1}/{Arg_2}, error {Arg_3}"
            ],
            "message": "Unable to start agreement-less service {Arg_1}/{Arg_2}, error {Arg_3}",
            "translation": "Unable to start agreement-less service {Arg_1}/{Arg_2}, error {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_AGLESS_SVC_ERR_SEARCH_PATTERN",
                "Unable to start agreement-less services, error searching for pattern {Arg_1} in exchange, error: {Arg_2}"
            ],
            "message": "Unable to start agreement-less services, error searching for pattern {Arg_1} in exchange, error: {Arg_2}",
            "translation": "Unable to start agreement-less services, error searching for pattern {Arg_1} in exchange, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_AGLESS_SVC_ERR_PATTERN_NOT_FOUND",
                "Unable to start agreement-less services, pattern {Arg_1} not found in exchange"
            ],
            "message": "Unable to start agreement-less services, pattern {Arg_1} not found in exchange",
            "translation": "Unable to start agreement-less services, pattern {Arg_1} not found in exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_AGLESS_SVC_ERR_SDEF_NOT_FOUND",
                "Unable to start agreement-less service {Arg_1}/{Arg_2}, local service definition not found"
            ],
            "message": "Unable to start agreement-less service {Arg_1}/{Arg_2}, local service definition not found",
            "translation": "Unable to start agreement-less service {Arg_1}/{Arg_2}, local service definition not found",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_UPGRADE",
                "Start upgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}."
            ],
            "message": "Start upgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}.",
            "translation": "Start upgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_COMPLETE_UPGRADE",
                "Complete upgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}."
            ],
            "message": "Complete upgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}.",
            "translation": "Complete upgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_FAILED_UPGRADE",
                "Failed to upgrade service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}, error: {Arg_5}"
            ],
            "message": "Failed to upgrade service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}, error: {Arg_5}",
            "translation": "Failed to upgrade service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}, error: {Arg_5}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                },
                {
                    "id": "Arg_5",
                    "string": "%[5]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 5
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_DOWNGRADE_FOR_AG",
                "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because service for agreement failed to start."
            ],
            "message": "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because service for agreement failed to start.",
            "translation": "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because service for agreement failed to start.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_DOWNGRADE",
                "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because service failed to start."
            ],
            "message": "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because service failed to start.",
            "translation": "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because service failed to start.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_DOWNGRADE_BECAUSW_UPGRADE_FAILED",
                "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because upgrade failed."
            ],
            "message": "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because upgrade failed.",
            "translation": "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because upgrade failed.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_FAILED_DOWNGRADE",
                "Failed to downgrade service {Arg_1}/{Arg_2} version {Arg_3}, error: {Arg_4}"
            ],
            "message": "Failed to downgrade service {Arg_1}/{Arg_2} version {Arg_3}, error: {Arg_4}",
            "translation": "Failed to downgrade service {Arg_1}/{Arg_2} version {Arg_3}, error: {Arg_4}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_COMPLETE_DOWNGRADE",
                "Complete downgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}."
            ],
            "message": "Complete downgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}.",
            "translation": "Complete downgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_FIND_SDEF_FOR_DOWNGRADE",
                "Error finding the new service definition to downgrade to for {Arg_1}/{Arg_2} version {Arg_3} key {Arg_4}. error: {Arg_5}"
            ],
            "message": "Error finding the new service definition to downgrade to for {Arg_1}/{Arg_2} version {Arg_3} key {Arg_4}. error: {Arg_5}",
            "translation": "Error finding the new service definition to downgrade to for {Arg_1}/{Arg_2} version {Arg_3} key {Arg_4}. error: {Arg_5}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                },
                {
                    "id": "Arg_5",
                    "string": "%[5]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 5
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_NO_VERSION_TO_DOWNGRADE",
                "Could not find lower version to downgrade for {Arg_1}/{Arg_2} version {Arg_3}."
            ],
            "message": "Could not find lower version to downgrade for {Arg_1}/{Arg_2} version {Arg_3}.",
            "translation": "Could not find lower version to downgrade for {Arg_1}/{Arg_2} version {Arg_3}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_DOWNGRADE_FROM",
                "Error downgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}. Eror: {Arg_5}"
            ],
            "message": "Error downgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}. Eror: {Arg_5}",
            "translation": "Error downgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}. Eror: {Arg_5}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                },
                {
                    "id": "Arg_5",
                    "string": "%[5]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 5
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_DOWNGRADE",
                "Error downgrading service {Arg_1}/{Arg_2} version {Arg_3}. {Arg_4}"
            ],
            "message": "Error downgrading service {Arg_1}/{Arg_2} version {Arg_3}. {Arg_4}",
            "translation": "Error downgrading service {Arg_1}/{Arg_2} version {Arg_3}. {Arg_4}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_SVC_RETRY",
                "Start retrying number {Arg_1} for dependent service {Arg_2} version {Arg_3} because service failed."
            ],
            "message": "Start retrying number {Arg_1} for dependent service {Arg_2} version {Arg_3} because service failed.",
            "translation": "Start retrying number {Arg_1} for dependent service {Arg_2} version {Arg_3} because service failed.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_FAILED_SVC_RETRY",
                "Failed retrying number {Arg_1} for dependent service {Arg_2} version {Arg_3}."
            ],
            "message": "Failed retrying number {Arg_1} for dependent service {Arg_2} version {Arg_3}.",
            "translation": "Failed retrying number {Arg_1} for dependent service {Arg_2} version {Arg_3}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_GET_SVC_RETRY_CNT",
                "Failed to get the service retry count for {Arg_1} version {Arg_2}. {Arg_3}"
            ],
            "message": "Failed to get the service retry count for {Arg_1} version {Arg_2}. {Arg_3}",
            "translation": "Failed to get the service retry count for {Arg_1} version {Arg_2}. {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_UPDATE_SVC_RETRY_STATE",
                "Error updating retry start state for service instance {Arg_1} in dadabase. {Arg_2}"
            ],
            "message": "Error updating retry start state for service instance {Arg_1} in dadabase. {Arg_2}",
            "translation": "Error updating retry start state for service instance {Arg_1} in dadabase. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to make directory for self signed MMS API certificate, error {Err}",
            "message": "unable to make directory for self signed MMS API certificate, error {Err}",
            "translation": "unable to make directory for self signed MMS API certificate, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to generate random number for MMS API certificate serial number, error {Err}",
            "message": "unable to generate random number for MMS API certificate serial number, error {Err}",
            "translation": "unable to generate random number for MMS API certificate serial number, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to generate private key for MMS API certificate, error {Err}",
            "message": "unable to generate private key for MMS API certificate, error {Err}",
            "translation": "unable to generate private key for MMS API certificate, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create MMS API certificate, error {Err}",
            "message": "unable to create MMS API certificate, error {Err}",
            "translation": "unable to create MMS API certificate, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
            "message": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
            "translation": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerCertificate",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerCertificate"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
            "message": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
            "translation": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerCertificate",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerCertificate"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
            "message": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
            "translation": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerCertificate",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerCertificate"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
            "message": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
            "translation": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
            "message": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
            "translation": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
            "message": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
            "translation": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error parsing the selections {Form}. {Err}",
            "message": "Error parsing the selections {Form}. {Err}",
            "translation": "Error parsing the selections {Form}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Form",
                    "string": "%[1]v",
                    "type": "net/url.Values",
                    "underlyingType": "map[string][]string",
                    "argNum": 1,
                    "expr": "r.Form"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting {Resource} for output, error {Err}",
            "message": "Error getting {Resource} for output, error {Err}",
            "translation": "Error getting {Resource} for output, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Resource",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "resource"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_REG",
                "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_UNREG",
                "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_UPDATE",
                "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_POLICY",
                "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_POLICY_PATCH",
                "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_POLICY_PATCH_INPUT_PROPERTY_ERROR",
                "Error parsing input for node policy patch. Input body did not contain a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node policy patch. Input body did not contain a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node policy patch. Input body did not contain a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_UI",
                "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_REG",
                "Error in node configuration/registration for node {Arg_1}. {Arg_2}"
            ],
            "message": "Error in node configuration/registration for node {Arg_1}. {Arg_2}",
            "translation": "Error in node configuration/registration for node {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UPDATE",
                "Error in updating node {Arg_1}. {Arg_2}"
            ],
            "message": "Error in updating node {Arg_1}. {Arg_2}",
            "translation": "Error in updating node {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UNREG",
                "Error in node unregistration. {Arg_1}"
            ],
            "message": "Error in node unregistration. {Arg_1}",
            "translation": "Error in node unregistration. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_VERIFY_EXCH_VERSION",
                "Error verifiying exchange version. error: {Arg_1}"
            ],
            "message": "Error verifiying exchange version. error: {Arg_1}",
            "translation": "Error verifiying exchange version. error: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_POLICY_CREATE",
                "Error in creating or replacing node policy. {Arg_1}"
            ],
            "message": "Error in creating or replacing node policy. {Arg_1}",
            "translation": "Error in creating or replacing node policy. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_POLICY_PATCH",
                "Error in patching node policy. {Arg_1}"
            ],
            "message": "Error in patching node policy. {Arg_1}",
            "translation": "Error in patching node policy. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_POLICY_DEL",
                "Error in deleting node policy. {Arg_1}"
            ],
            "message": "Error in deleting node policy. {Arg_1}",
            "translation": "Error in deleting node policy. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UI_UPDATE",
                "Error in updating node user input. {Arg_1}"
            ],
            "message": "Error in updating node user input. {Arg_1}",
            "translation": "Error in updating node user input. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UI_PATCH",
                "Error in patching node user input. {Arg_1}"
            ],
            "message": "Error in patching node user input. {Arg_1}",
            "translation": "Error in patching node user input. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UI_DEL",
                "Error in deleting node userinput. {Arg_1}"
            ],
            "message": "Error in deleting node userinput. {Arg_1}",
            "translation": "Error in deleting node userinput. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_NODE_REG",
                "Start node configuration/registration for node {Arg_1}."
            ],
            "message": "Start node configuration/registration for node {Arg_1}.",
            "translation": "Start node configuration/registration for node {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_NODE_UPDATE",
                "Start updating node {Arg_1}."
            ],
            "message": "Start updating node {Arg_1}.",
            "translation": "Start updating node {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_NODE_UPDATE",
                "Complete node update for {Arg_1}."
            ],
            "message": "Complete node update for {Arg_1}.",
            "translation": "Complete node update for {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_NODE_UNREG",
                "Start node unregistration."
            ],
            "message": "Start node unregistration.",
            "translation": "Start node unregistration.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_NODE_UNREG",
                "Node unregistration complete for node {Arg_1}."
            ],
            "message": "Node unregistration complete for node {Arg_1}.",
            "translation": "Node unregistration complete for node {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_NOT_FOUND",
                "Error unregistring the node. The node is not found from the database."
            ],
            "message": "Error unregistring the node. The node is not found from the database.",
            "translation": "Error unregistring the node. The node is not found from the database.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_NOT_IN_STATE",
                "Error unregistring the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it."
            ],
            "message": "Error unregistring the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it.",
            "translation": "Error unregistring the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_WRONG_VALUE_FOR_RN",
                "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode"
            ],
            "message": "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode",
            "translation": "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_WRONG_VALUE_FOR_DC",
                "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean"
            ],
            "message": "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean",
            "translation": "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_WRONG_VALUE_FOR_BLOCK",
                "Input error for node unregistration. {Arg_1} is an incorrect value for block"
            ],
            "message": "Input error for node unregistration. {Arg_1} is an incorrect value for block",
            "translation": "Input error for node unregistration. {Arg_1} is an incorrect value for block",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_READ_NODE_FROM_DB",
                "Unable to read node object from database, error {Arg_1}"
            ],
            "message": "Unable to read node object from database, error {Arg_1}",
            "translation": "Unable to read node object from database, error {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_SAVE_NODE_CONF_TO_DB",
                "Error saving new node config state (unconfiguring) in the database: {Arg_1}"
            ],
            "message": "Error saving new node config state (unconfiguring) in the database: {Arg_1}",
            "translation": "Error saving new node config state (unconfiguring) in the database: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_CONF_NOT_FOUND",
                "Error in node configuration. The node is not found from the database."
            ],
            "message": "Error in node configuration. The node is not found from the database.",
            "translation": "Error in node configuration. The node is not found from the database.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_CONF_WRONG_STATE",
                "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}."
            ],
            "message": "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}.",
            "translation": "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_UNSUP_NODE_STATE_TRANS",
                "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported."
            ],
            "message": "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported.",
            "translation": "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_FAIL_GET_UI_FROM_DB",
                "Failed get user input from local db. {Arg_1}"
            ],
            "message": "Failed get user input from local db. {Arg_1}",
            "translation": "Failed get user input from local db. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_FAIL_FIND_SVC_PREF_FROM_UI",
                "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}"
            ],
            "message": "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}",
            "translation": "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_SAVE_NODE_CONFSTATE",
                "Error saving new node config state to database: {Arg_1}"
            ],
            "message": "Error saving new node config state to database: {Arg_1}",
            "translation": "Error saving new node config state to database: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_NODE_REG",
                "Complete node configuration/registration for node {Arg_1}."
            ],
            "message": "Complete node configuration/registration for node {Arg_1}.",
            "translation": "Complete node configuration/registration for node {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_SVC_CONF",
                "Error in service configuration for {Arg_1}. {Arg_2}"
            ],
            "message": "Error in service configuration for {Arg_1}. {Arg_2}",
            "translation": "Error in service configuration for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_GET_SREFS_FOR_PATTERN",
                "Error getting service references for pattern {Arg_1}. {Arg_2}"
            ],
            "message": "Error getting service references for pattern {Arg_1}. {Arg_2}",
            "translation": "Error getting service references for pattern {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NEW_NODE_POL",
                "New node policy: {Arg_1}"
            ],
            "message": "New node policy: {Arg_1}",
            "translation": "New node policy: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NODE_POL_DELETED",
                "Deleted node policy"
            ],
            "message": "Deleted node policy",
            "translation": "Deleted node policy",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NEW_NODE_UI",
                "New node user input: {Arg_1}"
            ],
            "message": "New node user input: {Arg_1}",
            "translation": "New node user input: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NO_NODE_UI_TO_DEL",
                "No node user input to detele"
            ],
            "message": "No node user input to detele",
            "translation": "No node user input to detele",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_DELETED_ALL_NODE_UI",
                "Deleted all node user input"
            ],
            "message": "Deleted all node user input",
            "translation": "Deleted all node user input",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_SVC_CONFIG",
                "Start service configuration with user input for {Arg_1}/{Arg_2}."
            ],
            "message": "Start service configuration with user input for {Arg_1}/{Arg_2}.",
            "translation": "Start service configuration with user input for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_SVC_AUTO_CONFIG",
                "Start service auto configuration for {Arg_1}/{Arg_2}."
            ],
            "message": "Start service auto configuration for {Arg_1}/{Arg_2}.",
            "translation": "Start service auto configuration for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_SVC_CONFIG",
                "Complete service configuration for {Arg_1}/{Arg_2}."
            ],
            "message": "Complete service configuration for {Arg_1}/{Arg_2}.",
            "translation": "Complete service configuration for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_SVC_AUTO_CONFIG",
                "Complete service auto configuration for {Arg_1}/{Arg_2}."
            ],
            "message": "Complete service auto configuration for {Arg_1}/{Arg_2}.",
            "translation": "Complete service auto configuration for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_MISS_VAR_IN_SVC_CONFIG",
                "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may cause agreement not formed if the business policy does not contain the setting for the missing variable."
            ],
            "message": "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may cause agreement not formed if the business policy does not contain the setting for the missing variable.",
            "translation": "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may cause agreement not formed if the business policy does not contain the setting for the missing variable.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_CONFIG_SVC",
                "Error configuring service {Arg_1}. {Arg_2}"
            ],
            "message": "Error configuring service {Arg_1}. {Arg_2}",
            "translation": "Error configuring service {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_CHANGE_SVC_CONFIGSTATE",
                "Error changing service configstate {Arg_1}, error {Arg_2}"
            ],
            "message": "Error changing service configstate {Arg_1}, error {Arg_2}",
            "translation": "Error changing service configstate {Arg_1}, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_CHANGE_SVC_CONFIGSTATE",
                "Start changing service configuration state to {Arg_1} for {Arg_2} for the node."
            ],
            "message": "Start changing service configuration state to {Arg_1} for {Arg_2} for the node.",
            "translation": "Start changing service configuration state to {Arg_1} for {Arg_2} for the node.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_CHANGE_SVC_CONFIGSTATE",
                "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node."
            ],
            "message": "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node.",
            "translation": "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error converting the selections into Selectors: {Err}",
            "message": "Error converting the selections into Selectors: {Err}",
            "translation": "Error converting the selections into Selectors: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property must include a name and a value: {Property}",
            "message": "Property must include a name and a value: {Property}",
            "translation": "Property must include a name and a value: {Property}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Property",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/externalpolicy.Property",
                    "underlyingType": "struct{Name string \"json:\\\"name\\\"\"; Value interface{} \"json:\\\"value\\\"\"; Type string \"json:\\\"type,omitempty\\\"\"}",
                    "argNum": 1,
                    "expr": "property"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of string.",
            "message": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of string.",
            "translation": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "property.Name"
                },
                {
                    "id": "DeclaredType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "declaredType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property value is of type {ActualType}, expected type {DeclaredType}",
            "message": "Property value is of type {ActualType}, expected type {DeclaredType}",
            "translation": "Property value is of type {ActualType}, expected type {DeclaredType}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ActualType",
                    "string": "%[1]T",
                    "type": "bool",
                    "underlyingType": "bool",
                    "argNum": 1,
                    "expr": "actualType"
                },
                {
                    "id": "DeclaredType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "declaredType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Value {Value} of property {Name} is not an integer type",
            "message": "Value {Value} of property {Name} is not an integer type",
            "translation": "Value {Value} of property {Name} is not an integer type",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Value",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "property.Value"
                },
                {
                    "id": "Name",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "property.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
            "message": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
            "translation": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Value",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "property.Value"
                },
                {
                    "id": "Name",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "property.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {Name} with value {Value} is not a valid verion string",
            "message": "Property {Name} with value {Value} is not a valid verion string",
            "translation": "Property {Name} with value {Value} is not a valid verion string",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "property.Name"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "property.Value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {Name} has invalid value type {ActualType}",
            "message": "Property {Name} has invalid value type {ActualType}",
            "translation": "Property {Name} has invalid value type {ActualType}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "property.Name"
                },
                {
                    "id": "ActualType",
                    "string": "%[2]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "actualType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: Whitespace is not permitted in {Expr}.",
            "message": "Version_Expression: Whitespace is not permitted in {Expr}.",
            "translation": "Version_Expression: Whitespace is not permitted in {Expr}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Expr",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "expr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: {Verstring} is not a valid version string.",
            "message": "Version_Expression: {Verstring} is not a valid version string.",
            "translation": "Version_Expression: {Verstring} is not a valid version string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver_string"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
            "message": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
            "translation": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver_string"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
            "message": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
            "translation": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver_string"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
            "message": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
            "translation": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Expr",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "expr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input version string {V1} or {V2} is not a valid single version string.",
            "message": "Input version string {V1} or {V2} is not a valid single version string.",
            "translation": "Input version string {V1} or {V2} is not a valid single version string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "V1",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "v1"
                },
                {
                    "id": "V2",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "v2"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
            "message": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
            "translation": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dconstraints",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "dconstraints"
                },
                {
                    "id": "Dconstraints_1",
                    "string": "%[2]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "dconstraints"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to convert policy constraint {Remainder} into internal format, error {Err}",
            "message": "unable to convert policy constraint {Remainder} into internal format, error {Err}",
            "translation": "unable to convert policy constraint {Remainder} into internal format, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Remainder",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "remainder"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Logical operator {NextLogicalOperator} is not valid, expecting AND, OR, \u0026\u0026, ||",
            "message": "Logical operator {NextLogicalOperator} is not valid, expecting AND, OR, \u0026\u0026, ||",
            "translation": "Logical operator {NextLogicalOperator} is not valid, expecting AND, OR, \u0026\u0026, ||",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NextLogicalOperator",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nextLogicalOperator"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is \u003cproperty\u003e == \u003cvalue\u003e",
            "message": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is \u003cproperty\u003e == \u003cvalue\u003e",
            "translation": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is \u003cproperty\u003e == \u003cvalue\u003e",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Lenpieces",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "len(pieces)"
                },
                {
                    "id": "Expression",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "expression"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is expression with 3 tokens: \u003cproperty\u003e \u003coperator\u003e \u003cvalue\u003e in constraint expression",
            "message": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is expression with 3 tokens: \u003cproperty\u003e \u003coperator\u003e \u003cvalue\u003e in constraint expression",
            "translation": "found {Lenpieces} token(s), expecting 3 in an expression {Expression}, expected form is expression with 3 tokens: \u003cproperty\u003e \u003coperator\u003e \u003cvalue\u003e in constraint expression",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Lenpieces",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "len(pieces)"
                },
                {
                    "id": "Expression",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "expression"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Expression: {Expression} should contain valid comparison operator - wrong operator {Pieces1}. Allowed operators: {Lessthan}, {Greaterthan}, {Equalto}, {Doubleequalto}, {Lessthaneq}, {Greaterthaneq}, {Notequalto}, {Inoperator}",
            "message": "Expression: {Expression} should contain valid comparison operator - wrong operator {Pieces1}. Allowed operators: {Lessthan}, {Greaterthan}, {Equalto}, {Doubleequalto}, {Lessthaneq}, {Greaterthaneq}, {Notequalto}, {Inoperator}",
            "translation": "Expression: {Expression} should contain valid comparison operator - wrong operator {Pieces1}. Allowed operators: {Lessthan}, {Greaterthan}, {Equalto}, {Doubleequalto}, {Lessthaneq}, {Greaterthaneq}, {Notequalto}, {Inoperator}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Expression",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "expression"
                },
                {
                    "id": "Pieces1",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "pieces[1]"
                },
                {
                    "id": "Lessthan",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "lessthan"
                },
                {
                    "id": "Greaterthan",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "greaterthan"
                },
                {
                    "id": "Equalto",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "equalto"
                },
                {
                    "id": "Doubleequalto",
                    "string": "%[6]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 6,
                    "expr": "doubleequalto"
                },
                {
                    "id": "Lessthaneq",
                    "string": "%[7]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 7,
                    "expr": "lessthaneq"
                },
                {
                    "id": "Greaterthaneq",
                    "string": "%[8]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 8,
                    "expr": "greaterthaneq"
                },
                {
                    "id": "Notequalto",
                    "string": "%[9]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 9,
                    "expr": "notequalto"
                },
                {
                    "id": "Inoperator",
                    "string": "%[10]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 10,
                    "expr": "inoperator"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Comparison operator: {CompOp} is not supported for numeric value: {Value}",
            "message": "Comparison operator: {CompOp} is not supported for numeric value: {Value}",
            "translation": "Comparison operator: {CompOp} is not supported for numeric value: {Value}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompOp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compOp"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Comparison operator: {CompOp} is not supported for boolean value: {Value}",
            "message": "Comparison operator: {CompOp} is not supported for boolean value: {Value}",
            "translation": "Comparison operator: {CompOp} is not supported for boolean value: {Value}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompOp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compOp"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Comparison operator: {CompOp} is not supported for string list value: {Value}",
            "message": "Comparison operator: {CompOp} is not supported for string list value: {Value}",
            "translation": "Comparison operator: {CompOp} is not supported for string list value: {Value}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompOp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compOp"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Comparison operator: {CompOp} is not supported for string value: {Value}",
            "message": "Comparison operator: {CompOp} is not supported for string value: {Value}",
            "translation": "Comparison operator: {CompOp} is not supported for string value: {Value}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompOp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compOp"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Comparison operator: {CompOp} is not supported for single version: {Value}",
            "message": "Comparison operator: {CompOp} is not supported for single version: {Value}",
            "translation": "Comparison operator: {CompOp} is not supported for single version: {Value}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompOp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compOp"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Comparison operator: {CompOp} is not supported for version expression: {Value}",
            "message": "Comparison operator: {CompOp} is not supported for version expression: {Value}",
            "translation": "Comparison operator: {CompOp} is not supported for version expression: {Value}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CompOp",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "compOp"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Expression: {Expression} is not valid",
            "message": "Expression: {Expression} is not valid",
            "translation": "Expression: {Expression} is not valid",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Expression",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "expression"
                }
            ],
            "fuzzy": true
        }
    ]
}